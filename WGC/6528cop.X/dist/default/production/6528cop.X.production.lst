

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue May 23 19:32:48 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16LF1527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.41
    45                           ; Generated 25/01/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16LF1527 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000F                     	;# 
    94  0010                     	;# 
    95  0011                     	;# 
    96  0012                     	;# 
    97  0013                     	;# 
    98  0014                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  011D                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  018F                     	;# 
   138  0190                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  0199                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019A                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019D                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019E                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  019F                     	;# 
   169  019F                     	;# 
   170  020D                     	;# 
   171  020F                     	;# 
   172  0210                     	;# 
   173  0211                     	;# 
   174  0211                     	;# 
   175  0212                     	;# 
   176  0212                     	;# 
   177  0213                     	;# 
   178  0213                     	;# 
   179  0214                     	;# 
   180  0214                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0216                     	;# 
   185  0216                     	;# 
   186  0217                     	;# 
   187  0217                     	;# 
   188  0219                     	;# 
   189  021A                     	;# 
   190  021B                     	;# 
   191  021C                     	;# 
   192  021D                     	;# 
   193  021E                     	;# 
   194  021F                     	;# 
   195  028C                     	;# 
   196  028D                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0298                     	;# 
   202  0298                     	;# 
   203  0299                     	;# 
   204  029A                     	;# 
   205  029D                     	;# 
   206  029E                     	;# 
   207  029F                     	;# 
   208  030C                     	;# 
   209  030D                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  0318                     	;# 
   215  0318                     	;# 
   216  0319                     	;# 
   217  031A                     	;# 
   218  031C                     	;# 
   219  031C                     	;# 
   220  031D                     	;# 
   221  031E                     	;# 
   222  038C                     	;# 
   223  038D                     	;# 
   224  0394                     	;# 
   225  0395                     	;# 
   226  0396                     	;# 
   227  040C                     	;# 
   228  040D                     	;# 
   229  0411                     	;# 
   230  0411                     	;# 
   231  0412                     	;# 
   232  0413                     	;# 
   233  0414                     	;# 
   234  0415                     	;# 
   235  0416                     	;# 
   236  0417                     	;# 
   237  0418                     	;# 
   238  0418                     	;# 
   239  0419                     	;# 
   240  041A                     	;# 
   241  041B                     	;# 
   242  041C                     	;# 
   243  041D                     	;# 
   244  041E                     	;# 
   245  048D                     	;# 
   246  0491                     	;# 
   247  0491                     	;# 
   248  0492                     	;# 
   249  0492                     	;# 
   250  0493                     	;# 
   251  0493                     	;# 
   252  0493                     	;# 
   253  0494                     	;# 
   254  0494                     	;# 
   255  0495                     	;# 
   256  0495                     	;# 
   257  0496                     	;# 
   258  0496                     	;# 
   259  0497                     	;# 
   260  0497                     	;# 
   261  0595                     	;# 
   262  0596                     	;# 
   263  0597                     	;# 
   264  059C                     	;# 
   265  059D                     	;# 
   266  059E                     	;# 
   267  0611                     	;# 
   268  0611                     	;# 
   269  0612                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0614                     	;# 
   273  0615                     	;# 
   274  0616                     	;# 
   275  0617                     	;# 
   276  0617                     	;# 
   277  0618                     	;# 
   278  0619                     	;# 
   279  061A                     	;# 
   280  061A                     	;# 
   281  061B                     	;# 
   282  061C                     	;# 
   283  061D                     	;# 
   284  061D                     	;# 
   285  061E                     	;# 
   286  061F                     	;# 
   287  0FE4                     	;# 
   288  0FE5                     	;# 
   289  0FE6                     	;# 
   290  0FE7                     	;# 
   291  0FE8                     	;# 
   292  0FE9                     	;# 
   293  0FEA                     	;# 
   294  0FEB                     	;# 
   295  0FED                     	;# 
   296  0FEE                     	;# 
   297  0FEF                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0110                     	;# 
   352  0116                     	;# 
   353  0117                     	;# 
   354  011D                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  018F                     	;# 
   358  0190                     	;# 
   359  0191                     	;# 
   360  0191                     	;# 
   361  0192                     	;# 
   362  0193                     	;# 
   363  0193                     	;# 
   364  0194                     	;# 
   365  0195                     	;# 
   366  0196                     	;# 
   367  0199                     	;# 
   368  0199                     	;# 
   369  0199                     	;# 
   370  019A                     	;# 
   371  019A                     	;# 
   372  019A                     	;# 
   373  019B                     	;# 
   374  019B                     	;# 
   375  019B                     	;# 
   376  019B                     	;# 
   377  019B                     	;# 
   378  019C                     	;# 
   379  019C                     	;# 
   380  019C                     	;# 
   381  019D                     	;# 
   382  019D                     	;# 
   383  019D                     	;# 
   384  019E                     	;# 
   385  019E                     	;# 
   386  019E                     	;# 
   387  019F                     	;# 
   388  019F                     	;# 
   389  019F                     	;# 
   390  020D                     	;# 
   391  020F                     	;# 
   392  0210                     	;# 
   393  0211                     	;# 
   394  0211                     	;# 
   395  0212                     	;# 
   396  0212                     	;# 
   397  0213                     	;# 
   398  0213                     	;# 
   399  0214                     	;# 
   400  0214                     	;# 
   401  0215                     	;# 
   402  0215                     	;# 
   403  0215                     	;# 
   404  0216                     	;# 
   405  0216                     	;# 
   406  0217                     	;# 
   407  0217                     	;# 
   408  0219                     	;# 
   409  021A                     	;# 
   410  021B                     	;# 
   411  021C                     	;# 
   412  021D                     	;# 
   413  021E                     	;# 
   414  021F                     	;# 
   415  028C                     	;# 
   416  028D                     	;# 
   417  0291                     	;# 
   418  0291                     	;# 
   419  0292                     	;# 
   420  0293                     	;# 
   421  0298                     	;# 
   422  0298                     	;# 
   423  0299                     	;# 
   424  029A                     	;# 
   425  029D                     	;# 
   426  029E                     	;# 
   427  029F                     	;# 
   428  030C                     	;# 
   429  030D                     	;# 
   430  0311                     	;# 
   431  0311                     	;# 
   432  0312                     	;# 
   433  0313                     	;# 
   434  0318                     	;# 
   435  0318                     	;# 
   436  0319                     	;# 
   437  031A                     	;# 
   438  031C                     	;# 
   439  031C                     	;# 
   440  031D                     	;# 
   441  031E                     	;# 
   442  038C                     	;# 
   443  038D                     	;# 
   444  0394                     	;# 
   445  0395                     	;# 
   446  0396                     	;# 
   447  040C                     	;# 
   448  040D                     	;# 
   449  0411                     	;# 
   450  0411                     	;# 
   451  0412                     	;# 
   452  0413                     	;# 
   453  0414                     	;# 
   454  0415                     	;# 
   455  0416                     	;# 
   456  0417                     	;# 
   457  0418                     	;# 
   458  0418                     	;# 
   459  0419                     	;# 
   460  041A                     	;# 
   461  041B                     	;# 
   462  041C                     	;# 
   463  041D                     	;# 
   464  041E                     	;# 
   465  048D                     	;# 
   466  0491                     	;# 
   467  0491                     	;# 
   468  0492                     	;# 
   469  0492                     	;# 
   470  0493                     	;# 
   471  0493                     	;# 
   472  0493                     	;# 
   473  0494                     	;# 
   474  0494                     	;# 
   475  0495                     	;# 
   476  0495                     	;# 
   477  0496                     	;# 
   478  0496                     	;# 
   479  0497                     	;# 
   480  0497                     	;# 
   481  0595                     	;# 
   482  0596                     	;# 
   483  0597                     	;# 
   484  059C                     	;# 
   485  059D                     	;# 
   486  059E                     	;# 
   487  0611                     	;# 
   488  0611                     	;# 
   489  0612                     	;# 
   490  0613                     	;# 
   491  0614                     	;# 
   492  0614                     	;# 
   493  0615                     	;# 
   494  0616                     	;# 
   495  0617                     	;# 
   496  0617                     	;# 
   497  0618                     	;# 
   498  0619                     	;# 
   499  061A                     	;# 
   500  061A                     	;# 
   501  061B                     	;# 
   502  061C                     	;# 
   503  061D                     	;# 
   504  061D                     	;# 
   505  061E                     	;# 
   506  061F                     	;# 
   507  0FE4                     	;# 
   508  0FE5                     	;# 
   509  0FE6                     	;# 
   510  0FE7                     	;# 
   511  0FE8                     	;# 
   512  0FE9                     	;# 
   513  0FEA                     	;# 
   514  0FEB                     	;# 
   515  0FED                     	;# 
   516  0FEE                     	;# 
   517  0FEF                     	;# 
   518  0000                     	;# 
   519  0001                     	;# 
   520  0002                     	;# 
   521  0003                     	;# 
   522  0004                     	;# 
   523  0005                     	;# 
   524  0006                     	;# 
   525  0007                     	;# 
   526  0008                     	;# 
   527  0009                     	;# 
   528  000A                     	;# 
   529  000B                     	;# 
   530  000C                     	;# 
   531  000D                     	;# 
   532  000E                     	;# 
   533  000F                     	;# 
   534  0010                     	;# 
   535  0011                     	;# 
   536  0012                     	;# 
   537  0013                     	;# 
   538  0014                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  008F                     	;# 
   552  0090                     	;# 
   553  0091                     	;# 
   554  0092                     	;# 
   555  0093                     	;# 
   556  0094                     	;# 
   557  0095                     	;# 
   558  0096                     	;# 
   559  0097                     	;# 
   560  0099                     	;# 
   561  009A                     	;# 
   562  009B                     	;# 
   563  009B                     	;# 
   564  009C                     	;# 
   565  009D                     	;# 
   566  009E                     	;# 
   567  010C                     	;# 
   568  010D                     	;# 
   569  010E                     	;# 
   570  010F                     	;# 
   571  0110                     	;# 
   572  0116                     	;# 
   573  0117                     	;# 
   574  011D                     	;# 
   575  018C                     	;# 
   576  018D                     	;# 
   577  018F                     	;# 
   578  0190                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0194                     	;# 
   585  0195                     	;# 
   586  0196                     	;# 
   587  0199                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  019A                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019D                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019E                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019F                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  020D                     	;# 
   611  020F                     	;# 
   612  0210                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  0212                     	;# 
   616  0212                     	;# 
   617  0213                     	;# 
   618  0213                     	;# 
   619  0214                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0216                     	;# 
   625  0216                     	;# 
   626  0217                     	;# 
   627  0217                     	;# 
   628  0219                     	;# 
   629  021A                     	;# 
   630  021B                     	;# 
   631  021C                     	;# 
   632  021D                     	;# 
   633  021E                     	;# 
   634  021F                     	;# 
   635  028C                     	;# 
   636  028D                     	;# 
   637  0291                     	;# 
   638  0291                     	;# 
   639  0292                     	;# 
   640  0293                     	;# 
   641  0298                     	;# 
   642  0298                     	;# 
   643  0299                     	;# 
   644  029A                     	;# 
   645  029D                     	;# 
   646  029E                     	;# 
   647  029F                     	;# 
   648  030C                     	;# 
   649  030D                     	;# 
   650  0311                     	;# 
   651  0311                     	;# 
   652  0312                     	;# 
   653  0313                     	;# 
   654  0318                     	;# 
   655  0318                     	;# 
   656  0319                     	;# 
   657  031A                     	;# 
   658  031C                     	;# 
   659  031C                     	;# 
   660  031D                     	;# 
   661  031E                     	;# 
   662  038C                     	;# 
   663  038D                     	;# 
   664  0394                     	;# 
   665  0395                     	;# 
   666  0396                     	;# 
   667  040C                     	;# 
   668  040D                     	;# 
   669  0411                     	;# 
   670  0411                     	;# 
   671  0412                     	;# 
   672  0413                     	;# 
   673  0414                     	;# 
   674  0415                     	;# 
   675  0416                     	;# 
   676  0417                     	;# 
   677  0418                     	;# 
   678  0418                     	;# 
   679  0419                     	;# 
   680  041A                     	;# 
   681  041B                     	;# 
   682  041C                     	;# 
   683  041D                     	;# 
   684  041E                     	;# 
   685  048D                     	;# 
   686  0491                     	;# 
   687  0491                     	;# 
   688  0492                     	;# 
   689  0492                     	;# 
   690  0493                     	;# 
   691  0493                     	;# 
   692  0493                     	;# 
   693  0494                     	;# 
   694  0494                     	;# 
   695  0495                     	;# 
   696  0495                     	;# 
   697  0496                     	;# 
   698  0496                     	;# 
   699  0497                     	;# 
   700  0497                     	;# 
   701  0595                     	;# 
   702  0596                     	;# 
   703  0597                     	;# 
   704  059C                     	;# 
   705  059D                     	;# 
   706  059E                     	;# 
   707  0611                     	;# 
   708  0611                     	;# 
   709  0612                     	;# 
   710  0613                     	;# 
   711  0614                     	;# 
   712  0614                     	;# 
   713  0615                     	;# 
   714  0616                     	;# 
   715  0617                     	;# 
   716  0617                     	;# 
   717  0618                     	;# 
   718  0619                     	;# 
   719  061A                     	;# 
   720  061A                     	;# 
   721  061B                     	;# 
   722  061C                     	;# 
   723  061D                     	;# 
   724  061D                     	;# 
   725  061E                     	;# 
   726  061F                     	;# 
   727  0FE4                     	;# 
   728  0FE5                     	;# 
   729  0FE6                     	;# 
   730  0FE7                     	;# 
   731  0FE8                     	;# 
   732  0FE9                     	;# 
   733  0FEA                     	;# 
   734  0FEB                     	;# 
   735  0FED                     	;# 
   736  0FEE                     	;# 
   737  0FEF                     	;# 
   738  0000                     	;# 
   739  0001                     	;# 
   740  0002                     	;# 
   741  0003                     	;# 
   742  0004                     	;# 
   743  0005                     	;# 
   744  0006                     	;# 
   745  0007                     	;# 
   746  0008                     	;# 
   747  0009                     	;# 
   748  000A                     	;# 
   749  000B                     	;# 
   750  000C                     	;# 
   751  000D                     	;# 
   752  000E                     	;# 
   753  000F                     	;# 
   754  0010                     	;# 
   755  0011                     	;# 
   756  0012                     	;# 
   757  0013                     	;# 
   758  0014                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  008C                     	;# 
   769  008D                     	;# 
   770  008E                     	;# 
   771  008F                     	;# 
   772  0090                     	;# 
   773  0091                     	;# 
   774  0092                     	;# 
   775  0093                     	;# 
   776  0094                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0099                     	;# 
   781  009A                     	;# 
   782  009B                     	;# 
   783  009B                     	;# 
   784  009C                     	;# 
   785  009D                     	;# 
   786  009E                     	;# 
   787  010C                     	;# 
   788  010D                     	;# 
   789  010E                     	;# 
   790  010F                     	;# 
   791  0110                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  011D                     	;# 
   795  018C                     	;# 
   796  018D                     	;# 
   797  018F                     	;# 
   798  0190                     	;# 
   799  0191                     	;# 
   800  0191                     	;# 
   801  0192                     	;# 
   802  0193                     	;# 
   803  0193                     	;# 
   804  0194                     	;# 
   805  0195                     	;# 
   806  0196                     	;# 
   807  0199                     	;# 
   808  0199                     	;# 
   809  0199                     	;# 
   810  019A                     	;# 
   811  019A                     	;# 
   812  019A                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019B                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019C                     	;# 
   821  019D                     	;# 
   822  019D                     	;# 
   823  019D                     	;# 
   824  019E                     	;# 
   825  019E                     	;# 
   826  019E                     	;# 
   827  019F                     	;# 
   828  019F                     	;# 
   829  019F                     	;# 
   830  020D                     	;# 
   831  020F                     	;# 
   832  0210                     	;# 
   833  0211                     	;# 
   834  0211                     	;# 
   835  0212                     	;# 
   836  0212                     	;# 
   837  0213                     	;# 
   838  0213                     	;# 
   839  0214                     	;# 
   840  0214                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0215                     	;# 
   844  0216                     	;# 
   845  0216                     	;# 
   846  0217                     	;# 
   847  0217                     	;# 
   848  0219                     	;# 
   849  021A                     	;# 
   850  021B                     	;# 
   851  021C                     	;# 
   852  021D                     	;# 
   853  021E                     	;# 
   854  021F                     	;# 
   855  028C                     	;# 
   856  028D                     	;# 
   857  0291                     	;# 
   858  0291                     	;# 
   859  0292                     	;# 
   860  0293                     	;# 
   861  0298                     	;# 
   862  0298                     	;# 
   863  0299                     	;# 
   864  029A                     	;# 
   865  029D                     	;# 
   866  029E                     	;# 
   867  029F                     	;# 
   868  030C                     	;# 
   869  030D                     	;# 
   870  0311                     	;# 
   871  0311                     	;# 
   872  0312                     	;# 
   873  0313                     	;# 
   874  0318                     	;# 
   875  0318                     	;# 
   876  0319                     	;# 
   877  031A                     	;# 
   878  031C                     	;# 
   879  031C                     	;# 
   880  031D                     	;# 
   881  031E                     	;# 
   882  038C                     	;# 
   883  038D                     	;# 
   884  0394                     	;# 
   885  0395                     	;# 
   886  0396                     	;# 
   887  040C                     	;# 
   888  040D                     	;# 
   889  0411                     	;# 
   890  0411                     	;# 
   891  0412                     	;# 
   892  0413                     	;# 
   893  0414                     	;# 
   894  0415                     	;# 
   895  0416                     	;# 
   896  0417                     	;# 
   897  0418                     	;# 
   898  0418                     	;# 
   899  0419                     	;# 
   900  041A                     	;# 
   901  041B                     	;# 
   902  041C                     	;# 
   903  041D                     	;# 
   904  041E                     	;# 
   905  048D                     	;# 
   906  0491                     	;# 
   907  0491                     	;# 
   908  0492                     	;# 
   909  0492                     	;# 
   910  0493                     	;# 
   911  0493                     	;# 
   912  0493                     	;# 
   913  0494                     	;# 
   914  0494                     	;# 
   915  0495                     	;# 
   916  0495                     	;# 
   917  0496                     	;# 
   918  0496                     	;# 
   919  0497                     	;# 
   920  0497                     	;# 
   921  0595                     	;# 
   922  0596                     	;# 
   923  0597                     	;# 
   924  059C                     	;# 
   925  059D                     	;# 
   926  059E                     	;# 
   927  0611                     	;# 
   928  0611                     	;# 
   929  0612                     	;# 
   930  0613                     	;# 
   931  0614                     	;# 
   932  0614                     	;# 
   933  0615                     	;# 
   934  0616                     	;# 
   935  0617                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  061A                     	;# 
   940  061A                     	;# 
   941  061B                     	;# 
   942  061C                     	;# 
   943  061D                     	;# 
   944  061D                     	;# 
   945  061E                     	;# 
   946  061F                     	;# 
   947  0FE4                     	;# 
   948  0FE5                     	;# 
   949  0FE6                     	;# 
   950  0FE7                     	;# 
   951  0FE8                     	;# 
   952  0FE9                     	;# 
   953  0FEA                     	;# 
   954  0FEB                     	;# 
   955  0FED                     	;# 
   956  0FEE                     	;# 
   957  0FEF                     	;# 
   958  0000                     	;# 
   959  0001                     	;# 
   960  0002                     	;# 
   961  0003                     	;# 
   962  0004                     	;# 
   963  0005                     	;# 
   964  0006                     	;# 
   965  0007                     	;# 
   966  0008                     	;# 
   967  0009                     	;# 
   968  000A                     	;# 
   969  000B                     	;# 
   970  000C                     	;# 
   971  000D                     	;# 
   972  000E                     	;# 
   973  000F                     	;# 
   974  0010                     	;# 
   975  0011                     	;# 
   976  0012                     	;# 
   977  0013                     	;# 
   978  0014                     	;# 
   979  0015                     	;# 
   980  0016                     	;# 
   981  0016                     	;# 
   982  0017                     	;# 
   983  0018                     	;# 
   984  0019                     	;# 
   985  001A                     	;# 
   986  001B                     	;# 
   987  001C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008F                     	;# 
   992  0090                     	;# 
   993  0091                     	;# 
   994  0092                     	;# 
   995  0093                     	;# 
   996  0094                     	;# 
   997  0095                     	;# 
   998  0096                     	;# 
   999  0097                     	;# 
  1000  0099                     	;# 
  1001  009A                     	;# 
  1002  009B                     	;# 
  1003  009B                     	;# 
  1004  009C                     	;# 
  1005  009D                     	;# 
  1006  009E                     	;# 
  1007  010C                     	;# 
  1008  010D                     	;# 
  1009  010E                     	;# 
  1010  010F                     	;# 
  1011  0110                     	;# 
  1012  0116                     	;# 
  1013  0117                     	;# 
  1014  011D                     	;# 
  1015  018C                     	;# 
  1016  018D                     	;# 
  1017  018F                     	;# 
  1018  0190                     	;# 
  1019  0191                     	;# 
  1020  0191                     	;# 
  1021  0192                     	;# 
  1022  0193                     	;# 
  1023  0193                     	;# 
  1024  0194                     	;# 
  1025  0195                     	;# 
  1026  0196                     	;# 
  1027  0199                     	;# 
  1028  0199                     	;# 
  1029  0199                     	;# 
  1030  019A                     	;# 
  1031  019A                     	;# 
  1032  019A                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019B                     	;# 
  1036  019B                     	;# 
  1037  019B                     	;# 
  1038  019C                     	;# 
  1039  019C                     	;# 
  1040  019C                     	;# 
  1041  019D                     	;# 
  1042  019D                     	;# 
  1043  019D                     	;# 
  1044  019E                     	;# 
  1045  019E                     	;# 
  1046  019E                     	;# 
  1047  019F                     	;# 
  1048  019F                     	;# 
  1049  019F                     	;# 
  1050  020D                     	;# 
  1051  020F                     	;# 
  1052  0210                     	;# 
  1053  0211                     	;# 
  1054  0211                     	;# 
  1055  0212                     	;# 
  1056  0212                     	;# 
  1057  0213                     	;# 
  1058  0213                     	;# 
  1059  0214                     	;# 
  1060  0214                     	;# 
  1061  0215                     	;# 
  1062  0215                     	;# 
  1063  0215                     	;# 
  1064  0216                     	;# 
  1065  0216                     	;# 
  1066  0217                     	;# 
  1067  0217                     	;# 
  1068  0219                     	;# 
  1069  021A                     	;# 
  1070  021B                     	;# 
  1071  021C                     	;# 
  1072  021D                     	;# 
  1073  021E                     	;# 
  1074  021F                     	;# 
  1075  028C                     	;# 
  1076  028D                     	;# 
  1077  0291                     	;# 
  1078  0291                     	;# 
  1079  0292                     	;# 
  1080  0293                     	;# 
  1081  0298                     	;# 
  1082  0298                     	;# 
  1083  0299                     	;# 
  1084  029A                     	;# 
  1085  029D                     	;# 
  1086  029E                     	;# 
  1087  029F                     	;# 
  1088  030C                     	;# 
  1089  030D                     	;# 
  1090  0311                     	;# 
  1091  0311                     	;# 
  1092  0312                     	;# 
  1093  0313                     	;# 
  1094  0318                     	;# 
  1095  0318                     	;# 
  1096  0319                     	;# 
  1097  031A                     	;# 
  1098  031C                     	;# 
  1099  031C                     	;# 
  1100  031D                     	;# 
  1101  031E                     	;# 
  1102  038C                     	;# 
  1103  038D                     	;# 
  1104  0394                     	;# 
  1105  0395                     	;# 
  1106  0396                     	;# 
  1107  040C                     	;# 
  1108  040D                     	;# 
  1109  0411                     	;# 
  1110  0411                     	;# 
  1111  0412                     	;# 
  1112  0413                     	;# 
  1113  0414                     	;# 
  1114  0415                     	;# 
  1115  0416                     	;# 
  1116  0417                     	;# 
  1117  0418                     	;# 
  1118  0418                     	;# 
  1119  0419                     	;# 
  1120  041A                     	;# 
  1121  041B                     	;# 
  1122  041C                     	;# 
  1123  041D                     	;# 
  1124  041E                     	;# 
  1125  048D                     	;# 
  1126  0491                     	;# 
  1127  0491                     	;# 
  1128  0492                     	;# 
  1129  0492                     	;# 
  1130  0493                     	;# 
  1131  0493                     	;# 
  1132  0493                     	;# 
  1133  0494                     	;# 
  1134  0494                     	;# 
  1135  0495                     	;# 
  1136  0495                     	;# 
  1137  0496                     	;# 
  1138  0496                     	;# 
  1139  0497                     	;# 
  1140  0497                     	;# 
  1141  0595                     	;# 
  1142  0596                     	;# 
  1143  0597                     	;# 
  1144  059C                     	;# 
  1145  059D                     	;# 
  1146  059E                     	;# 
  1147  0611                     	;# 
  1148  0611                     	;# 
  1149  0612                     	;# 
  1150  0613                     	;# 
  1151  0614                     	;# 
  1152  0614                     	;# 
  1153  0615                     	;# 
  1154  0616                     	;# 
  1155  0617                     	;# 
  1156  0617                     	;# 
  1157  0618                     	;# 
  1158  0619                     	;# 
  1159  061A                     	;# 
  1160  061A                     	;# 
  1161  061B                     	;# 
  1162  061C                     	;# 
  1163  061D                     	;# 
  1164  061D                     	;# 
  1165  061E                     	;# 
  1166  061F                     	;# 
  1167  0FE4                     	;# 
  1168  0FE5                     	;# 
  1169  0FE6                     	;# 
  1170  0FE7                     	;# 
  1171  0FE8                     	;# 
  1172  0FE9                     	;# 
  1173  0FEA                     	;# 
  1174  0FEB                     	;# 
  1175  0FED                     	;# 
  1176  0FEE                     	;# 
  1177  0FEF                     	;# 
  1178  0000                     	;# 
  1179  0001                     	;# 
  1180  0002                     	;# 
  1181  0003                     	;# 
  1182  0004                     	;# 
  1183  0005                     	;# 
  1184  0006                     	;# 
  1185  0007                     	;# 
  1186  0008                     	;# 
  1187  0009                     	;# 
  1188  000A                     	;# 
  1189  000B                     	;# 
  1190  000C                     	;# 
  1191  000D                     	;# 
  1192  000E                     	;# 
  1193  000F                     	;# 
  1194  0010                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  008E                     	;# 
  1211  008F                     	;# 
  1212  0090                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0094                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0097                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  010E                     	;# 
  1230  010F                     	;# 
  1231  0110                     	;# 
  1232  0116                     	;# 
  1233  0117                     	;# 
  1234  011D                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018F                     	;# 
  1238  0190                     	;# 
  1239  0191                     	;# 
  1240  0191                     	;# 
  1241  0192                     	;# 
  1242  0193                     	;# 
  1243  0193                     	;# 
  1244  0194                     	;# 
  1245  0195                     	;# 
  1246  0196                     	;# 
  1247  0199                     	;# 
  1248  0199                     	;# 
  1249  0199                     	;# 
  1250  019A                     	;# 
  1251  019A                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019D                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019E                     	;# 
  1266  019E                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  019F                     	;# 
  1270  020D                     	;# 
  1271  020F                     	;# 
  1272  0210                     	;# 
  1273  0211                     	;# 
  1274  0211                     	;# 
  1275  0212                     	;# 
  1276  0212                     	;# 
  1277  0213                     	;# 
  1278  0213                     	;# 
  1279  0214                     	;# 
  1280  0214                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0216                     	;# 
  1285  0216                     	;# 
  1286  0217                     	;# 
  1287  0217                     	;# 
  1288  0219                     	;# 
  1289  021A                     	;# 
  1290  021B                     	;# 
  1291  021C                     	;# 
  1292  021D                     	;# 
  1293  021E                     	;# 
  1294  021F                     	;# 
  1295  028C                     	;# 
  1296  028D                     	;# 
  1297  0291                     	;# 
  1298  0291                     	;# 
  1299  0292                     	;# 
  1300  0293                     	;# 
  1301  0298                     	;# 
  1302  0298                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029D                     	;# 
  1306  029E                     	;# 
  1307  029F                     	;# 
  1308  030C                     	;# 
  1309  030D                     	;# 
  1310  0311                     	;# 
  1311  0311                     	;# 
  1312  0312                     	;# 
  1313  0313                     	;# 
  1314  0318                     	;# 
  1315  0318                     	;# 
  1316  0319                     	;# 
  1317  031A                     	;# 
  1318  031C                     	;# 
  1319  031C                     	;# 
  1320  031D                     	;# 
  1321  031E                     	;# 
  1322  038C                     	;# 
  1323  038D                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  040C                     	;# 
  1328  040D                     	;# 
  1329  0411                     	;# 
  1330  0411                     	;# 
  1331  0412                     	;# 
  1332  0413                     	;# 
  1333  0414                     	;# 
  1334  0415                     	;# 
  1335  0416                     	;# 
  1336  0417                     	;# 
  1337  0418                     	;# 
  1338  0418                     	;# 
  1339  0419                     	;# 
  1340  041A                     	;# 
  1341  041B                     	;# 
  1342  041C                     	;# 
  1343  041D                     	;# 
  1344  041E                     	;# 
  1345  048D                     	;# 
  1346  0491                     	;# 
  1347  0491                     	;# 
  1348  0492                     	;# 
  1349  0492                     	;# 
  1350  0493                     	;# 
  1351  0493                     	;# 
  1352  0493                     	;# 
  1353  0494                     	;# 
  1354  0494                     	;# 
  1355  0495                     	;# 
  1356  0495                     	;# 
  1357  0496                     	;# 
  1358  0496                     	;# 
  1359  0497                     	;# 
  1360  0497                     	;# 
  1361  0595                     	;# 
  1362  0596                     	;# 
  1363  0597                     	;# 
  1364  059C                     	;# 
  1365  059D                     	;# 
  1366  059E                     	;# 
  1367  0611                     	;# 
  1368  0611                     	;# 
  1369  0612                     	;# 
  1370  0613                     	;# 
  1371  0614                     	;# 
  1372  0614                     	;# 
  1373  0615                     	;# 
  1374  0616                     	;# 
  1375  0617                     	;# 
  1376  0617                     	;# 
  1377  0618                     	;# 
  1378  0619                     	;# 
  1379  061A                     	;# 
  1380  061A                     	;# 
  1381  061B                     	;# 
  1382  061C                     	;# 
  1383  061D                     	;# 
  1384  061D                     	;# 
  1385  061E                     	;# 
  1386  061F                     	;# 
  1387  0FE4                     	;# 
  1388  0FE5                     	;# 
  1389  0FE6                     	;# 
  1390  0FE7                     	;# 
  1391  0FE8                     	;# 
  1392  0FE9                     	;# 
  1393  0FEA                     	;# 
  1394  0FEB                     	;# 
  1395  0FED                     	;# 
  1396  0FEE                     	;# 
  1397  0FEF                     	;# 
  1398  0000                     	;# 
  1399  0001                     	;# 
  1400  0002                     	;# 
  1401  0003                     	;# 
  1402  0004                     	;# 
  1403  0005                     	;# 
  1404  0006                     	;# 
  1405  0007                     	;# 
  1406  0008                     	;# 
  1407  0009                     	;# 
  1408  000A                     	;# 
  1409  000B                     	;# 
  1410  000C                     	;# 
  1411  000D                     	;# 
  1412  000E                     	;# 
  1413  000F                     	;# 
  1414  0010                     	;# 
  1415  0011                     	;# 
  1416  0012                     	;# 
  1417  0013                     	;# 
  1418  0014                     	;# 
  1419  0015                     	;# 
  1420  0016                     	;# 
  1421  0016                     	;# 
  1422  0017                     	;# 
  1423  0018                     	;# 
  1424  0019                     	;# 
  1425  001A                     	;# 
  1426  001B                     	;# 
  1427  001C                     	;# 
  1428  008C                     	;# 
  1429  008D                     	;# 
  1430  008E                     	;# 
  1431  008F                     	;# 
  1432  0090                     	;# 
  1433  0091                     	;# 
  1434  0092                     	;# 
  1435  0093                     	;# 
  1436  0094                     	;# 
  1437  0095                     	;# 
  1438  0096                     	;# 
  1439  0097                     	;# 
  1440  0099                     	;# 
  1441  009A                     	;# 
  1442  009B                     	;# 
  1443  009B                     	;# 
  1444  009C                     	;# 
  1445  009D                     	;# 
  1446  009E                     	;# 
  1447  010C                     	;# 
  1448  010D                     	;# 
  1449  010E                     	;# 
  1450  010F                     	;# 
  1451  0110                     	;# 
  1452  0116                     	;# 
  1453  0117                     	;# 
  1454  011D                     	;# 
  1455  018C                     	;# 
  1456  018D                     	;# 
  1457  018F                     	;# 
  1458  0190                     	;# 
  1459  0191                     	;# 
  1460  0191                     	;# 
  1461  0192                     	;# 
  1462  0193                     	;# 
  1463  0193                     	;# 
  1464  0194                     	;# 
  1465  0195                     	;# 
  1466  0196                     	;# 
  1467  0199                     	;# 
  1468  0199                     	;# 
  1469  0199                     	;# 
  1470  019A                     	;# 
  1471  019A                     	;# 
  1472  019A                     	;# 
  1473  019B                     	;# 
  1474  019B                     	;# 
  1475  019B                     	;# 
  1476  019B                     	;# 
  1477  019B                     	;# 
  1478  019C                     	;# 
  1479  019C                     	;# 
  1480  019C                     	;# 
  1481  019D                     	;# 
  1482  019D                     	;# 
  1483  019D                     	;# 
  1484  019E                     	;# 
  1485  019E                     	;# 
  1486  019E                     	;# 
  1487  019F                     	;# 
  1488  019F                     	;# 
  1489  019F                     	;# 
  1490  020D                     	;# 
  1491  020F                     	;# 
  1492  0210                     	;# 
  1493  0211                     	;# 
  1494  0211                     	;# 
  1495  0212                     	;# 
  1496  0212                     	;# 
  1497  0213                     	;# 
  1498  0213                     	;# 
  1499  0214                     	;# 
  1500  0214                     	;# 
  1501  0215                     	;# 
  1502  0215                     	;# 
  1503  0215                     	;# 
  1504  0216                     	;# 
  1505  0216                     	;# 
  1506  0217                     	;# 
  1507  0217                     	;# 
  1508  0219                     	;# 
  1509  021A                     	;# 
  1510  021B                     	;# 
  1511  021C                     	;# 
  1512  021D                     	;# 
  1513  021E                     	;# 
  1514  021F                     	;# 
  1515  028C                     	;# 
  1516  028D                     	;# 
  1517  0291                     	;# 
  1518  0291                     	;# 
  1519  0292                     	;# 
  1520  0293                     	;# 
  1521  0298                     	;# 
  1522  0298                     	;# 
  1523  0299                     	;# 
  1524  029A                     	;# 
  1525  029D                     	;# 
  1526  029E                     	;# 
  1527  029F                     	;# 
  1528  030C                     	;# 
  1529  030D                     	;# 
  1530  0311                     	;# 
  1531  0311                     	;# 
  1532  0312                     	;# 
  1533  0313                     	;# 
  1534  0318                     	;# 
  1535  0318                     	;# 
  1536  0319                     	;# 
  1537  031A                     	;# 
  1538  031C                     	;# 
  1539  031C                     	;# 
  1540  031D                     	;# 
  1541  031E                     	;# 
  1542  038C                     	;# 
  1543  038D                     	;# 
  1544  0394                     	;# 
  1545  0395                     	;# 
  1546  0396                     	;# 
  1547  040C                     	;# 
  1548  040D                     	;# 
  1549  0411                     	;# 
  1550  0411                     	;# 
  1551  0412                     	;# 
  1552  0413                     	;# 
  1553  0414                     	;# 
  1554  0415                     	;# 
  1555  0416                     	;# 
  1556  0417                     	;# 
  1557  0418                     	;# 
  1558  0418                     	;# 
  1559  0419                     	;# 
  1560  041A                     	;# 
  1561  041B                     	;# 
  1562  041C                     	;# 
  1563  041D                     	;# 
  1564  041E                     	;# 
  1565  048D                     	;# 
  1566  0491                     	;# 
  1567  0491                     	;# 
  1568  0492                     	;# 
  1569  0492                     	;# 
  1570  0493                     	;# 
  1571  0493                     	;# 
  1572  0493                     	;# 
  1573  0494                     	;# 
  1574  0494                     	;# 
  1575  0495                     	;# 
  1576  0495                     	;# 
  1577  0496                     	;# 
  1578  0496                     	;# 
  1579  0497                     	;# 
  1580  0497                     	;# 
  1581  0595                     	;# 
  1582  0596                     	;# 
  1583  0597                     	;# 
  1584  059C                     	;# 
  1585  059D                     	;# 
  1586  059E                     	;# 
  1587  0611                     	;# 
  1588  0611                     	;# 
  1589  0612                     	;# 
  1590  0613                     	;# 
  1591  0614                     	;# 
  1592  0614                     	;# 
  1593  0615                     	;# 
  1594  0616                     	;# 
  1595  0617                     	;# 
  1596  0617                     	;# 
  1597  0618                     	;# 
  1598  0619                     	;# 
  1599  061A                     	;# 
  1600  061A                     	;# 
  1601  061B                     	;# 
  1602  061C                     	;# 
  1603  061D                     	;# 
  1604  061D                     	;# 
  1605  061E                     	;# 
  1606  061F                     	;# 
  1607  0FE4                     	;# 
  1608  0FE5                     	;# 
  1609  0FE6                     	;# 
  1610  0FE7                     	;# 
  1611  0FE8                     	;# 
  1612  0FE9                     	;# 
  1613  0FEA                     	;# 
  1614  0FEB                     	;# 
  1615  0FED                     	;# 
  1616  0FEE                     	;# 
  1617  0FEF                     	;# 
  1618  0000                     	;# 
  1619  0001                     	;# 
  1620  0002                     	;# 
  1621  0003                     	;# 
  1622  0004                     	;# 
  1623  0005                     	;# 
  1624  0006                     	;# 
  1625  0007                     	;# 
  1626  0008                     	;# 
  1627  0009                     	;# 
  1628  000A                     	;# 
  1629  000B                     	;# 
  1630  000C                     	;# 
  1631  000D                     	;# 
  1632  000E                     	;# 
  1633  000F                     	;# 
  1634  0010                     	;# 
  1635  0011                     	;# 
  1636  0012                     	;# 
  1637  0013                     	;# 
  1638  0014                     	;# 
  1639  0015                     	;# 
  1640  0016                     	;# 
  1641  0016                     	;# 
  1642  0017                     	;# 
  1643  0018                     	;# 
  1644  0019                     	;# 
  1645  001A                     	;# 
  1646  001B                     	;# 
  1647  001C                     	;# 
  1648  008C                     	;# 
  1649  008D                     	;# 
  1650  008E                     	;# 
  1651  008F                     	;# 
  1652  0090                     	;# 
  1653  0091                     	;# 
  1654  0092                     	;# 
  1655  0093                     	;# 
  1656  0094                     	;# 
  1657  0095                     	;# 
  1658  0096                     	;# 
  1659  0097                     	;# 
  1660  0099                     	;# 
  1661  009A                     	;# 
  1662  009B                     	;# 
  1663  009B                     	;# 
  1664  009C                     	;# 
  1665  009D                     	;# 
  1666  009E                     	;# 
  1667  010C                     	;# 
  1668  010D                     	;# 
  1669  010E                     	;# 
  1670  010F                     	;# 
  1671  0110                     	;# 
  1672  0116                     	;# 
  1673  0117                     	;# 
  1674  011D                     	;# 
  1675  018C                     	;# 
  1676  018D                     	;# 
  1677  018F                     	;# 
  1678  0190                     	;# 
  1679  0191                     	;# 
  1680  0191                     	;# 
  1681  0192                     	;# 
  1682  0193                     	;# 
  1683  0193                     	;# 
  1684  0194                     	;# 
  1685  0195                     	;# 
  1686  0196                     	;# 
  1687  0199                     	;# 
  1688  0199                     	;# 
  1689  0199                     	;# 
  1690  019A                     	;# 
  1691  019A                     	;# 
  1692  019A                     	;# 
  1693  019B                     	;# 
  1694  019B                     	;# 
  1695  019B                     	;# 
  1696  019B                     	;# 
  1697  019B                     	;# 
  1698  019C                     	;# 
  1699  019C                     	;# 
  1700  019C                     	;# 
  1701  019D                     	;# 
  1702  019D                     	;# 
  1703  019D                     	;# 
  1704  019E                     	;# 
  1705  019E                     	;# 
  1706  019E                     	;# 
  1707  019F                     	;# 
  1708  019F                     	;# 
  1709  019F                     	;# 
  1710  020D                     	;# 
  1711  020F                     	;# 
  1712  0210                     	;# 
  1713  0211                     	;# 
  1714  0211                     	;# 
  1715  0212                     	;# 
  1716  0212                     	;# 
  1717  0213                     	;# 
  1718  0213                     	;# 
  1719  0214                     	;# 
  1720  0214                     	;# 
  1721  0215                     	;# 
  1722  0215                     	;# 
  1723  0215                     	;# 
  1724  0216                     	;# 
  1725  0216                     	;# 
  1726  0217                     	;# 
  1727  0217                     	;# 
  1728  0219                     	;# 
  1729  021A                     	;# 
  1730  021B                     	;# 
  1731  021C                     	;# 
  1732  021D                     	;# 
  1733  021E                     	;# 
  1734  021F                     	;# 
  1735  028C                     	;# 
  1736  028D                     	;# 
  1737  0291                     	;# 
  1738  0291                     	;# 
  1739  0292                     	;# 
  1740  0293                     	;# 
  1741  0298                     	;# 
  1742  0298                     	;# 
  1743  0299                     	;# 
  1744  029A                     	;# 
  1745  029D                     	;# 
  1746  029E                     	;# 
  1747  029F                     	;# 
  1748  030C                     	;# 
  1749  030D                     	;# 
  1750  0311                     	;# 
  1751  0311                     	;# 
  1752  0312                     	;# 
  1753  0313                     	;# 
  1754  0318                     	;# 
  1755  0318                     	;# 
  1756  0319                     	;# 
  1757  031A                     	;# 
  1758  031C                     	;# 
  1759  031C                     	;# 
  1760  031D                     	;# 
  1761  031E                     	;# 
  1762  038C                     	;# 
  1763  038D                     	;# 
  1764  0394                     	;# 
  1765  0395                     	;# 
  1766  0396                     	;# 
  1767  040C                     	;# 
  1768  040D                     	;# 
  1769  0411                     	;# 
  1770  0411                     	;# 
  1771  0412                     	;# 
  1772  0413                     	;# 
  1773  0414                     	;# 
  1774  0415                     	;# 
  1775  0416                     	;# 
  1776  0417                     	;# 
  1777  0418                     	;# 
  1778  0418                     	;# 
  1779  0419                     	;# 
  1780  041A                     	;# 
  1781  041B                     	;# 
  1782  041C                     	;# 
  1783  041D                     	;# 
  1784  041E                     	;# 
  1785  048D                     	;# 
  1786  0491                     	;# 
  1787  0491                     	;# 
  1788  0492                     	;# 
  1789  0492                     	;# 
  1790  0493                     	;# 
  1791  0493                     	;# 
  1792  0493                     	;# 
  1793  0494                     	;# 
  1794  0494                     	;# 
  1795  0495                     	;# 
  1796  0495                     	;# 
  1797  0496                     	;# 
  1798  0496                     	;# 
  1799  0497                     	;# 
  1800  0497                     	;# 
  1801  0595                     	;# 
  1802  0596                     	;# 
  1803  0597                     	;# 
  1804  059C                     	;# 
  1805  059D                     	;# 
  1806  059E                     	;# 
  1807  0611                     	;# 
  1808  0611                     	;# 
  1809  0612                     	;# 
  1810  0613                     	;# 
  1811  0614                     	;# 
  1812  0614                     	;# 
  1813  0615                     	;# 
  1814  0616                     	;# 
  1815  0617                     	;# 
  1816  0617                     	;# 
  1817  0618                     	;# 
  1818  0619                     	;# 
  1819  061A                     	;# 
  1820  061A                     	;# 
  1821  061B                     	;# 
  1822  061C                     	;# 
  1823  061D                     	;# 
  1824  061D                     	;# 
  1825  061E                     	;# 
  1826  061F                     	;# 
  1827  0FE4                     	;# 
  1828  0FE5                     	;# 
  1829  0FE6                     	;# 
  1830  0FE7                     	;# 
  1831  0FE8                     	;# 
  1832  0FE9                     	;# 
  1833  0FEA                     	;# 
  1834  0FEB                     	;# 
  1835  0FED                     	;# 
  1836  0FEE                     	;# 
  1837  0FEF                     	;# 
  1838                           
  1839                           	psect	stringtext
  1840  0280                     __pstringtext:	
  1841  0280                     _KTCPCFG:	
  1842  0280  3441               	retlw	65
  1843  0281  3454               	retlw	84
  1844  0282  342B               	retlw	43
  1845  0283  344B               	retlw	75
  1846  0284  3454               	retlw	84
  1847  0285  3443               	retlw	67
  1848  0286  3450               	retlw	80
  1849  0287  3443               	retlw	67
  1850  0288  3446               	retlw	70
  1851  0289  3447               	retlw	71
  1852  028A  343D               	retlw	61
  1853  028B  3431               	retlw	49
  1854  028C  342C               	retlw	44
  1855  028D  3430               	retlw	48
  1856  028E  342C               	retlw	44
  1857  028F  3422               	retlw	34
  1858  0290  3431               	retlw	49
  1859  0291  3438               	retlw	56
  1860  0292  3433               	retlw	51
  1861  0293  342E               	retlw	46
  1862  0294  3432               	retlw	50
  1863  0295  3434               	retlw	52
  1864  0296  3436               	retlw	54
  1865  0297  342E               	retlw	46
  1866  0298  3437               	retlw	55
  1867  0299  3434               	retlw	52
  1868  029A  342E               	retlw	46
  1869  029B  3436               	retlw	54
  1870  029C  3438               	retlw	56
  1871  029D  3422               	retlw	34
  1872  029E  342C               	retlw	44
  1873  029F  3435               	retlw	53
  1874  02A0  3430               	retlw	48
  1875  02A1  3437               	retlw	55
  1876  02A2  3430               	retlw	48
  1877  02A3  340D               	retlw	13
  1878  02A4  340A               	retlw	10
  1879  02A5  3400               	retlw	0
  1880  02A6                     __end_of_KTCPCFG:	
  1881  02A6                     _KCNXCFG:	
  1882  02A6  3441               	retlw	65
  1883  02A7  3454               	retlw	84
  1884  02A8  342B               	retlw	43
  1885  02A9  344B               	retlw	75
  1886  02AA  3443               	retlw	67
  1887  02AB  344E               	retlw	78
  1888  02AC  3458               	retlw	88
  1889  02AD  3443               	retlw	67
  1890  02AE  3446               	retlw	70
  1891  02AF  3447               	retlw	71
  1892  02B0  343D               	retlw	61
  1893  02B1  3431               	retlw	49
  1894  02B2  342C               	retlw	44
  1895  02B3  3422               	retlw	34
  1896  02B4  3447               	retlw	71
  1897  02B5  3450               	retlw	80
  1898  02B6  3452               	retlw	82
  1899  02B7  3453               	retlw	83
  1900  02B8  3422               	retlw	34
  1901  02B9  342C               	retlw	44
  1902  02BA  3422               	retlw	34
  1903  02BB  3443               	retlw	67
  1904  02BC  344D               	retlw	77
  1905  02BD  344E               	retlw	78
  1906  02BE  3445               	retlw	69
  1907  02BF  3454               	retlw	84
  1908  02C0  3422               	retlw	34
  1909  02C1  340D               	retlw	13
  1910  02C2  340A               	retlw	10
  1911  02C3  3400               	retlw	0
  1912  02C4                     __end_of_KCNXCFG:	
  1913  02C4                     _KTCPSTART:	
  1914  02C4  3441               	retlw	65
  1915  02C5  3454               	retlw	84
  1916  02C6  342B               	retlw	43
  1917  02C7  344B               	retlw	75
  1918  02C8  3454               	retlw	84
  1919  02C9  3443               	retlw	67
  1920  02CA  3450               	retlw	80
  1921  02CB  3453               	retlw	83
  1922  02CC  3454               	retlw	84
  1923  02CD  3441               	retlw	65
  1924  02CE  3452               	retlw	82
  1925  02CF  3454               	retlw	84
  1926  02D0  343D               	retlw	61
  1927  02D1  3431               	retlw	49
  1928  02D2  340D               	retlw	13
  1929  02D3  340A               	retlw	10
  1930  02D4  3400               	retlw	0
  1931  02D5                     __end_of_KTCPSTART:	
  1932  02D5                     _REC_CGREG:	
  1933  02D5  342B               	retlw	43
  1934  02D6  3443               	retlw	67
  1935  02D7  3447               	retlw	71
  1936  02D8  3452               	retlw	82
  1937  02D9  3445               	retlw	69
  1938  02DA  3447               	retlw	71
  1939  02DB  343A               	retlw	58
  1940  02DC  3420               	retlw	32
  1941  02DD  3432               	retlw	50
  1942  02DE  342C               	retlw	44
  1943  02DF  3435               	retlw	53
  1944  02E0  342C               	retlw	44
  1945  02E1  3400               	retlw	0
  1946  02E2                     __end_of_REC_CGREG:	
  1947  02E2                     _REC_CREG:	
  1948  02E2  342B               	retlw	43
  1949  02E3  3443               	retlw	67
  1950  02E4  3452               	retlw	82
  1951  02E5  3445               	retlw	69
  1952  02E6  3447               	retlw	71
  1953  02E7  343A               	retlw	58
  1954  02E8  3420               	retlw	32
  1955  02E9  3432               	retlw	50
  1956  02EA  342C               	retlw	44
  1957  02EB  3435               	retlw	53
  1958  02EC  342C               	retlw	44
  1959  02ED  3400               	retlw	0
  1960  02EE                     __end_of_REC_CREG:	
  1961  02EE                     _CGREG:	
  1962  02EE  3441               	retlw	65
  1963  02EF  3454               	retlw	84
  1964  02F0  342B               	retlw	43
  1965  02F1  3443               	retlw	67
  1966  02F2  3447               	retlw	71
  1967  02F3  3452               	retlw	82
  1968  02F4  3445               	retlw	69
  1969  02F5  3447               	retlw	71
  1970  02F6  343F               	retlw	63
  1971  02F7  340D               	retlw	13
  1972  02F8  340A               	retlw	10
  1973  02F9  3400               	retlw	0
  1974  02FA                     __end_of_CGREG:	
  1975  02FA                     _CREG:	
  1976  02FA  3441               	retlw	65
  1977  02FB  3454               	retlw	84
  1978  02FC  342B               	retlw	43
  1979  02FD  3443               	retlw	67
  1980  02FE  3452               	retlw	82
  1981  02FF  3445               	retlw	69
  1982  0300  3447               	retlw	71
  1983  0301  343F               	retlw	63
  1984  0302  340D               	retlw	13
  1985  0303  340A               	retlw	10
  1986  0304  3400               	retlw	0
  1987  0305                     __end_of_CREG:	
  1988  0305                     _CPIN:	
  1989  0305  3441               	retlw	65
  1990  0306  3454               	retlw	84
  1991  0307  342B               	retlw	43
  1992  0308  3443               	retlw	67
  1993  0309  3450               	retlw	80
  1994  030A  3449               	retlw	73
  1995  030B  344E               	retlw	78
  1996  030C  343F               	retlw	63
  1997  030D  340D               	retlw	13
  1998  030E  340A               	retlw	10
  1999  030F  3400               	retlw	0
  2000  0310                     __end_of_CPIN:	
  2001  0310                     _CIMI:	
  2002  0310  3441               	retlw	65
  2003  0311  3454               	retlw	84
  2004  0312  342B               	retlw	43
  2005  0313  3443               	retlw	67
  2006  0314  3449               	retlw	73
  2007  0315  344D               	retlw	77
  2008  0316  3449               	retlw	73
  2009  0317  340D               	retlw	13
  2010  0318  340A               	retlw	10
  2011  0319  3400               	retlw	0
  2012  031A                     __end_of_CIMI:	
  2013  031A                     _K3:	
  2014  031A  3441               	retlw	65
  2015  031B  3454               	retlw	84
  2016  031C  3426               	retlw	38
  2017  031D  344B               	retlw	75
  2018  031E  3433               	retlw	51
  2019  031F  340D               	retlw	13
  2020  0320  340A               	retlw	10
  2021  0321  3400               	retlw	0
  2022  0322                     __end_of_K3:	
  2023  0322                     _REC_OK:	
  2024  0322  344F               	retlw	79
  2025  0323  344B               	retlw	75
  2026  0324  3400               	retlw	0
  2027  0325                     __end_of_REC_OK:	
  2028                           
  2029                           	psect	nvBANK0
  2030  0057                     __pnvBANK0:	
  2031  0057                     _eusart2TxBufferRemaining:	
  2032  0057                     	ds	1
  2033  0058                     _eusart1TxBufferRemaining:	
  2034  0058                     	ds	1
  2035  0015                     _TMR0	set	21
  2036  000D                     _PORTBbits	set	13
  2037  0014                     _PIR4bits	set	20
  2038  0011                     _PIR1bits	set	17
  2039  000B                     _INTCONbits	set	11
  2040  0080                     _RE0	set	128
  2041  0095                     _OPTION_REG	set	149
  2042  0094                     _PIE4bits	set	148
  2043  0091                     _PIE1bits	set	145
  2044  009A                     _OSCSTAT	set	154
  2045  0099                     _OSCCON	set	153
  2046  0095                     _OPTION_REGbits	set	149
  2047  0090                     _TRISE	set	144
  2048  008F                     _TRISD	set	143
  2049  008E                     _TRISC	set	142
  2050  008D                     _TRISB	set	141
  2051  008C                     _TRISA	set	140
  2052  0480                     _TRISE0	set	1152
  2053  010D                     _LATBbits	set	269
  2054  011D                     _APFCON	set	285
  2055  0110                     _LATE	set	272
  2056  010F                     _LATD	set	271
  2057  010E                     _LATC	set	270
  2058  010D                     _LATB	set	269
  2059  010C                     _LATA	set	268
  2060  086A                     _LATB2	set	2154
  2061  086C                     _LATB4	set	2156
  2062  087E                     _LATD6	set	2174
  2063  0199                     _RC1REG	set	409
  2064  019D                     _RC1STAbits	set	413
  2065  019A                     _TX1REG	set	410
  2066  019C                     _SP1BRGH	set	412
  2067  019B                     _SP1BRGL	set	411
  2068  019E                     _TX1STA	set	414
  2069  019D                     _RC1STA	set	413
  2070  019F                     _BAUD1CON	set	415
  2071  0190                     _ANSELE	set	400
  2072  018F                     _ANSELD	set	399
  2073  018D                     _ANSELB	set	397
  2074  018C                     _ANSELA	set	396
  2075  0210                     _WPUE	set	528
  2076  020F                     _WPUD	set	527
  2077  020D                     _WPUB	set	525
  2078  030D                     _TRISG	set	781
  2079  030C                     _TRISF	set	780
  2080  038D                     _LATG	set	909
  2081  038C                     _LATF	set	908
  2082  0396                     _IOCBFbits	set	918
  2083  0395                     _IOCBNbits	set	917
  2084  040D                     _ANSELG	set	1037
  2085  040C                     _ANSELF	set	1036
  2086  0491                     _RC2REG	set	1169
  2087  0495                     _RC2STAbits	set	1173
  2088  0492                     _TX2REG	set	1170
  2089  0494                     _SP2BRGH	set	1172
  2090  0493                     _SP2BRGL	set	1171
  2091  0496                     _TX2STA	set	1174
  2092  0495                     _RC2STA	set	1173
  2093  0497                     _BAUD2CON	set	1175
  2094  048D                     _WPUG	set	1165
  2095                           
  2096                           ; #config settings
  2097  0000                     
  2098                           	psect	cinit
  2099  0047                     start_initialization:	
  2100  0047                     __initialization:	
  2101                           
  2102                           ; Clear objects allocated to COMMON
  2103  0047  01FA               	clrf	__pbssCOMMON& (0+127)
  2104  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  2105                           
  2106                           ; Clear objects allocated to BANK0
  2107  0049  3046               	movlw	low __pbssBANK0
  2108  004A  0084               	movwf	4
  2109  004B  3000               	movlw	high __pbssBANK0
  2110  004C  0085               	movwf	5
  2111  004D  3011               	movlw	17
  2112  004E  3186  2643  3180   	fcall	clear_ram0
  2113                           
  2114                           ; Clear objects allocated to BANK2
  2115  0051  3020               	movlw	low __pbssBANK2
  2116  0052  0084               	movwf	4
  2117  0053  3001               	movlw	high __pbssBANK2
  2118  0054  0085               	movwf	5
  2119  0055  3040               	movlw	64
  2120  0056  3186  2643  3180   	fcall	clear_ram0
  2121                           
  2122                           ; Clear objects allocated to BANK3
  2123  0059  30A0               	movlw	low __pbssBANK3
  2124  005A  0084               	movwf	4
  2125  005B  3001               	movlw	high __pbssBANK3
  2126  005C  0085               	movwf	5
  2127  005D  3040               	movlw	64
  2128  005E  3186  2643  3180   	fcall	clear_ram0
  2129                           
  2130                           ; Clear objects allocated to BANK4
  2131  0061  3020               	movlw	low __pbssBANK4
  2132  0062  0084               	movwf	4
  2133  0063  3002               	movlw	high __pbssBANK4
  2134  0064  0085               	movwf	5
  2135  0065  3040               	movlw	64
  2136  0066  3186  2643  3180   	fcall	clear_ram0
  2137                           
  2138                           ; Clear objects allocated to BANK5
  2139  0069  30A0               	movlw	low __pbssBANK5
  2140  006A  0084               	movwf	4
  2141  006B  3002               	movlw	high __pbssBANK5
  2142  006C  0085               	movwf	5
  2143  006D  3040               	movlw	64
  2144  006E  3186  2643         	fcall	clear_ram0
  2145  0070                     end_of_initialization:	
  2146                           ;End of C runtime variable initialization code
  2147                           
  2148  0070                     __end_of__initialization:	
  2149  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2150  0071  0020               	movlb	0
  2151  0072  3184  2C3C         	ljmp	_main	;jump to C main() function
  2152                           
  2153                           	psect	bssCOMMON
  2154  007A                     __pbssCOMMON:	
  2155  007A                     _timer0ReloadVal:	
  2156  007A                     	ds	1
  2157  007B                     _eusart1TxHead:	
  2158  007B                     	ds	1
  2159                           
  2160                           	psect	bssBANK0
  2161  0046                     __pbssBANK0:	
  2162  0046                     TMR0_ISR@CountCallBack:	
  2163  0046                     	ds	2
  2164  0048                     _eusart2RxCount:	
  2165  0048                     	ds	1
  2166  0049                     _eusart2RxTail:	
  2167  0049                     	ds	1
  2168  004A                     _eusart2RxHead:	
  2169  004A                     	ds	1
  2170  004B                     _eusart2TxTail:	
  2171  004B                     	ds	1
  2172  004C                     _eusart2TxHead:	
  2173  004C                     	ds	1
  2174  004D                     _eusart1RxCount:	
  2175  004D                     	ds	1
  2176  004E                     _eusart1RxTail:	
  2177  004E                     	ds	1
  2178  004F                     _eusart1RxHead:	
  2179  004F                     	ds	1
  2180  0050                     _eusart1TxTail:	
  2181  0050                     	ds	1
  2182  0051                     _ATString:	
  2183  0051                     	ds	6
  2184                           
  2185                           	psect	bssBANK2
  2186  0120                     __pbssBANK2:	
  2187  0120                     _eusart1TxBuffer:	
  2188  0120                     	ds	64
  2189                           
  2190                           	psect	bssBANK3
  2191  01A0                     __pbssBANK3:	
  2192  01A0                     _eusart1RxBuffer:	
  2193  01A0                     	ds	64
  2194                           
  2195                           	psect	bssBANK4
  2196  0220                     __pbssBANK4:	
  2197  0220                     _eusart2TxBuffer:	
  2198  0220                     	ds	64
  2199                           
  2200                           	psect	bssBANK5
  2201  02A0                     __pbssBANK5:	
  2202  02A0                     _eusart2RxBuffer:	
  2203  02A0                     	ds	64
  2204                           
  2205                           	psect	clrtext
  2206  0643                     clear_ram0:	
  2207                           ;	Called with FSR0 containing the base address, and
  2208                           ;	WREG with the size to clear
  2209                           
  2210  0643  0064               	clrwdt	;clear the watchdog before getting into this loop
  2211  0644                     clrloop0:	
  2212  0644  0180               	clrf	0	;clear RAM location pointed to by FSR
  2213  0645  3101               	addfsr 0,1
  2214  0646  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2215  0647  2E44               	goto	clrloop0	;have we reached the end yet?
  2216  0648  3400               	retlw	0	;all done for this memory range, return
  2217                           
  2218                           	psect	cstackBANK2
  2219  0160                     __pcstackBANK2:	
  2220  0160                     _GPRSDialing$871:	
  2221                           
  2222                           ; 2 bytes @ 0x0
  2223  0160                     	ds	2
  2224  0162                     _GPRSDialing$872:	
  2225                           
  2226                           ; 2 bytes @ 0x2
  2227  0162                     	ds	2
  2228  0164                     _GPRSDialing$873:	
  2229                           
  2230                           ; 2 bytes @ 0x4
  2231  0164                     	ds	2
  2232  0166                     _GPRSDialing$874:	
  2233                           
  2234                           ; 2 bytes @ 0x6
  2235  0166                     	ds	2
  2236  0168                     _GPRSDialing$875:	
  2237                           
  2238                           ; 2 bytes @ 0x8
  2239  0168                     	ds	2
  2240                           
  2241                           	psect	cstackBANK1
  2242  00A0                     __pcstackBANK1:	
  2243  00A0                     GPRSDialing@str1:	
  2244                           
  2245                           ; 80 bytes @ 0x0
  2246  00A0                     	ds	80
  2247                           
  2248                           	psect	cstackCOMMON
  2249  0070                     __pcstackCOMMON:	
  2250  0070                     ?_OSCILLATOR_Initialize:	
  2251  0070                     ?_EUSART2_Initialize:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0070                     ?_EUSART1_Initialize:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0070                     ?_EUSART1_Receive_ISR:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0070                     ??_EUSART1_Receive_ISR:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0070                     ?_EUSART1_Transmit_ISR:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0070                     ??_EUSART1_Transmit_ISR:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0070                     ?_EUSART2_Receive_ISR:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0070                     ??_EUSART2_Receive_ISR:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0070                     ?_EUSART2_Transmit_ISR:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0070                     ??_EUSART2_Transmit_ISR:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0070                     ?_Delay1s:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0070                     ?_StringCmpInit:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     ?_CloseGPRS:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0070                     ?_CmpString:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0070                     ?_FindStringHead:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0070                     ?_PIN_MANAGER_Initialize:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0070                     ?_SYSTEM_Initialize:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0070                     ?_INTERRUPT_InterruptManager:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0070                     ?_EUSART1_Read:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  0070                     ?_EUSART1_Write:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  0070                     ?_EUSART2_Read:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314  0070                     ?_main:	
  2315                           ; 1 bytes @ 0x0
  2316                           
  2317  0070                     ?_RecIsRight:	
  2318                           ; 1 bytes @ 0x0
  2319                           
  2320                           
  2321                           ; 1 bytes @ 0x0
  2322  0070                     	ds	1
  2323  0071                     ??_INTERRUPT_InterruptManager:	
  2324                           
  2325                           ; 1 bytes @ 0x1
  2326  0071                     	ds	1
  2327  0072                     ??_OSCILLATOR_Initialize:	
  2328  0072                     ??_EUSART2_Initialize:	
  2329                           ; 1 bytes @ 0x2
  2330                           
  2331  0072                     ??_EUSART1_Initialize:	
  2332                           ; 1 bytes @ 0x2
  2333                           
  2334  0072                     ??_Delay1s:	
  2335                           ; 1 bytes @ 0x2
  2336                           
  2337  0072                     ??_StringCmpInit:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340  0072                     ??_CmpString:	
  2341                           ; 1 bytes @ 0x2
  2342                           
  2343  0072                     ??_FindStringHead:	
  2344                           ; 1 bytes @ 0x2
  2345                           
  2346  0072                     ??_PIN_MANAGER_Initialize:	
  2347                           ; 1 bytes @ 0x2
  2348                           
  2349  0072                     ??_EUSART1_Read:	
  2350                           ; 1 bytes @ 0x2
  2351                           
  2352  0072                     ??_EUSART1_Write:	
  2353                           ; 1 bytes @ 0x2
  2354                           
  2355  0072                     ??_EUSART2_Read:	
  2356                           ; 1 bytes @ 0x2
  2357                           
  2358  0072                     ?_strlen:	
  2359                           ; 1 bytes @ 0x2
  2360                           
  2361  0072                     StringCmpInit@scr_input:	
  2362                           ; 2 bytes @ 0x2
  2363                           
  2364  0072                     Delay1s@time:	
  2365                           ; 1 bytes @ 0x2
  2366                           
  2367  0072                     strlen@s:	
  2368                           ; 1 bytes @ 0x2
  2369                           
  2370                           
  2371                           ; 2 bytes @ 0x2
  2372  0072                     	ds	1
  2373  0073                     ??_SYSTEM_Initialize:	
  2374  0073                     EUSART1_Read@readValue:	
  2375                           ; 1 bytes @ 0x3
  2376                           
  2377  0073                     EUSART1_Write@txData:	
  2378                           ; 1 bytes @ 0x3
  2379                           
  2380  0073                     EUSART2_Read@readValue:	
  2381                           ; 1 bytes @ 0x3
  2382                           
  2383  0073                     Delay1s@i:	
  2384                           ; 1 bytes @ 0x3
  2385                           
  2386                           
  2387                           ; 4 bytes @ 0x3
  2388  0073                     	ds	1
  2389  0074                     ??_strlen:	
  2390  0074                     ?_GetBuffer:	
  2391                           ; 1 bytes @ 0x4
  2392                           
  2393  0074                     GetBuffer@bytes:	
  2394                           ; 1 bytes @ 0x4
  2395                           
  2396                           
  2397                           ; 1 bytes @ 0x4
  2398  0074                     	ds	1
  2399  0075                     GetBuffer@uart_rec:	
  2400                           
  2401                           ; 2 bytes @ 0x5
  2402  0075                     	ds	1
  2403  0076                     FindStringHead@postion:	
  2404  0076                     CmpString@cnt:	
  2405                           ; 1 bytes @ 0x6
  2406                           
  2407  0076                     strlen@cp:	
  2408                           ; 1 bytes @ 0x6
  2409                           
  2410                           
  2411                           ; 2 bytes @ 0x6
  2412  0076                     	ds	1
  2413  0077                     ??_GetBuffer:	
  2414  0077                     FindStringHead@scr_input:	
  2415                           ; 1 bytes @ 0x7
  2416                           
  2417  0077                     CmpString@scr_input:	
  2418                           ; 1 bytes @ 0x7
  2419                           
  2420                           
  2421                           ; 1 bytes @ 0x7
  2422  0077                     	ds	1
  2423  0078                     ??_RecIsRight:	
  2424  0078                     ??_SendDat2GPRS:	
  2425                           ; 1 bytes @ 0x8
  2426                           
  2427  0078                     RecIsRight@scr:	
  2428                           ; 1 bytes @ 0x8
  2429                           
  2430                           
  2431                           ; 1 bytes @ 0x8
  2432  0078                     	ds	2
  2433                           
  2434                           	psect	cstackBANK0
  2435  0020                     __pcstackBANK0:	
  2436  0020                     ?_SendDat2GPRS:	
  2437  0020                     GetBuffer@cnt:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0020                     SendDat2GPRS@ATcmd:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443                           
  2444                           ; 2 bytes @ 0x0
  2445  0020                     	ds	1
  2446  0021                     GetBuffer@str1:	
  2447                           
  2448                           ; 1 bytes @ 0x1
  2449  0021                     	ds	1
  2450  0022                     SendDat2GPRS@cmdlgt:	
  2451                           
  2452                           ; 1 bytes @ 0x2
  2453  0022                     	ds	1
  2454  0023                     SendDat2GPRS@cnt:	
  2455                           
  2456                           ; 1 bytes @ 0x3
  2457  0023                     	ds	1
  2458  0024                     ?_GPRSDialing:	
  2459  0024                     ??_CloseGPRS:	
  2460                           ; 1 bytes @ 0x4
  2461                           
  2462  0024                     GPRSDialing@Dialing:	
  2463                           ; 1 bytes @ 0x4
  2464                           
  2465                           
  2466                           ; 1 bytes @ 0x4
  2467  0024                     	ds	1
  2468  0025                     ??_GPRSDialing:	
  2469  0025                     CloseGPRS@str1:	
  2470                           ; 1 bytes @ 0x5
  2471                           
  2472                           
  2473                           ; 30 bytes @ 0x5
  2474  0025                     	ds	1
  2475  0026                     _GPRSDialing$869:	
  2476                           
  2477                           ; 2 bytes @ 0x6
  2478  0026                     	ds	2
  2479  0028                     _GPRSDialing$870:	
  2480                           
  2481                           ; 2 bytes @ 0x8
  2482  0028                     	ds	2
  2483  002A                     GPRSDialing@scr:	
  2484                           
  2485                           ; 1 bytes @ 0xA
  2486  002A                     	ds	25
  2487  0043                     CloseGPRS@scr:	
  2488                           
  2489                           ; 1 bytes @ 0x23
  2490  0043                     	ds	1
  2491  0044                     ??_main:	
  2492                           
  2493                           ; 1 bytes @ 0x24
  2494  0044                     	ds	1
  2495  0045                     main@RightID:	
  2496                           
  2497                           ; 1 bytes @ 0x25
  2498  0045                     	ds	1
  2499                           
  2500                           	psect	maintext
  2501  043C                     __pmaintext:	
  2502 ;;
  2503 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2504 ;;
  2505 ;; *************** function _main *****************
  2506 ;; Defined at:
  2507 ;;		line 58 in file "main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  RightID         1   37[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : B1F/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2523 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2525 ;;Total ram usage:        2 bytes
  2526 ;; Hardware stack levels required when called:    5
  2527 ;; This function calls:
  2528 ;;		_CloseGPRS
  2529 ;;		_Delay1s
  2530 ;;		_EUSART2_Read
  2531 ;;		_GPRSDialing
  2532 ;;		_SYSTEM_Initialize
  2533 ;;		_StringCmpInit
  2534 ;; This function is called by:
  2535 ;;		Startup code after reset
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _main
  2541  043C                     _main:	
  2542                           
  2543                           ;main.c: 60: SYSTEM_Initialize();
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2547  043C  3186  2637  3184   	fcall	_SYSTEM_Initialize
  2548                           
  2549                           ;main.c: 61: uint8_t RightID = 0;
  2550  043F  0020               	movlb	0	; select bank0
  2551  0440  01C5               	clrf	main@RightID
  2552                           
  2553                           ;main.c: 66: (INTCONbits.GIE = 1);
  2554  0441  178B               	bsf	11,7	;volatile
  2555                           
  2556                           ;main.c: 69: (INTCONbits.PEIE = 1);
  2557  0442  170B               	bsf	11,6	;volatile
  2558                           
  2559                           ;main.c: 77: PIE4bits.RC2IE = 1;
  2560  0443  0021               	movlb	1	; select bank1
  2561  0444  1694               	bsf	20,5	;volatile
  2562                           
  2563                           ;main.c: 78: do { TRISE0 = 1; } while(0);
  2564  0445  1410               	bsf	16,0	;volatile
  2565                           
  2566                           ;main.c: 79: do { LATD6 = 1; } while(0);
  2567  0446  0022               	movlb	2	; select bank2
  2568  0447  170F               	bsf	15,6	;volatile
  2569                           
  2570                           ;main.c: 80: Delay1s(2);
  2571  0448  3002               	movlw	2
  2572  0449  3184  24B9  3184   	fcall	_Delay1s
  2573                           
  2574                           ;main.c: 81: do { LATB4 = 0; } while(0);
  2575  044C  0022               	movlb	2	; select bank2
  2576  044D  120D               	bcf	13,4	;volatile
  2577                           
  2578                           ;main.c: 82: do { LATB2 = 0; } while(0);
  2579  044E  110D               	bcf	13,2	;volatile
  2580                           
  2581                           ;main.c: 84: StringCmpInit(&ATString);
  2582  044F  3051               	movlw	(low (_ATString| 0))& (0+255)
  2583  0450  3185  251E  3184   	fcall	_StringCmpInit
  2584  0453                     l2342:	
  2585                           ;main.c: 87: while (1) {
  2586                           
  2587                           
  2588                           ;main.c: 88: RightID = EUSART2_Read();
  2589  0453  3184  24DC  3184   	fcall	_EUSART2_Read
  2590  0456  0020               	movlb	0	; select bank0
  2591  0457  00C4               	movwf	??_main
  2592  0458  0844               	movf	??_main,w
  2593  0459  00C5               	movwf	main@RightID
  2594                           
  2595                           ;main.c: 89: if (RightID)
  2596  045A  0845               	movf	main@RightID,w
  2597  045B  1903               	btfsc	3,2
  2598  045C  2C65               	goto	l2348
  2599                           
  2600                           ;main.c: 90: GPRSDialing(&ATString, RightID);
  2601  045D  0845               	movf	main@RightID,w
  2602  045E  00C4               	movwf	??_main
  2603  045F  0844               	movf	??_main,w
  2604  0460  00A4               	movwf	GPRSDialing@Dialing
  2605  0461  3051               	movlw	(low (_ATString| 0))& (0+255)
  2606  0462  3180  2074  3184   	fcall	_GPRSDialing
  2607  0465                     l2348:	
  2608                           
  2609                           ;main.c: 91: if (!RE0) {
  2610  0465  0020               	movlb	0	; select bank0
  2611  0466  1810               	btfsc	16,0	;volatile
  2612  0467  2C53               	goto	l2342
  2613                           
  2614                           ;main.c: 92: CloseGPRS(&ATString);
  2615  0468  3051               	movlw	(low (_ATString| 0))& (0+255)
  2616  0469  3183  2373  3184   	fcall	_CloseGPRS
  2617                           
  2618                           ;main.c: 93: do { LATB2 = 1; } while(0);
  2619  046C  0022               	movlb	2	; select bank2
  2620  046D  150D               	bsf	13,2	;volatile
  2621                           
  2622                           ;main.c: 94: do { LATB4 = 1; } while(0);
  2623  046E  160D               	bsf	13,4	;volatile
  2624                           
  2625                           ;main.c: 95: do { LATD6 = 0; } while(0);
  2626  046F  130F               	bcf	15,6	;volatile
  2627  0470  2C53               	goto	l2342
  2628  0471                     __end_of_main:	
  2629                           
  2630                           	psect	text1
  2631  051E                     __ptext1:	
  2632 ;; *************** function _StringCmpInit *****************
  2633 ;; Defined at:
  2634 ;;		line 24 in file "StringDeal.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;  scr_input       1    wreg     PTR struct StringCmpResu
  2637 ;;		 -> ATString(6), 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  scr_input       1    2[COMMON] PTR struct StringCmpResu
  2640 ;;		 -> ATString(6), 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2654 ;;Total ram usage:        1 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; Hardware stack levels required when called:    2
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _StringCmpInit
  2666  051E                     _StringCmpInit:	
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _StringCmpInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  2670                           ;StringCmpInit@scr_input stored from wreg
  2671  051E  00F2               	movwf	StringCmpInit@scr_input
  2672                           
  2673                           ;StringDeal.c: 25: scr_input->cmpstring = (0);
  2674  051F  0872               	movf	StringCmpInit@scr_input,w
  2675  0520  3E02               	addlw	2
  2676  0521  0086               	movwf	6
  2677  0522  0187               	clrf	7
  2678  0523  3000               	movlw	0
  2679  0524  3FC0               	movwi [0]fsr1
  2680  0525  3FC1               	movwi [1]fsr1
  2681                           
  2682                           ;StringDeal.c: 26: scr_input->inputlgt = 0;
  2683  0526  0A72               	incf	StringCmpInit@scr_input,w
  2684  0527  0086               	movwf	6
  2685  0528  0187               	clrf	7
  2686  0529  0181               	clrf	1
  2687                           
  2688                           ;StringDeal.c: 27: scr_input->cmpstring = (0);
  2689  052A  0872               	movf	StringCmpInit@scr_input,w
  2690  052B  3E02               	addlw	2
  2691  052C  0086               	movwf	6
  2692  052D  0187               	clrf	7
  2693  052E  3000               	movlw	0
  2694  052F  3FC0               	movwi [0]fsr1
  2695  0530  3FC1               	movwi [1]fsr1
  2696                           
  2697                           ;StringDeal.c: 28: scr_input->cmplgt = 0;
  2698  0531  0872               	movf	StringCmpInit@scr_input,w
  2699  0532  3E04               	addlw	4
  2700  0533  0086               	movwf	6
  2701  0534  0187               	clrf	7
  2702  0535  0181               	clrf	1
  2703                           
  2704                           ;StringDeal.c: 29: scr_input->cmpPzt = 0;
  2705  0536  0872               	movf	StringCmpInit@scr_input,w
  2706  0537  3E05               	addlw	5
  2707  0538  0086               	movwf	6
  2708  0539  0187               	clrf	7
  2709  053A  0181               	clrf	1
  2710  053B  0008               	return
  2711  053C                     __end_of_StringCmpInit:	
  2712                           
  2713                           	psect	text2
  2714  0637                     __ptext2:	
  2715 ;; *************** function _SYSTEM_Initialize *****************
  2716 ;; Defined at:
  2717 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2735 ;;Total ram usage:        0 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		_EUSART1_Initialize
  2740 ;;		_EUSART2_Initialize
  2741 ;;		_OSCILLATOR_Initialize
  2742 ;;		_PIN_MANAGER_Initialize
  2743 ;; This function is called by:
  2744 ;;		_main
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           
  2749                           ;psect for function _SYSTEM_Initialize
  2750  0637                     _SYSTEM_Initialize:	
  2751                           
  2752                           ;mcc.c: 70: OSCILLATOR_Initialize();
  2753                           
  2754                           ;incstack = 0
  2755                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2756  0637  3186  2649  3186   	fcall	_OSCILLATOR_Initialize
  2757                           
  2758                           ;mcc.c: 71: PIN_MANAGER_Initialize();
  2759  063A  3183  23BC  3186   	fcall	_PIN_MANAGER_Initialize
  2760                           
  2761                           ;mcc.c: 72: EUSART2_Initialize();
  2762  063D  3185  25EA  3186   	fcall	_EUSART2_Initialize
  2763                           
  2764                           ;mcc.c: 73: EUSART1_Initialize();
  2765  0640  3186  2605         	fcall	_EUSART1_Initialize
  2766  0642  0008               	return
  2767  0643                     __end_of_SYSTEM_Initialize:	
  2768                           
  2769                           	psect	text3
  2770  03BC                     __ptext3:	
  2771 ;; *************** function _PIN_MANAGER_Initialize *****************
  2772 ;; Defined at:
  2773 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; Hardware stack levels required when called:    2
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_SYSTEM_Initialize
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _PIN_MANAGER_Initialize
  2803  03BC                     _PIN_MANAGER_Initialize:	
  2804                           
  2805                           ;pin_manager.c: 51: LATA = 0x00;
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2809  03BC  0022               	movlb	2	; select bank2
  2810  03BD  018C               	clrf	12	;volatile
  2811                           
  2812                           ;pin_manager.c: 52: TRISA = 0xFF;
  2813  03BE  30FF               	movlw	255
  2814  03BF  0021               	movlb	1	; select bank1
  2815  03C0  008C               	movwf	12	;volatile
  2816                           
  2817                           ;pin_manager.c: 53: ANSELA = 0x2F;
  2818  03C1  302F               	movlw	47
  2819  03C2  0023               	movlb	3	; select bank3
  2820  03C3  008C               	movwf	12	;volatile
  2821                           
  2822                           ;pin_manager.c: 55: LATB = 0x01;
  2823  03C4  3001               	movlw	1
  2824  03C5  0022               	movlb	2	; select bank2
  2825  03C6  008D               	movwf	13	;volatile
  2826                           
  2827                           ;pin_manager.c: 56: TRISB = 0xEA;
  2828  03C7  30EA               	movlw	234
  2829  03C8  0021               	movlb	1	; select bank1
  2830  03C9  008D               	movwf	13	;volatile
  2831                           
  2832                           ;pin_manager.c: 57: ANSELB = 0x2A;
  2833  03CA  302A               	movlw	42
  2834  03CB  0023               	movlb	3	; select bank3
  2835  03CC  008D               	movwf	13	;volatile
  2836                           
  2837                           ;pin_manager.c: 58: WPUB = 0x00;
  2838  03CD  0024               	movlb	4	; select bank4
  2839  03CE  018D               	clrf	13	;volatile
  2840                           
  2841                           ;pin_manager.c: 60: IOCBNbits.IOCBN0 = 1;
  2842  03CF  0027               	movlb	7	; select bank7
  2843  03D0  1415               	bsf	21,0	;volatile
  2844                           
  2845                           ;pin_manager.c: 61: INTCONbits.IOCIE = 1;
  2846  03D1  158B               	bsf	11,3	;volatile
  2847                           
  2848                           ;pin_manager.c: 62: IOCBFbits.IOCBF0 = 0;
  2849  03D2  1016               	bcf	22,0	;volatile
  2850                           
  2851                           ;pin_manager.c: 64: LATC = 0x00;
  2852  03D3  0022               	movlb	2	; select bank2
  2853  03D4  018E               	clrf	14	;volatile
  2854                           
  2855                           ;pin_manager.c: 65: TRISC = 0xFF;
  2856  03D5  30FF               	movlw	255
  2857  03D6  0021               	movlb	1	; select bank1
  2858  03D7  008E               	movwf	14	;volatile
  2859                           
  2860                           ;pin_manager.c: 67: LATD = 0x00;
  2861  03D8  0022               	movlb	2	; select bank2
  2862  03D9  018F               	clrf	15	;volatile
  2863                           
  2864                           ;pin_manager.c: 68: TRISD = 0xBF;
  2865  03DA  30BF               	movlw	191
  2866  03DB  0021               	movlb	1	; select bank1
  2867  03DC  008F               	movwf	15	;volatile
  2868                           
  2869                           ;pin_manager.c: 69: ANSELD = 0x0F;
  2870  03DD  300F               	movlw	15
  2871  03DE  0023               	movlb	3	; select bank3
  2872  03DF  008F               	movwf	15	;volatile
  2873                           
  2874                           ;pin_manager.c: 70: WPUD = 0x00;
  2875  03E0  0024               	movlb	4	; select bank4
  2876  03E1  018F               	clrf	15	;volatile
  2877                           
  2878                           ;pin_manager.c: 72: LATE = 0x00;
  2879  03E2  0022               	movlb	2	; select bank2
  2880  03E3  0190               	clrf	16	;volatile
  2881                           
  2882                           ;pin_manager.c: 73: TRISE = 0xFF;
  2883  03E4  30FF               	movlw	255
  2884  03E5  0021               	movlb	1	; select bank1
  2885  03E6  0090               	movwf	16	;volatile
  2886                           
  2887                           ;pin_manager.c: 74: ANSELE = 0x06;
  2888  03E7  3006               	movlw	6
  2889  03E8  0023               	movlb	3	; select bank3
  2890  03E9  0090               	movwf	16	;volatile
  2891                           
  2892                           ;pin_manager.c: 75: WPUE = 0x00;
  2893  03EA  0024               	movlb	4	; select bank4
  2894  03EB  0190               	clrf	16	;volatile
  2895                           
  2896                           ;pin_manager.c: 77: LATF = 0x00;
  2897  03EC  0027               	movlb	7	; select bank7
  2898  03ED  018C               	clrf	12	;volatile
  2899                           
  2900                           ;pin_manager.c: 78: TRISF = 0xFE;
  2901  03EE  30FE               	movlw	254
  2902  03EF  0026               	movlb	6	; select bank6
  2903  03F0  008C               	movwf	12	;volatile
  2904                           
  2905                           ;pin_manager.c: 79: ANSELF = 0xFE;
  2906  03F1  30FE               	movlw	254
  2907  03F2  0028               	movlb	8	; select bank8
  2908  03F3  008C               	movwf	12	;volatile
  2909                           
  2910                           ;pin_manager.c: 81: LATG = 0x00;
  2911  03F4  0027               	movlb	7	; select bank7
  2912  03F5  018D               	clrf	13	;volatile
  2913                           
  2914                           ;pin_manager.c: 82: TRISG = 0x1F;
  2915  03F6  301F               	movlw	31
  2916  03F7  0026               	movlb	6	; select bank6
  2917  03F8  008D               	movwf	13	;volatile
  2918                           
  2919                           ;pin_manager.c: 83: ANSELG = 0x18;
  2920  03F9  3018               	movlw	24
  2921  03FA  0028               	movlb	8	; select bank8
  2922  03FB  008D               	movwf	13	;volatile
  2923                           
  2924                           ;pin_manager.c: 84: WPUG = 0x00;
  2925  03FC  0029               	movlb	9	; select bank9
  2926  03FD  018D               	clrf	13	;volatile
  2927                           
  2928                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 0x01;
  2929  03FE  0021               	movlb	1	; select bank1
  2930  03FF  1795               	bsf	21,7	;volatile
  2931                           
  2932                           ;pin_manager.c: 88: APFCON = 0x00;
  2933  0400  0022               	movlb	2	; select bank2
  2934  0401  019D               	clrf	29	;volatile
  2935  0402  0008               	return
  2936  0403                     __end_of_PIN_MANAGER_Initialize:	
  2937                           
  2938                           	psect	text4
  2939  0649                     __ptext4:	
  2940 ;; *************** function _OSCILLATOR_Initialize *****************
  2941 ;; Defined at:
  2942 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;		None
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  2956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  2960 ;;Total ram usage:        0 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; Hardware stack levels required when called:    2
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_SYSTEM_Initialize
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           
  2971                           ;psect for function _OSCILLATOR_Initialize
  2972  0649                     _OSCILLATOR_Initialize:	
  2973                           
  2974                           ;mcc.c: 79: OSCCON = 0x7A;
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2978  0649  307A               	movlw	122
  2979  064A  0021               	movlb	1	; select bank1
  2980  064B  0099               	movwf	25	;volatile
  2981                           
  2982                           ;mcc.c: 81: OSCSTAT = 0x00;
  2983  064C  019A               	clrf	26	;volatile
  2984  064D  0008               	return
  2985  064E                     __end_of_OSCILLATOR_Initialize:	
  2986                           
  2987                           	psect	text5
  2988  05EA                     __ptext5:	
  2989 ;; *************** function _EUSART2_Initialize *****************
  2990 ;; Defined at:
  2991 ;;		line 76 in file "mcc_generated_files/eusart2.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, status,2
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3007 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_SYSTEM_Initialize
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _EUSART2_Initialize
  3021  05EA                     _EUSART2_Initialize:	
  3022                           
  3023                           ;eusart2.c: 78: PIE4bits.RC2IE = 0;
  3024                           
  3025                           ;incstack = 0
  3026                           ; Regs used in _EUSART2_Initialize: [wreg+status,2]
  3027  05EA  0021               	movlb	1	; select bank1
  3028  05EB  1294               	bcf	20,5	;volatile
  3029                           
  3030                           ;eusart2.c: 79: PIE4bits.TX2IE = 0;
  3031  05EC  1214               	bcf	20,4	;volatile
  3032                           
  3033                           ;eusart2.c: 84: BAUD2CON = 0x48;
  3034  05ED  3048               	movlw	72
  3035  05EE  0029               	movlb	9	; select bank9
  3036  05EF  0097               	movwf	23	;volatile
  3037                           
  3038                           ;eusart2.c: 87: RC2STA = 0x90;
  3039  05F0  3090               	movlw	144
  3040  05F1  0095               	movwf	21	;volatile
  3041                           
  3042                           ;eusart2.c: 90: TX2STA = 0x26;
  3043  05F2  3026               	movlw	38
  3044  05F3  0096               	movwf	22	;volatile
  3045                           
  3046                           ;eusart2.c: 93: SP2BRGL = 0x04;
  3047  05F4  3004               	movlw	4
  3048  05F5  0093               	movwf	19	;volatile
  3049                           
  3050                           ;eusart2.c: 96: SP2BRGH = 0x0D;
  3051  05F6  300D               	movlw	13
  3052  05F7  0094               	movwf	20	;volatile
  3053                           
  3054                           ;eusart2.c: 100: eusart2TxHead = 0;
  3055  05F8  0020               	movlb	0	; select bank0
  3056  05F9  01CC               	clrf	_eusart2TxHead
  3057                           
  3058                           ;eusart2.c: 101: eusart2TxTail = 0;
  3059  05FA  01CB               	clrf	_eusart2TxTail
  3060                           
  3061                           ;eusart2.c: 102: eusart2TxBufferRemaining = sizeof (eusart2TxBuffer);
  3062  05FB  3040               	movlw	64
  3063  05FC  00F2               	movwf	??_EUSART2_Initialize
  3064  05FD  0872               	movf	??_EUSART2_Initialize,w
  3065  05FE  00D7               	movwf	_eusart2TxBufferRemaining	;volatile
  3066                           
  3067                           ;eusart2.c: 104: eusart2RxHead = 0;
  3068  05FF  01CA               	clrf	_eusart2RxHead
  3069                           
  3070                           ;eusart2.c: 105: eusart2RxTail = 0;
  3071  0600  01C9               	clrf	_eusart2RxTail
  3072                           
  3073                           ;eusart2.c: 106: eusart2RxCount = 0;
  3074  0601  01C8               	clrf	_eusart2RxCount	;volatile
  3075                           
  3076                           ;eusart2.c: 109: PIE4bits.RC2IE = 1;
  3077  0602  0021               	movlb	1	; select bank1
  3078  0603  1694               	bsf	20,5	;volatile
  3079  0604  0008               	return
  3080  0605                     __end_of_EUSART2_Initialize:	
  3081                           
  3082                           	psect	text6
  3083  0605                     __ptext6:	
  3084 ;; *************** function _EUSART1_Initialize *****************
  3085 ;; Defined at:
  3086 ;;		line 76 in file "mcc_generated_files/eusart1.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;		None
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;		None
  3091 ;; Return value:  Size  Location     Type
  3092 ;;                  1    wreg      void 
  3093 ;; Registers used:
  3094 ;;		wreg, status,2
  3095 ;; Tracked objects:
  3096 ;;		On entry : 0/0
  3097 ;;		On exit  : 0/0
  3098 ;;		Unchanged: 0/0
  3099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3104 ;;Total ram usage:        1 bytes
  3105 ;; Hardware stack levels used:    1
  3106 ;; Hardware stack levels required when called:    2
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_SYSTEM_Initialize
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           
  3115                           ;psect for function _EUSART1_Initialize
  3116  0605                     _EUSART1_Initialize:	
  3117                           
  3118                           ;eusart1.c: 78: PIE1bits.RC1IE = 0;
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in _EUSART1_Initialize: [wreg+status,2]
  3122  0605  0021               	movlb	1	; select bank1
  3123  0606  1291               	bcf	17,5	;volatile
  3124                           
  3125                           ;eusart1.c: 79: PIE1bits.TX1IE = 0;
  3126  0607  1211               	bcf	17,4	;volatile
  3127                           
  3128                           ;eusart1.c: 84: BAUD1CON = 0x48;
  3129  0608  3048               	movlw	72
  3130  0609  0023               	movlb	3	; select bank3
  3131  060A  009F               	movwf	31	;volatile
  3132                           
  3133                           ;eusart1.c: 87: RC1STA = 0x90;
  3134  060B  3090               	movlw	144
  3135  060C  009D               	movwf	29	;volatile
  3136                           
  3137                           ;eusart1.c: 90: TX1STA = 0x26;
  3138  060D  3026               	movlw	38
  3139  060E  009E               	movwf	30	;volatile
  3140                           
  3141                           ;eusart1.c: 93: SP1BRGL = 0xCF;
  3142  060F  30CF               	movlw	207
  3143  0610  009B               	movwf	27	;volatile
  3144                           
  3145                           ;eusart1.c: 96: SP1BRGH = 0x00;
  3146  0611  019C               	clrf	28	;volatile
  3147                           
  3148                           ;eusart1.c: 100: eusart1TxHead = 0;
  3149  0612  01FB               	clrf	_eusart1TxHead
  3150                           
  3151                           ;eusart1.c: 101: eusart1TxTail = 0;
  3152  0613  0020               	movlb	0	; select bank0
  3153  0614  01D0               	clrf	_eusart1TxTail
  3154                           
  3155                           ;eusart1.c: 102: eusart1TxBufferRemaining = sizeof (eusart1TxBuffer);
  3156  0615  3040               	movlw	64
  3157  0616  00F2               	movwf	??_EUSART1_Initialize
  3158  0617  0872               	movf	??_EUSART1_Initialize,w
  3159  0618  00D8               	movwf	_eusart1TxBufferRemaining	;volatile
  3160                           
  3161                           ;eusart1.c: 104: eusart1RxHead = 0;
  3162  0619  01CF               	clrf	_eusart1RxHead
  3163                           
  3164                           ;eusart1.c: 105: eusart1RxTail = 0;
  3165  061A  01CE               	clrf	_eusart1RxTail
  3166                           
  3167                           ;eusart1.c: 106: eusart1RxCount = 0;
  3168  061B  01CD               	clrf	_eusart1RxCount	;volatile
  3169                           
  3170                           ;eusart1.c: 109: PIE1bits.RC1IE = 1;
  3171  061C  0021               	movlb	1	; select bank1
  3172  061D  1691               	bsf	17,5	;volatile
  3173  061E  0008               	return
  3174  061F                     __end_of_EUSART1_Initialize:	
  3175                           
  3176                           	psect	text7
  3177  0074                     __ptext7:	
  3178 ;; *************** function _GPRSDialing *****************
  3179 ;; Defined at:
  3180 ;;		line 32 in file "HL6528.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  scr             1    wreg     PTR struct StringCmpResu
  3183 ;;		 -> ATString(6), 
  3184 ;;  Dialing         1    4[BANK0 ] unsigned char 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  scr             1   10[BANK0 ] PTR struct StringCmpResu
  3187 ;;		 -> ATString(6), 
  3188 ;;  str1           80    0[BANK1 ] unsigned char [80]
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3199 ;;      Locals:         0       5      80      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3200 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3201 ;;      Totals:         0       7      80      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:       97 bytes
  3203 ;; Hardware stack levels used:    1
  3204 ;; Hardware stack levels required when called:    4
  3205 ;; This function calls:
  3206 ;;		_Delay1s
  3207 ;;		_GetBuffer
  3208 ;;		_RecIsRight
  3209 ;;		_SendDat2GPRS
  3210 ;;		_strlen
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216                           
  3217                           ;psect for function _GPRSDialing
  3218  0074                     _GPRSDialing:	
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in _GPRSDialing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3222                           ;GPRSDialing@scr stored from wreg
  3223  0074  0020               	movlb	0	; select bank0
  3224  0075  00AA               	movwf	GPRSDialing@scr
  3225                           
  3226                           ;HL6528.c: 33: uint8_t str1[80];
  3227                           ;HL6528.c: 36: scr->inputstring = str1;
  3228  0076  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3229  0077  00A5               	movwf	??_GPRSDialing
  3230  0078  082A               	movf	GPRSDialing@scr,w
  3231  0079  0086               	movwf	6
  3232  007A  0187               	clrf	7
  3233  007B  0825               	movf	??_GPRSDialing,w
  3234  007C  0081               	movwf	1
  3235                           
  3236                           ;HL6528.c: 37: scr->inputlgt = sizeof (str1);
  3237  007D  3050               	movlw	80
  3238  007E  00A5               	movwf	??_GPRSDialing
  3239  007F  0A2A               	incf	GPRSDialing@scr,w
  3240  0080  0086               	movwf	6
  3241  0081  0187               	clrf	7
  3242  0082  0825               	movf	??_GPRSDialing,w
  3243  0083  0081               	movwf	1
  3244                           
  3245                           ;HL6528.c: 38: while (Dialing) {
  3246  0084  2A62               	goto	l2302
  3247  0085                     l2190:	
  3248                           ;HL6528.c: 40: case AT_K3:
  3249                           
  3250                           ;HL6528.c: 39: switch (Dialing) {
  3251                           
  3252                           
  3253                           ;HL6528.c: 41: {
  3254                           ;HL6528.c: 42: SendDat2GPRS(&K3, strlen(K3));
  3255  0085  301A               	movlw	low (_K3| (0+32768))
  3256  0086  00A0               	movwf	SendDat2GPRS@ATcmd
  3257  0087  3083               	movlw	high (_K3| (0+32768))
  3258  0088  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3259  0089  301A               	movlw	low (_K3| (0+32768))
  3260  008A  00F2               	movwf	strlen@s
  3261  008B  3083               	movlw	high (_K3| (0+32768))
  3262  008C  00F3               	movwf	strlen@s+1
  3263  008D  3185  253C  3180   	fcall	_strlen
  3264  0090  0872               	movf	?_strlen,w
  3265  0091  0020               	movlb	0	; select bank0
  3266  0092  00A5               	movwf	??_GPRSDialing
  3267  0093  0825               	movf	??_GPRSDialing,w
  3268  0094  00A2               	movwf	SendDat2GPRS@cmdlgt
  3269  0095  3185  2596  3180   	fcall	_SendDat2GPRS
  3270                           
  3271                           ;HL6528.c: 43: Delay1s(1);
  3272  0098  3001               	movlw	1
  3273  0099  3184  24B9  3180   	fcall	_Delay1s
  3274                           
  3275                           ;HL6528.c: 44: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3276  009C  3050               	movlw	80
  3277  009D  0020               	movlb	0	; select bank0
  3278  009E  00A5               	movwf	??_GPRSDialing
  3279  009F  0825               	movf	??_GPRSDialing,w
  3280  00A0  00F4               	movwf	GetBuffer@bytes
  3281  00A1  30FD               	movlw	low _EUSART1_Read
  3282  00A2  00F5               	movwf	GetBuffer@uart_rec
  3283  00A3  3004               	movlw	high _EUSART1_Read
  3284  00A4  00F6               	movwf	GetBuffer@uart_rec+1
  3285  00A5  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3286  00A6  3184  2495  3180   	fcall	_GetBuffer
  3287                           
  3288                           ;HL6528.c: 45: scr->cmpstring = (uint8_t*) (&REC_OK);
  3289  00A9  0020               	movlb	0	; select bank0
  3290  00AA  082A               	movf	GPRSDialing@scr,w
  3291  00AB  3E02               	addlw	2
  3292  00AC  0086               	movwf	6
  3293  00AD  0187               	clrf	7
  3294  00AE  3022               	movlw	low (_REC_OK| (0+32768))
  3295  00AF  3FC0               	movwi [0]fsr1
  3296  00B0  3083               	movlw	high (_REC_OK| (0+32768))
  3297  00B1  3FC1               	movwi [1]fsr1
  3298                           
  3299                           ;HL6528.c: 46: scr->cmplgt = 2;
  3300  00B2  3002               	movlw	2
  3301  00B3  00A5               	movwf	??_GPRSDialing
  3302  00B4  082A               	movf	GPRSDialing@scr,w
  3303  00B5  3E04               	addlw	4
  3304  00B6  0086               	movwf	6
  3305  00B7  0187               	clrf	7
  3306  00B8  0825               	movf	??_GPRSDialing,w
  3307  00B9  0081               	movwf	1
  3308                           
  3309                           ;HL6528.c: 47: Dialing = (RecIsRight(scr)) ? AT_CPIN : AT_K3;
  3310  00BA  082A               	movf	GPRSDialing@scr,w
  3311  00BB  3186  261F  3180   	fcall	_RecIsRight
  3312  00BE  3A00               	xorlw	0
  3313  00BF  1D03               	skipz
  3314  00C0  28C3               	goto	l2204
  3315  00C1  3010               	movlw	16
  3316  00C2  28C4               	goto	L1
  3317  00C3                     l2204:	
  3318  00C3  3011               	movlw	17
  3319  00C4                     L1:	
  3320  00C4  0020               	movlb	0	; select bank0
  3321  00C5  00A6               	movwf	_GPRSDialing$869
  3322  00C6  3000               	movlw	0
  3323  00C7  00A7               	movwf	_GPRSDialing$869+1
  3324  00C8  0826               	movf	_GPRSDialing$869,w
  3325  00C9  2A38               	goto	L12
  3326  00CA                     l2206:	
  3327                           ;HL6528.c: 49: }
  3328                           ;HL6528.c: 50: case AT_CPIN:
  3329                           
  3330                           ;HL6528.c: 48: break;
  3331                           
  3332                           
  3333                           ;HL6528.c: 51: {
  3334                           ;HL6528.c: 52: SendDat2GPRS(&CPIN, strlen(CPIN));
  3335  00CA  3005               	movlw	low (_CPIN| (0+32768))
  3336  00CB  00A0               	movwf	SendDat2GPRS@ATcmd
  3337  00CC  3083               	movlw	high (_CPIN| (0+32768))
  3338  00CD  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3339  00CE  3005               	movlw	low (_CPIN| (0+32768))
  3340  00CF  00F2               	movwf	strlen@s
  3341  00D0  3083               	movlw	high (_CPIN| (0+32768))
  3342  00D1  00F3               	movwf	strlen@s+1
  3343  00D2  3185  253C  3180   	fcall	_strlen
  3344  00D5  0872               	movf	?_strlen,w
  3345  00D6  0020               	movlb	0	; select bank0
  3346  00D7  00A5               	movwf	??_GPRSDialing
  3347  00D8  0825               	movf	??_GPRSDialing,w
  3348  00D9  00A2               	movwf	SendDat2GPRS@cmdlgt
  3349  00DA  3185  2596  3180   	fcall	_SendDat2GPRS
  3350                           
  3351                           ;HL6528.c: 53: Delay1s(1);
  3352  00DD  3001               	movlw	1
  3353  00DE  3184  24B9  3180   	fcall	_Delay1s
  3354                           
  3355                           ;HL6528.c: 54: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3356  00E1  3050               	movlw	80
  3357  00E2  0020               	movlb	0	; select bank0
  3358  00E3  00A5               	movwf	??_GPRSDialing
  3359  00E4  0825               	movf	??_GPRSDialing,w
  3360  00E5  00F4               	movwf	GetBuffer@bytes
  3361  00E6  30FD               	movlw	low _EUSART1_Read
  3362  00E7  00F5               	movwf	GetBuffer@uart_rec
  3363  00E8  3004               	movlw	high _EUSART1_Read
  3364  00E9  00F6               	movwf	GetBuffer@uart_rec+1
  3365  00EA  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3366  00EB  3184  2495  3180   	fcall	_GetBuffer
  3367                           
  3368                           ;HL6528.c: 55: Dialing = (RecIsRight(scr)) ? AT_CIMI : AT_CPIN;
  3369  00EE  0020               	movlb	0	; select bank0
  3370  00EF  082A               	movf	GPRSDialing@scr,w
  3371  00F0  3186  261F  3180   	fcall	_RecIsRight
  3372  00F3  3A00               	xorlw	0
  3373  00F4  1D03               	skipz
  3374  00F5  28F8               	goto	l2216
  3375  00F6  3011               	movlw	17
  3376  00F7  28F9               	goto	L3
  3377  00F8                     l2216:	
  3378  00F8  3012               	movlw	18
  3379  00F9                     L3:	
  3380  00F9  0020               	movlb	0	; select bank0
  3381  00FA  00A8               	movwf	_GPRSDialing$870
  3382  00FB  3000               	movlw	0
  3383  00FC  00A9               	movwf	_GPRSDialing$870+1
  3384  00FD  0828               	movf	_GPRSDialing$870,w
  3385  00FE  2A38               	goto	L12
  3386  00FF                     l2218:	
  3387                           ;HL6528.c: 57: }
  3388                           ;HL6528.c: 58: case AT_CIMI:
  3389                           
  3390                           ;HL6528.c: 56: break;
  3391                           
  3392                           
  3393                           ;HL6528.c: 59: {
  3394                           ;HL6528.c: 60: SendDat2GPRS(&CIMI, strlen(CIMI));
  3395  00FF  3010               	movlw	low (_CIMI| (0+32768))
  3396  0100  00A0               	movwf	SendDat2GPRS@ATcmd
  3397  0101  3083               	movlw	high (_CIMI| (0+32768))
  3398  0102  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3399  0103  3010               	movlw	low (_CIMI| (0+32768))
  3400  0104  00F2               	movwf	strlen@s
  3401  0105  3083               	movlw	high (_CIMI| (0+32768))
  3402  0106  00F3               	movwf	strlen@s+1
  3403  0107  3185  253C  3180   	fcall	_strlen
  3404  010A  0872               	movf	?_strlen,w
  3405  010B  0020               	movlb	0	; select bank0
  3406  010C  00A5               	movwf	??_GPRSDialing
  3407  010D  0825               	movf	??_GPRSDialing,w
  3408  010E  00A2               	movwf	SendDat2GPRS@cmdlgt
  3409  010F  3185  2596  3180   	fcall	_SendDat2GPRS
  3410                           
  3411                           ;HL6528.c: 61: Delay1s(1);
  3412  0112  3001               	movlw	1
  3413  0113  3184  24B9  3180   	fcall	_Delay1s
  3414                           
  3415                           ;HL6528.c: 62: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3416  0116  3050               	movlw	80
  3417  0117  0020               	movlb	0	; select bank0
  3418  0118  00A5               	movwf	??_GPRSDialing
  3419  0119  0825               	movf	??_GPRSDialing,w
  3420  011A  00F4               	movwf	GetBuffer@bytes
  3421  011B  30FD               	movlw	low _EUSART1_Read
  3422  011C  00F5               	movwf	GetBuffer@uart_rec
  3423  011D  3004               	movlw	high _EUSART1_Read
  3424  011E  00F6               	movwf	GetBuffer@uart_rec+1
  3425  011F  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3426  0120  3184  2495  3180   	fcall	_GetBuffer
  3427                           
  3428                           ;HL6528.c: 63: Dialing = (RecIsRight(scr)) ? AT_CREG : AT_CIMI;
  3429  0123  0020               	movlb	0	; select bank0
  3430  0124  082A               	movf	GPRSDialing@scr,w
  3431  0125  3186  261F  3180   	fcall	_RecIsRight
  3432  0128  3A00               	xorlw	0
  3433  0129  1D03               	skipz
  3434  012A  292D               	goto	l2228
  3435  012B  3012               	movlw	18
  3436  012C  292E               	goto	L5
  3437  012D                     l2228:	
  3438  012D  3013               	movlw	19
  3439  012E                     L5:	
  3440  012E  0022               	movlb	2	; select bank2
  3441  012F  00E0               	movwf	_GPRSDialing$871^(0+256)
  3442  0130  3000               	movlw	0
  3443  0131  00E1               	movwf	(_GPRSDialing$871^(0+256)+1)
  3444  0132  0860               	movf	_GPRSDialing$871^(0+256),w
  3445  0133  2A37               	goto	L14
  3446  0134                     l2230:	
  3447                           ;HL6528.c: 65: }
  3448                           ;HL6528.c: 66: case AT_CREG:
  3449                           
  3450                           ;HL6528.c: 64: break;
  3451                           
  3452                           
  3453                           ;HL6528.c: 67: {
  3454                           ;HL6528.c: 68: SendDat2GPRS(&CREG, strlen(CREG));
  3455  0134  30FA               	movlw	low (_CREG| (0+32768))
  3456  0135  00A0               	movwf	SendDat2GPRS@ATcmd
  3457  0136  3082               	movlw	high (_CREG| (0+32768))
  3458  0137  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3459  0138  30FA               	movlw	low (_CREG| (0+32768))
  3460  0139  00F2               	movwf	strlen@s
  3461  013A  3082               	movlw	high (_CREG| (0+32768))
  3462  013B  00F3               	movwf	strlen@s+1
  3463  013C  3185  253C  3180   	fcall	_strlen
  3464  013F  0872               	movf	?_strlen,w
  3465  0140  0020               	movlb	0	; select bank0
  3466  0141  00A5               	movwf	??_GPRSDialing
  3467  0142  0825               	movf	??_GPRSDialing,w
  3468  0143  00A2               	movwf	SendDat2GPRS@cmdlgt
  3469  0144  3185  2596  3180   	fcall	_SendDat2GPRS
  3470                           
  3471                           ;HL6528.c: 69: Delay1s(1);
  3472  0147  3001               	movlw	1
  3473  0148  3184  24B9  3180   	fcall	_Delay1s
  3474                           
  3475                           ;HL6528.c: 70: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3476  014B  3050               	movlw	80
  3477  014C  0020               	movlb	0	; select bank0
  3478  014D  00A5               	movwf	??_GPRSDialing
  3479  014E  0825               	movf	??_GPRSDialing,w
  3480  014F  00F4               	movwf	GetBuffer@bytes
  3481  0150  30FD               	movlw	low _EUSART1_Read
  3482  0151  00F5               	movwf	GetBuffer@uart_rec
  3483  0152  3004               	movlw	high _EUSART1_Read
  3484  0153  00F6               	movwf	GetBuffer@uart_rec+1
  3485  0154  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3486  0155  3184  2495  3180   	fcall	_GetBuffer
  3487                           
  3488                           ;HL6528.c: 71: scr->cmpstring = (uint8_t*) (&REC_CREG);
  3489  0158  0020               	movlb	0	; select bank0
  3490  0159  082A               	movf	GPRSDialing@scr,w
  3491  015A  3E02               	addlw	2
  3492  015B  0086               	movwf	6
  3493  015C  0187               	clrf	7
  3494  015D  30E2               	movlw	low (_REC_CREG| (0+32768))
  3495  015E  3FC0               	movwi [0]fsr1
  3496  015F  3082               	movlw	high (_REC_CREG| (0+32768))
  3497  0160  3FC1               	movwi [1]fsr1
  3498                           
  3499                           ;HL6528.c: 72: scr->cmplgt = 10;
  3500  0161  300A               	movlw	10
  3501  0162  00A5               	movwf	??_GPRSDialing
  3502  0163  082A               	movf	GPRSDialing@scr,w
  3503  0164  3E04               	addlw	4
  3504  0165  0086               	movwf	6
  3505  0166  0187               	clrf	7
  3506  0167  0825               	movf	??_GPRSDialing,w
  3507  0168  0081               	movwf	1
  3508                           
  3509                           ;HL6528.c: 73: Dialing = (RecIsRight(scr)) ? AT_CGREG : AT_CREG;
  3510  0169  082A               	movf	GPRSDialing@scr,w
  3511  016A  3186  261F  3180   	fcall	_RecIsRight
  3512  016D  3A00               	xorlw	0
  3513  016E  1D03               	skipz
  3514  016F  2972               	goto	l2244
  3515  0170  3013               	movlw	19
  3516  0171  2973               	goto	L7
  3517  0172                     l2244:	
  3518  0172  3014               	movlw	20
  3519  0173                     L7:	
  3520  0173  0022               	movlb	2	; select bank2
  3521  0174  00E2               	movwf	_GPRSDialing$872^(0+256)
  3522  0175  3000               	movlw	0
  3523  0176  00E3               	movwf	(_GPRSDialing$872^(0+256)+1)
  3524  0177  0862               	movf	_GPRSDialing$872^(0+256),w
  3525  0178  2A37               	goto	L14
  3526  0179                     l2246:	
  3527                           ;HL6528.c: 75: }
  3528                           ;HL6528.c: 76: case AT_CGREG:
  3529                           
  3530                           ;HL6528.c: 74: break;
  3531                           
  3532                           
  3533                           ;HL6528.c: 77: {
  3534                           ;HL6528.c: 78: SendDat2GPRS(&CGREG, strlen(CGREG));
  3535  0179  30EE               	movlw	low (_CGREG| (0+32768))
  3536  017A  00A0               	movwf	SendDat2GPRS@ATcmd
  3537  017B  3082               	movlw	high (_CGREG| (0+32768))
  3538  017C  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3539  017D  30EE               	movlw	low (_CGREG| (0+32768))
  3540  017E  00F2               	movwf	strlen@s
  3541  017F  3082               	movlw	high (_CGREG| (0+32768))
  3542  0180  00F3               	movwf	strlen@s+1
  3543  0181  3185  253C  3180   	fcall	_strlen
  3544  0184  0872               	movf	?_strlen,w
  3545  0185  0020               	movlb	0	; select bank0
  3546  0186  00A5               	movwf	??_GPRSDialing
  3547  0187  0825               	movf	??_GPRSDialing,w
  3548  0188  00A2               	movwf	SendDat2GPRS@cmdlgt
  3549  0189  3185  2596  3180   	fcall	_SendDat2GPRS
  3550                           
  3551                           ;HL6528.c: 79: Delay1s(1);
  3552  018C  3001               	movlw	1
  3553  018D  3184  24B9  3180   	fcall	_Delay1s
  3554                           
  3555                           ;HL6528.c: 80: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3556  0190  3050               	movlw	80
  3557  0191  0020               	movlb	0	; select bank0
  3558  0192  00A5               	movwf	??_GPRSDialing
  3559  0193  0825               	movf	??_GPRSDialing,w
  3560  0194  00F4               	movwf	GetBuffer@bytes
  3561  0195  30FD               	movlw	low _EUSART1_Read
  3562  0196  00F5               	movwf	GetBuffer@uart_rec
  3563  0197  3004               	movlw	high _EUSART1_Read
  3564  0198  00F6               	movwf	GetBuffer@uart_rec+1
  3565  0199  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3566  019A  3184  2495  3180   	fcall	_GetBuffer
  3567                           
  3568                           ;HL6528.c: 81: scr->cmpstring = (uint8_t*) (&REC_CGREG);
  3569  019D  0020               	movlb	0	; select bank0
  3570  019E  082A               	movf	GPRSDialing@scr,w
  3571  019F  3E02               	addlw	2
  3572  01A0  0086               	movwf	6
  3573  01A1  0187               	clrf	7
  3574  01A2  30D5               	movlw	low (_REC_CGREG| (0+32768))
  3575  01A3  3FC0               	movwi [0]fsr1
  3576  01A4  3082               	movlw	high (_REC_CGREG| (0+32768))
  3577  01A5  3FC1               	movwi [1]fsr1
  3578                           
  3579                           ;HL6528.c: 82: scr->cmplgt = 11;
  3580  01A6  300B               	movlw	11
  3581  01A7  00A5               	movwf	??_GPRSDialing
  3582  01A8  082A               	movf	GPRSDialing@scr,w
  3583  01A9  3E04               	addlw	4
  3584  01AA  0086               	movwf	6
  3585  01AB  0187               	clrf	7
  3586  01AC  0825               	movf	??_GPRSDialing,w
  3587  01AD  0081               	movwf	1
  3588                           
  3589                           ;HL6528.c: 83: Dialing = (RecIsRight(scr)) ? AT_KCNXCFG : AT_CGREG;
  3590  01AE  082A               	movf	GPRSDialing@scr,w
  3591  01AF  3186  261F  3180   	fcall	_RecIsRight
  3592  01B2  3A00               	xorlw	0
  3593  01B3  1D03               	skipz
  3594  01B4  29B7               	goto	l2260
  3595  01B5  3014               	movlw	20
  3596  01B6  29B8               	goto	L9
  3597  01B7                     l2260:	
  3598  01B7  3016               	movlw	22
  3599  01B8                     L9:	
  3600  01B8  0022               	movlb	2	; select bank2
  3601  01B9  00E4               	movwf	_GPRSDialing$873^(0+256)
  3602  01BA  3000               	movlw	0
  3603  01BB  00E5               	movwf	(_GPRSDialing$873^(0+256)+1)
  3604  01BC  0864               	movf	_GPRSDialing$873^(0+256),w
  3605  01BD  2A37               	goto	L14
  3606  01BE                     l2262:	
  3607                           ;HL6528.c: 85: }
  3608                           ;HL6528.c: 94: case AT_KCNXCFG:
  3609                           
  3610                           ;HL6528.c: 84: break;
  3611                           
  3612                           
  3613                           ;HL6528.c: 95: {
  3614                           ;HL6528.c: 96: SendDat2GPRS(&KCNXCFG, strlen(KCNXCFG));
  3615  01BE  30A6               	movlw	low (_KCNXCFG| (0+32768))
  3616  01BF  00A0               	movwf	SendDat2GPRS@ATcmd
  3617  01C0  3082               	movlw	high (_KCNXCFG| (0+32768))
  3618  01C1  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3619  01C2  30A6               	movlw	low (_KCNXCFG| (0+32768))
  3620  01C3  00F2               	movwf	strlen@s
  3621  01C4  3082               	movlw	high (_KCNXCFG| (0+32768))
  3622  01C5  00F3               	movwf	strlen@s+1
  3623  01C6  3185  253C  3180   	fcall	_strlen
  3624  01C9  0872               	movf	?_strlen,w
  3625  01CA  0020               	movlb	0	; select bank0
  3626  01CB  00A5               	movwf	??_GPRSDialing
  3627  01CC  0825               	movf	??_GPRSDialing,w
  3628  01CD  00A2               	movwf	SendDat2GPRS@cmdlgt
  3629  01CE  3185  2596  3180   	fcall	_SendDat2GPRS
  3630                           
  3631                           ;HL6528.c: 97: Delay1s(1);
  3632  01D1  3001               	movlw	1
  3633  01D2  3184  24B9  3180   	fcall	_Delay1s
  3634                           
  3635                           ;HL6528.c: 98: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3636  01D5  3050               	movlw	80
  3637  01D6  0020               	movlb	0	; select bank0
  3638  01D7  00A5               	movwf	??_GPRSDialing
  3639  01D8  0825               	movf	??_GPRSDialing,w
  3640  01D9  00F4               	movwf	GetBuffer@bytes
  3641  01DA  30FD               	movlw	low _EUSART1_Read
  3642  01DB  00F5               	movwf	GetBuffer@uart_rec
  3643  01DC  3004               	movlw	high _EUSART1_Read
  3644  01DD  00F6               	movwf	GetBuffer@uart_rec+1
  3645  01DE  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3646  01DF  3184  2495  3180   	fcall	_GetBuffer
  3647                           
  3648                           ;HL6528.c: 99: scr->cmpstring = (uint8_t*) (&REC_OK);
  3649  01E2  0020               	movlb	0	; select bank0
  3650  01E3  082A               	movf	GPRSDialing@scr,w
  3651  01E4  3E02               	addlw	2
  3652  01E5  0086               	movwf	6
  3653  01E6  0187               	clrf	7
  3654  01E7  3022               	movlw	low (_REC_OK| (0+32768))
  3655  01E8  3FC0               	movwi [0]fsr1
  3656  01E9  3083               	movlw	high (_REC_OK| (0+32768))
  3657  01EA  3FC1               	movwi [1]fsr1
  3658                           
  3659                           ;HL6528.c: 100: scr->cmplgt = 2;
  3660  01EB  3002               	movlw	2
  3661  01EC  00A5               	movwf	??_GPRSDialing
  3662  01ED  082A               	movf	GPRSDialing@scr,w
  3663  01EE  3E04               	addlw	4
  3664  01EF  0086               	movwf	6
  3665  01F0  0187               	clrf	7
  3666  01F1  0825               	movf	??_GPRSDialing,w
  3667  01F2  0081               	movwf	1
  3668                           
  3669                           ;HL6528.c: 101: Dialing = (RecIsRight(scr)) ? AT_KTCPCFG : AT_KCNXCFG;
  3670  01F3  082A               	movf	GPRSDialing@scr,w
  3671  01F4  3186  261F  3180   	fcall	_RecIsRight
  3672  01F7  3A00               	xorlw	0
  3673  01F8  1D03               	skipz
  3674  01F9  29FC               	goto	l2276
  3675  01FA  3016               	movlw	22
  3676  01FB  29FD               	goto	L11
  3677  01FC                     l2276:	
  3678  01FC  3017               	movlw	23
  3679  01FD                     L11:	
  3680  01FD  0022               	movlb	2	; select bank2
  3681  01FE  00E6               	movwf	_GPRSDialing$874^(0+256)
  3682  01FF  3000               	movlw	0
  3683  0200  00E7               	movwf	(_GPRSDialing$874^(0+256)+1)
  3684  0201  0866               	movf	_GPRSDialing$874^(0+256),w
  3685  0202  2A37               	goto	L14
  3686  0203                     l2278:	
  3687                           ;HL6528.c: 103: }
  3688                           ;HL6528.c: 104: case AT_KTCPCFG:
  3689                           
  3690                           ;HL6528.c: 102: break;
  3691                           
  3692                           
  3693                           ;HL6528.c: 105: {
  3694                           ;HL6528.c: 106: SendDat2GPRS(&KTCPCFG, strlen(KTCPCFG));
  3695  0203  3080               	movlw	low (_KTCPCFG| (0+32768))
  3696  0204  00A0               	movwf	SendDat2GPRS@ATcmd
  3697  0205  3082               	movlw	high (_KTCPCFG| (0+32768))
  3698  0206  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3699  0207  3080               	movlw	low (_KTCPCFG| (0+32768))
  3700  0208  00F2               	movwf	strlen@s
  3701  0209  3082               	movlw	high (_KTCPCFG| (0+32768))
  3702  020A  00F3               	movwf	strlen@s+1
  3703  020B  3185  253C  3180   	fcall	_strlen
  3704  020E  0872               	movf	?_strlen,w
  3705  020F  0020               	movlb	0	; select bank0
  3706  0210  00A5               	movwf	??_GPRSDialing
  3707  0211  0825               	movf	??_GPRSDialing,w
  3708  0212  00A2               	movwf	SendDat2GPRS@cmdlgt
  3709  0213  3185  2596  3180   	fcall	_SendDat2GPRS
  3710                           
  3711                           ;HL6528.c: 107: Delay1s(1);
  3712  0216  3001               	movlw	1
  3713  0217  3184  24B9  3180   	fcall	_Delay1s
  3714                           
  3715                           ;HL6528.c: 108: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3716  021A  3050               	movlw	80
  3717  021B  0020               	movlb	0	; select bank0
  3718  021C  00A5               	movwf	??_GPRSDialing
  3719  021D  0825               	movf	??_GPRSDialing,w
  3720  021E  00F4               	movwf	GetBuffer@bytes
  3721  021F  30FD               	movlw	low _EUSART1_Read
  3722  0220  00F5               	movwf	GetBuffer@uart_rec
  3723  0221  3004               	movlw	high _EUSART1_Read
  3724  0222  00F6               	movwf	GetBuffer@uart_rec+1
  3725  0223  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3726  0224  3184  2495  3180   	fcall	_GetBuffer
  3727                           
  3728                           ;HL6528.c: 109: Dialing = (RecIsRight(scr)) ? AT_KTCPSTART : AT_KTCPCFG;
  3729  0227  0020               	movlb	0	; select bank0
  3730  0228  082A               	movf	GPRSDialing@scr,w
  3731  0229  3186  261F  3180   	fcall	_RecIsRight
  3732  022C  3A00               	xorlw	0
  3733  022D  1D03               	skipz
  3734  022E  2A31               	goto	l2288
  3735  022F  3017               	movlw	23
  3736  0230  2A32               	goto	L13
  3737  0231                     l2288:	
  3738  0231  3018               	movlw	24
  3739  0232                     L13:	
  3740  0232  0022               	movlb	2	; select bank2
  3741  0233  00E8               	movwf	_GPRSDialing$875^(0+256)
  3742  0234  3000               	movlw	0
  3743  0235  00E9               	movwf	(_GPRSDialing$875^(0+256)+1)
  3744  0236  0868               	movf	_GPRSDialing$875^(0+256),w
  3745  0237                     L14:	
  3746  0237  0020               	movlb	0	; select bank0
  3747  0238                     L12:	
  3748  0238  00A5               	movwf	??_GPRSDialing
  3749  0239  0825               	movf	??_GPRSDialing,w
  3750  023A  00A4               	movwf	GPRSDialing@Dialing
  3751                           
  3752                           ;HL6528.c: 110: break;
  3753  023B  2A62               	goto	l2302
  3754  023C                     l2290:	
  3755                           ;HL6528.c: 111: }
  3756                           ;HL6528.c: 112: case AT_KTCPSTART:
  3757                           
  3758                           
  3759                           ;HL6528.c: 113: {
  3760                           ;HL6528.c: 114: SendDat2GPRS(&KTCPSTART, strlen(KTCPSTART));
  3761  023C  30C4               	movlw	low (_KTCPSTART| (0+32768))
  3762  023D  00A0               	movwf	SendDat2GPRS@ATcmd
  3763  023E  3082               	movlw	high (_KTCPSTART| (0+32768))
  3764  023F  00A1               	movwf	SendDat2GPRS@ATcmd+1
  3765  0240  30C4               	movlw	low (_KTCPSTART| (0+32768))
  3766  0241  00F2               	movwf	strlen@s
  3767  0242  3082               	movlw	high (_KTCPSTART| (0+32768))
  3768  0243  00F3               	movwf	strlen@s+1
  3769  0244  3185  253C  3180   	fcall	_strlen
  3770  0247  0872               	movf	?_strlen,w
  3771  0248  0020               	movlb	0	; select bank0
  3772  0249  00A5               	movwf	??_GPRSDialing
  3773  024A  0825               	movf	??_GPRSDialing,w
  3774  024B  00A2               	movwf	SendDat2GPRS@cmdlgt
  3775  024C  3185  2596  3180   	fcall	_SendDat2GPRS
  3776                           
  3777                           ;HL6528.c: 115: Delay1s(1);
  3778  024F  3001               	movlw	1
  3779  0250  3184  24B9  3180   	fcall	_Delay1s
  3780                           
  3781                           ;HL6528.c: 116: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  3782  0253  3050               	movlw	80
  3783  0254  0020               	movlb	0	; select bank0
  3784  0255  00A5               	movwf	??_GPRSDialing
  3785  0256  0825               	movf	??_GPRSDialing,w
  3786  0257  00F4               	movwf	GetBuffer@bytes
  3787  0258  30FD               	movlw	low _EUSART1_Read
  3788  0259  00F5               	movwf	GetBuffer@uart_rec
  3789  025A  3004               	movlw	high _EUSART1_Read
  3790  025B  00F6               	movwf	GetBuffer@uart_rec+1
  3791  025C  30A0               	movlw	(low (GPRSDialing@str1| 0))& (0+255)
  3792  025D  3184  2495  3180   	fcall	_GetBuffer
  3793                           
  3794                           ;HL6528.c: 117: Dialing = 0;
  3795  0260  0020               	movlb	0	; select bank0
  3796  0261  01A4               	clrf	GPRSDialing@Dialing
  3797  0262                     l2302:	
  3798                           ;HL6528.c: 128: }
  3799                           ;HL6528.c: 129: }
  3800                           
  3801                           ;HL6528.c: 121: {
  3802                           ;HL6528.c: 127: break;
  3803                           
  3804                           ;HL6528.c: 119: }
  3805                           ;HL6528.c: 120: default:
  3806                           
  3807                           ;HL6528.c: 118: break;
  3808                           
  3809  0262  0824               	movf	GPRSDialing@Dialing,w
  3810  0263  1903               	btfsc	3,2
  3811  0264  0008               	return
  3812  0265  0824               	movf	GPRSDialing@Dialing,w
  3813                           
  3814                           ; Switch size 1, requested type "space"
  3815                           ; Number of cases is 8, Range of values is 16 to 24
  3816                           ; switch strategies available:
  3817                           ; Name         Instructions Cycles
  3818                           ; simple_byte           25    13 (average)
  3819                           ; direct_byte           27     9 (fixed)
  3820                           ; jumptable            263     9 (fixed)
  3821                           ;	Chosen strategy is simple_byte
  3822  0266  3A10               	xorlw	16	; case 16
  3823  0267  1903               	skipnz
  3824  0268  2885               	goto	l2190
  3825  0269  3A01               	xorlw	1	; case 17
  3826  026A  1903               	skipnz
  3827  026B  28CA               	goto	l2206
  3828  026C  3A03               	xorlw	3	; case 18
  3829  026D  1903               	skipnz
  3830  026E  28FF               	goto	l2218
  3831  026F  3A01               	xorlw	1	; case 19
  3832  0270  1903               	skipnz
  3833  0271  2934               	goto	l2230
  3834  0272  3A07               	xorlw	7	; case 20
  3835  0273  1903               	skipnz
  3836  0274  2979               	goto	l2246
  3837  0275  3A02               	xorlw	2	; case 22
  3838  0276  1903               	skipnz
  3839  0277  29BE               	goto	l2262
  3840  0278  3A01               	xorlw	1	; case 23
  3841  0279  1903               	skipnz
  3842  027A  2A03               	goto	l2278
  3843  027B  3A0F               	xorlw	15	; case 24
  3844  027C  1903               	skipnz
  3845  027D  2A3C               	goto	l2290
  3846  027E  2A62               	goto	l2302
  3847  027F  2A62               	goto	l2302
  3848  0280                     __end_of_GPRSDialing:	
  3849                           
  3850                           	psect	text8
  3851  04DC                     __ptext8:	
  3852 ;; *************** function _EUSART2_Read *****************
  3853 ;; Defined at:
  3854 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  readValue       1    3[COMMON] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      unsigned char 
  3861 ;; Registers used:
  3862 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3871 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3872 ;;Total ram usage:        2 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_main
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           
  3883                           ;psect for function _EUSART2_Read
  3884  04DC                     _EUSART2_Read:	
  3885                           
  3886                           ;eusart2.c: 113: uint8_t readValue = 0;
  3887                           
  3888                           ;incstack = 0
  3889                           ; Regs used in _EUSART2_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  3890  04DC  01F3               	clrf	EUSART2_Read@readValue
  3891                           
  3892                           ;eusart2.c: 115: while (0 == eusart2RxCount) {
  3893  04DD  0020               	movlb	0	; select bank0
  3894  04DE  0848               	movf	_eusart2RxCount,w	;volatile
  3895  04DF  1D03               	btfss	3,2
  3896  04E0  2CE3               	goto	l222
  3897                           
  3898                           ;eusart2.c: 116: return 0;
  3899  04E1  3000               	movlw	0
  3900  04E2  0008               	return
  3901  04E3                     l222:	
  3902                           
  3903                           ;eusart2.c: 117: }
  3904                           ;eusart2.c: 119: PIE4bits.RC2IE = 0;
  3905  04E3  0021               	movlb	1	; select bank1
  3906  04E4  1294               	bcf	20,5	;volatile
  3907                           
  3908                           ;eusart2.c: 121: readValue = eusart2RxBuffer[eusart2RxTail++];
  3909  04E5  0020               	movlb	0	; select bank0
  3910  04E6  0849               	movf	_eusart2RxTail,w
  3911  04E7  3EA0               	addlw	(low (_eusart2RxBuffer| (0+512)))& (0+255)
  3912  04E8  0086               	movwf	6
  3913  04E9  3002               	movlw	2	; select bank5/6
  3914  04EA  0087               	movwf	7
  3915  04EB  0801               	movf	1,w
  3916  04EC  00F2               	movwf	??_EUSART2_Read
  3917  04ED  0872               	movf	??_EUSART2_Read,w
  3918  04EE  00F3               	movwf	EUSART2_Read@readValue
  3919  04EF  3001               	movlw	1
  3920  04F0  00F2               	movwf	??_EUSART2_Read
  3921  04F1  0872               	movf	??_EUSART2_Read,w
  3922  04F2  07C9               	addwf	_eusart2RxTail,f
  3923                           
  3924                           ;eusart2.c: 122: if (sizeof (eusart2RxBuffer) <= eusart2RxTail) {
  3925  04F3  3040               	movlw	64
  3926  04F4  0249               	subwf	_eusart2RxTail,w
  3927  04F5  1803               	btfsc	3,0
  3928                           
  3929                           ;eusart2.c: 123: eusart2RxTail = 0;
  3930  04F6  01C9               	clrf	_eusart2RxTail
  3931                           
  3932                           ;eusart2.c: 124: }
  3933                           ;eusart2.c: 125: eusart2RxCount--;
  3934  04F7  3001               	movlw	1
  3935  04F8  02C8               	subwf	_eusart2RxCount,f	;volatile
  3936                           
  3937                           ;eusart2.c: 126: PIE4bits.RC2IE = 1;
  3938  04F9  0021               	movlb	1	; select bank1
  3939  04FA  1694               	bsf	20,5	;volatile
  3940                           
  3941                           ;eusart2.c: 128: return readValue;
  3942  04FB  0873               	movf	EUSART2_Read@readValue,w
  3943  04FC  0008               	return
  3944  04FD                     __end_of_EUSART2_Read:	
  3945                           
  3946                           	psect	text9
  3947  0373                     __ptext9:	
  3948 ;; *************** function _CloseGPRS *****************
  3949 ;; Defined at:
  3950 ;;		line 134 in file "HL6528.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  scr             1    wreg     PTR struct StringCmpResu
  3953 ;;		 -> ATString(6), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  scr             1   35[BANK0 ] PTR struct StringCmpResu
  3956 ;;		 -> ATString(6), 
  3957 ;;  str1           30    5[BANK0 ] unsigned char [30]
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      unsigned char 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3968 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3970 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  3971 ;;Total ram usage:       32 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    4
  3974 ;; This function calls:
  3975 ;;		_Delay1s
  3976 ;;		_GetBuffer
  3977 ;;		_RecIsRight
  3978 ;;		_SendDat2GPRS
  3979 ;;		_strlen
  3980 ;; This function is called by:
  3981 ;;		_main
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           
  3986                           ;psect for function _CloseGPRS
  3987  0373                     _CloseGPRS:	
  3988                           
  3989                           ;incstack = 0
  3990                           ; Regs used in _CloseGPRS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3991                           ;CloseGPRS@scr stored from wreg
  3992  0373  0020               	movlb	0	; select bank0
  3993  0374  00C3               	movwf	CloseGPRS@scr
  3994                           
  3995                           ;HL6528.c: 135: uint8_t str1[30];
  3996                           ;HL6528.c: 136: scr->inputstring = str1;
  3997  0375  3025               	movlw	(low (CloseGPRS@str1| 0))& (0+255)
  3998  0376  00A4               	movwf	??_CloseGPRS
  3999  0377  0843               	movf	CloseGPRS@scr,w
  4000  0378  0086               	movwf	6
  4001  0379  0187               	clrf	7
  4002  037A  0824               	movf	??_CloseGPRS,w
  4003  037B  0081               	movwf	1
  4004                           
  4005                           ;HL6528.c: 137: scr->inputlgt = sizeof (str1);
  4006  037C  301E               	movlw	30
  4007  037D  00A4               	movwf	??_CloseGPRS
  4008  037E  0A43               	incf	CloseGPRS@scr,w
  4009  037F  0086               	movwf	6
  4010  0380  0187               	clrf	7
  4011  0381  0824               	movf	??_CloseGPRS,w
  4012  0382  0081               	movwf	1
  4013                           
  4014                           ;HL6528.c: 138: scr->cmpstring = (uint8_t*) (&REC_OK);
  4015  0383  0843               	movf	CloseGPRS@scr,w
  4016  0384  3E02               	addlw	2
  4017  0385  0086               	movwf	6
  4018  0386  0187               	clrf	7
  4019  0387  3022               	movlw	low (_REC_OK| (0+32768))
  4020  0388  3FC0               	movwi [0]fsr1
  4021  0389  3083               	movlw	high (_REC_OK| (0+32768))
  4022  038A  3FC1               	movwi [1]fsr1
  4023                           
  4024                           ;HL6528.c: 139: scr->cmplgt = 2;
  4025  038B  3002               	movlw	2
  4026  038C  00A4               	movwf	??_CloseGPRS
  4027  038D  0843               	movf	CloseGPRS@scr,w
  4028  038E  3E04               	addlw	4
  4029  038F  0086               	movwf	6
  4030  0390  0187               	clrf	7
  4031  0391  0824               	movf	??_CloseGPRS,w
  4032  0392  0081               	movwf	1
  4033                           
  4034                           ;HL6528.c: 140: SendDat2GPRS(&KTCPSTART, strlen(KTCPSTART));
  4035  0393  30C4               	movlw	low (_KTCPSTART| (0+32768))
  4036  0394  00A0               	movwf	SendDat2GPRS@ATcmd
  4037  0395  3082               	movlw	high (_KTCPSTART| (0+32768))
  4038  0396  00A1               	movwf	SendDat2GPRS@ATcmd+1
  4039  0397  30C4               	movlw	low (_KTCPSTART| (0+32768))
  4040  0398  00F2               	movwf	strlen@s
  4041  0399  3082               	movlw	high (_KTCPSTART| (0+32768))
  4042  039A  00F3               	movwf	strlen@s+1
  4043  039B  3185  253C  3183   	fcall	_strlen
  4044  039E  0872               	movf	?_strlen,w
  4045  039F  0020               	movlb	0	; select bank0
  4046  03A0  00A4               	movwf	??_CloseGPRS
  4047  03A1  0824               	movf	??_CloseGPRS,w
  4048  03A2  00A2               	movwf	SendDat2GPRS@cmdlgt
  4049  03A3  3185  2596  3183   	fcall	_SendDat2GPRS
  4050                           
  4051                           ;HL6528.c: 141: Delay1s(1);
  4052  03A6  3001               	movlw	1
  4053  03A7  3184  24B9  3183   	fcall	_Delay1s
  4054                           
  4055                           ;HL6528.c: 142: GetBuffer(str1, sizeof (str1), EUSART1_Read);
  4056  03AA  301E               	movlw	30
  4057  03AB  0020               	movlb	0	; select bank0
  4058  03AC  00A4               	movwf	??_CloseGPRS
  4059  03AD  0824               	movf	??_CloseGPRS,w
  4060  03AE  00F4               	movwf	GetBuffer@bytes
  4061  03AF  30FD               	movlw	low _EUSART1_Read
  4062  03B0  00F5               	movwf	GetBuffer@uart_rec
  4063  03B1  3004               	movlw	high _EUSART1_Read
  4064  03B2  00F6               	movwf	GetBuffer@uart_rec+1
  4065  03B3  3025               	movlw	(low (CloseGPRS@str1| 0))& (0+255)
  4066  03B4  3184  2495  3183   	fcall	_GetBuffer
  4067                           
  4068                           ;HL6528.c: 143: return RecIsRight(scr);
  4069                           ;	Return value of _CloseGPRS is never used
  4070  03B7  0020               	movlb	0	; select bank0
  4071  03B8  0843               	movf	CloseGPRS@scr,w
  4072  03B9  3186  261F         	fcall	_RecIsRight
  4073  03BB  0008               	return
  4074  03BC                     __end_of_CloseGPRS:	
  4075                           
  4076                           	psect	text10
  4077  053C                     __ptext10:	
  4078 ;; *************** function _strlen *****************
  4079 ;; Defined at:
  4080 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  s               2    2[COMMON] PTR const unsigned char 
  4083 ;;		 -> KTCPSTART(17), KTCPCFG(38), KCNXCFG(30), CGREG(12), 
  4084 ;;		 -> CREG(11), CIMI(10), CPIN(11), K3(8), 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  cp              2    6[COMMON] PTR const unsigned char 
  4087 ;;		 -> KTCPSTART(17), KTCPCFG(38), KCNXCFG(30), CGREG(12), 
  4088 ;;		 -> CREG(11), CIMI(10), CPIN(11), K3(8), 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  2    2[COMMON] unsigned int 
  4091 ;; Registers used:
  4092 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4102 ;;Total ram usage:        6 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_GPRSDialing
  4109 ;;		_CloseGPRS
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _strlen
  4115  053C                     _strlen:	
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  4119  053C  0873               	movf	strlen@s+1,w
  4120  053D  00F7               	movwf	strlen@cp+1
  4121  053E  0872               	movf	strlen@s,w
  4122  053F  00F6               	movwf	strlen@cp
  4123  0540                     l1810:	
  4124  0540  0876               	movf	strlen@cp,w
  4125  0541  0084               	movwf	4
  4126  0542  0877               	movf	strlen@cp+1,w
  4127  0543  0085               	movwf	5
  4128  0544  0012               	moviw fsr0++
  4129  0545  1903               	btfsc	3,2
  4130  0546  2D4C               	goto	l1812
  4131  0547  3001               	movlw	1
  4132  0548  07F6               	addwf	strlen@cp,f
  4133  0549  3000               	movlw	0
  4134  054A  3DF7               	addwfc	strlen@cp+1,f
  4135  054B  2D40               	goto	l1810
  4136  054C                     l1812:	
  4137  054C  0972               	comf	strlen@s,w
  4138  054D  00F4               	movwf	??_strlen
  4139  054E  0973               	comf	strlen@s+1,w
  4140  054F  00F5               	movwf	??_strlen+1
  4141  0550  0AF4               	incf	??_strlen,f
  4142  0551  1903               	skipnz
  4143  0552  0AF5               	incf	??_strlen+1,f
  4144  0553  0876               	movf	strlen@cp,w
  4145  0554  0774               	addwf	??_strlen,w
  4146  0555  00F2               	movwf	?_strlen
  4147  0556  0877               	movf	strlen@cp+1,w
  4148  0557  3D75               	addwfc	??_strlen+1,w
  4149  0558  00F3               	movwf	?_strlen+1
  4150  0559  0008               	return
  4151  055A                     __end_of_strlen:	
  4152                           
  4153                           	psect	text11
  4154  0596                     __ptext11:	
  4155 ;; *************** function _SendDat2GPRS *****************
  4156 ;; Defined at:
  4157 ;;		line 24 in file "HL6528.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  ATcmd           2    0[BANK0 ] PTR const unsigned char 
  4160 ;;		 -> KTCPSTART(17), KTCPCFG(38), KCNXCFG(30), CGREG(12), 
  4161 ;;		 -> CREG(11), CIMI(10), CPIN(11), K3(8), 
  4162 ;;  cmdlgt          1    2[BANK0 ] const unsigned char 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  cnt             1    3[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4174 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4177 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4178 ;;Total ram usage:        6 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    3
  4181 ;; This function calls:
  4182 ;;		_EUSART1_Write
  4183 ;; This function is called by:
  4184 ;;		_GPRSDialing
  4185 ;;		_CloseGPRS
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           
  4190                           ;psect for function _SendDat2GPRS
  4191  0596                     _SendDat2GPRS:	
  4192                           
  4193                           ;HL6528.c: 25: uint8_t cnt = 0;
  4194                           
  4195                           ;incstack = 0
  4196                           ; Regs used in _SendDat2GPRS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4197  0596  0020               	movlb	0	; select bank0
  4198  0597  01A3               	clrf	SendDat2GPRS@cnt
  4199                           
  4200                           ;HL6528.c: 27: for (cnt = 0; cnt < cmdlgt; cnt++) {
  4201  0598  01A3               	clrf	SendDat2GPRS@cnt
  4202  0599                     L15:	
  4203  0599  0822               	movf	SendDat2GPRS@cmdlgt,w
  4204  059A  0223               	subwf	SendDat2GPRS@cnt,w
  4205  059B  1803               	btfsc	3,0
  4206  059C  0008               	return
  4207                           
  4208                           ;HL6528.c: 28: EUSART1_Write(*(ATcmd + cnt));
  4209  059D  0821               	movf	SendDat2GPRS@ATcmd+1,w
  4210  059E  00F9               	movwf	??_SendDat2GPRS+1
  4211  059F  0820               	movf	SendDat2GPRS@ATcmd,w
  4212  05A0  00F8               	movwf	??_SendDat2GPRS
  4213  05A1  0823               	movf	SendDat2GPRS@cnt,w
  4214  05A2  0778               	addwf	??_SendDat2GPRS,w
  4215  05A3  0084               	movwf	4
  4216  05A4  0879               	movf	??_SendDat2GPRS+1,w
  4217  05A5  1803               	skipnc
  4218  05A6  0A79               	incf	??_SendDat2GPRS+1,w
  4219  05A7  0085               	movwf	5
  4220  05A8  0800               	movf	0,w	;code access
  4221  05A9  3184  2471  3185   	fcall	_EUSART1_Write
  4222  05AC  3001               	movlw	1
  4223  05AD  00F8               	movwf	??_SendDat2GPRS
  4224  05AE  0878               	movf	??_SendDat2GPRS,w
  4225  05AF  0020               	movlb	0	; select bank0
  4226  05B0  07A3               	addwf	SendDat2GPRS@cnt,f
  4227  05B1  2D99               	goto	L15
  4228  05B2                     __end_of_SendDat2GPRS:	
  4229                           
  4230                           	psect	text12
  4231  0471                     __ptext12:	
  4232 ;; *************** function _EUSART1_Write *****************
  4233 ;; Defined at:
  4234 ;;		line 131 in file "mcc_generated_files/eusart1.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  txData          1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  txData          1    3[COMMON] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4251 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4252 ;;Total ram usage:        2 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:    2
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_SendDat2GPRS
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           
  4263                           ;psect for function _EUSART1_Write
  4264  0471                     _EUSART1_Write:	
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _EUSART1_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4268                           ;EUSART1_Write@txData stored from wreg
  4269  0471  00F3               	movwf	EUSART1_Write@txData
  4270  0472                     l2148:	
  4271                           ;eusart1.c: 132: while (0 == eusart1TxBufferRemaining) {
  4272                           
  4273  0472  0020               	movlb	0	; select bank0
  4274  0473  0858               	movf	_eusart1TxBufferRemaining,w	;volatile
  4275  0474  1903               	btfsc	3,2
  4276  0475  2C72               	goto	l2148
  4277                           
  4278                           ;eusart1.c: 133: }
  4279                           ;eusart1.c: 135: if (0 == PIE1bits.TX1IE) {
  4280  0476  0021               	movlb	1	; select bank1
  4281  0477  1A11               	btfsc	17,4	;volatile
  4282  0478  2C7D               	goto	l165
  4283                           
  4284                           ;eusart1.c: 136: TX1REG = txData;
  4285  0479  0873               	movf	EUSART1_Write@txData,w
  4286  047A  0023               	movlb	3	; select bank3
  4287  047B  009A               	movwf	26	;volatile
  4288                           
  4289                           ;eusart1.c: 137: } else {
  4290  047C  2C92               	goto	l2162
  4291  047D                     l165:	
  4292                           
  4293                           ;eusart1.c: 138: PIE1bits.TX1IE = 0;
  4294  047D  1211               	bcf	17,4	;volatile
  4295                           
  4296                           ;eusart1.c: 139: eusart1TxBuffer[eusart1TxHead++] = txData;
  4297  047E  0873               	movf	EUSART1_Write@txData,w
  4298  047F  00F2               	movwf	??_EUSART1_Write
  4299  0480  087B               	movf	_eusart1TxHead,w
  4300  0481  3E20               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
  4301  0482  0086               	movwf	6
  4302  0483  3001               	movlw	1	; select bank2/3
  4303  0484  0087               	movwf	7
  4304  0485  0872               	movf	??_EUSART1_Write,w
  4305  0486  0081               	movwf	1
  4306  0487  3001               	movlw	1
  4307  0488  00F2               	movwf	??_EUSART1_Write
  4308  0489  0872               	movf	??_EUSART1_Write,w
  4309  048A  07FB               	addwf	_eusart1TxHead,f
  4310                           
  4311                           ;eusart1.c: 140: if (sizeof (eusart1TxBuffer) <= eusart1TxHead) {
  4312  048B  3040               	movlw	64
  4313  048C  027B               	subwf	_eusart1TxHead,w
  4314  048D  1803               	btfsc	3,0
  4315                           
  4316                           ;eusart1.c: 141: eusart1TxHead = 0;
  4317  048E  01FB               	clrf	_eusart1TxHead
  4318                           
  4319                           ;eusart1.c: 142: }
  4320                           ;eusart1.c: 143: eusart1TxBufferRemaining--;
  4321  048F  3001               	movlw	1
  4322  0490  0020               	movlb	0	; select bank0
  4323  0491  02D8               	subwf	_eusart1TxBufferRemaining,f	;volatile
  4324  0492                     l2162:	
  4325                           
  4326                           ;eusart1.c: 144: }
  4327                           ;eusart1.c: 145: PIE1bits.TX1IE = 1;
  4328  0492  0021               	movlb	1	; select bank1
  4329  0493  1611               	bsf	17,4	;volatile
  4330  0494  0008               	return
  4331  0495                     __end_of_EUSART1_Write:	
  4332                           
  4333                           	psect	text13
  4334  061F                     __ptext13:	
  4335 ;; *************** function _RecIsRight *****************
  4336 ;; Defined at:
  4337 ;;		line 5 in file "StringDeal.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  scr             1    wreg     PTR struct StringCmpResu
  4340 ;;		 -> ATString(6), 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  scr             1    8[COMMON] PTR struct StringCmpResu
  4343 ;;		 -> ATString(6), 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      unsigned char 
  4346 ;; Registers used:
  4347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4357 ;;Total ram usage:        1 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:    3
  4360 ;; This function calls:
  4361 ;;		_CmpString
  4362 ;;		_FindStringHead
  4363 ;; This function is called by:
  4364 ;;		_GPRSDialing
  4365 ;;		_CloseGPRS
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           
  4370                           ;psect for function _RecIsRight
  4371  061F                     _RecIsRight:	
  4372                           
  4373                           ;incstack = 0
  4374                           ; Regs used in _RecIsRight: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4375                           ;RecIsRight@scr stored from wreg
  4376  061F  00F8               	movwf	RecIsRight@scr
  4377                           
  4378                           ;StringDeal.c: 7: scr->cmpPzt = 0;
  4379  0620  0878               	movf	RecIsRight@scr,w
  4380  0621  3E05               	addlw	5
  4381  0622  0086               	movwf	6
  4382  0623  0187               	clrf	7
  4383  0624  0181               	clrf	1
  4384  0625                     l1776:	
  4385                           ;StringDeal.c: 8: while (FindStringHead(scr)) {
  4386                           
  4387  0625  0878               	movf	RecIsRight@scr,w
  4388  0626  3184  2403  3186   	fcall	_FindStringHead
  4389  0629  3A00               	xorlw	0
  4390  062A  1903               	btfsc	3,2
  4391  062B  2E35               	goto	l1778
  4392                           
  4393                           ;StringDeal.c: 9: if (CmpString(scr))
  4394  062C  0878               	movf	RecIsRight@scr,w
  4395  062D  3183  2325  3186   	fcall	_CmpString
  4396  0630  3A00               	xorlw	0
  4397  0631  1903               	skipnz
  4398  0632  2E25               	goto	l1776
  4399                           
  4400                           ;StringDeal.c: 10: return 1;
  4401  0633  3001               	movlw	1
  4402  0634  0008               	return
  4403  0635                     l1778:	
  4404                           
  4405                           ;StringDeal.c: 11: }
  4406                           ;StringDeal.c: 12: return 0;
  4407  0635  3000               	movlw	0
  4408  0636  0008               	return
  4409  0637                     __end_of_RecIsRight:	
  4410                           
  4411                           	psect	text14
  4412  0403                     __ptext14:	
  4413 ;; *************** function _FindStringHead *****************
  4414 ;; Defined at:
  4415 ;;		line 33 in file "StringDeal.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  scr_input       1    wreg     PTR struct StringCmpResu
  4418 ;;		 -> ATString(6), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  scr_input       1    7[COMMON] PTR struct StringCmpResu
  4421 ;;		 -> ATString(6), 
  4422 ;;  postion         1    6[COMMON] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  1    wreg      unsigned char 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4433 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4434 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4435 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4436 ;;Total ram usage:        6 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    2
  4439 ;; This function calls:
  4440 ;;		Nothing
  4441 ;; This function is called by:
  4442 ;;		_RecIsRight
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _FindStringHead
  4448  0403                     _FindStringHead:	
  4449                           
  4450                           ;incstack = 0
  4451                           ; Regs used in _FindStringHead: [wreg-fsr1h+status,2+status,0+pclath]
  4452                           ;FindStringHead@scr_input stored from wreg
  4453  0403  00F7               	movwf	FindStringHead@scr_input
  4454                           
  4455                           ;StringDeal.c: 34: uint8_t postion;
  4456                           ;StringDeal.c: 35: for (postion = scr_input->cmpPzt; postion < scr_input->inputlgt; post
      +                          ion++) {
  4457  0404  0877               	movf	FindStringHead@scr_input,w
  4458  0405  0086               	movwf	6
  4459  0406  0187               	clrf	7
  4460  0407  3F45               	moviw [5]fsr1
  4461  0408  00F6               	movwf	FindStringHead@postion
  4462  0409                     l1672:	
  4463  0409  0A77               	incf	FindStringHead@scr_input,w
  4464  040A  0086               	movwf	6
  4465  040B  0187               	clrf	7
  4466  040C  0801               	movf	1,w
  4467  040D  0276               	subwf	FindStringHead@postion,w
  4468  040E  1803               	btfsc	3,0
  4469  040F  2C3A               	goto	l1674
  4470                           
  4471                           ;StringDeal.c: 36: if (*(scr_input->inputstring + postion) == *scr_input->cmpstring) {
  4472  0410  0877               	movf	FindStringHead@scr_input,w
  4473  0411  3E02               	addlw	2
  4474  0412  0086               	movwf	6
  4475  0413  0187               	clrf	7
  4476  0414  3F40               	moviw [0]fsr1
  4477  0415  00F2               	movwf	??_FindStringHead
  4478  0416  3F41               	moviw [1]fsr1
  4479  0417  00F3               	movwf	??_FindStringHead+1
  4480  0418  0872               	movf	??_FindStringHead,w
  4481  0419  0084               	movwf	4
  4482  041A  0873               	movf	??_FindStringHead+1,w
  4483  041B  0085               	movwf	5
  4484  041C  0800               	movf	0,w	;code access
  4485  041D  00F4               	movwf	??_FindStringHead+2
  4486  041E  0877               	movf	FindStringHead@scr_input,w
  4487  041F  0086               	movwf	6
  4488  0420  0187               	clrf	7
  4489  0421  0876               	movf	FindStringHead@postion,w
  4490  0422  0701               	addwf	1,w
  4491  0423  00F5               	movwf	??_FindStringHead+3
  4492  0424  0875               	movf	??_FindStringHead+3,w
  4493  0425  0086               	movwf	6
  4494  0426  0187               	clrf	7
  4495  0427  0801               	movf	1,w
  4496  0428  0674               	xorwf	??_FindStringHead+2,w
  4497  0429  1D03               	skipz
  4498  042A  2C35               	goto	l1670
  4499                           
  4500                           ;StringDeal.c: 37: scr_input->cmpPzt = postion;
  4501  042B  0876               	movf	FindStringHead@postion,w
  4502  042C  00F2               	movwf	??_FindStringHead
  4503  042D  0877               	movf	FindStringHead@scr_input,w
  4504  042E  3E05               	addlw	5
  4505  042F  0086               	movwf	6
  4506  0430  0187               	clrf	7
  4507  0431  0872               	movf	??_FindStringHead,w
  4508  0432  0081               	movwf	1
  4509                           
  4510                           ;StringDeal.c: 38: return 1;
  4511  0433  3001               	movlw	1
  4512  0434  0008               	return
  4513  0435                     l1670:	
  4514  0435  3001               	movlw	1
  4515  0436  00F2               	movwf	??_FindStringHead
  4516  0437  0872               	movf	??_FindStringHead,w
  4517  0438  07F6               	addwf	FindStringHead@postion,f
  4518  0439  2C09               	goto	l1672
  4519  043A                     l1674:	
  4520                           
  4521                           ;StringDeal.c: 39: }
  4522                           ;StringDeal.c: 40: }
  4523                           ;StringDeal.c: 41: return 0;
  4524  043A  3000               	movlw	0
  4525  043B  0008               	return
  4526  043C                     __end_of_FindStringHead:	
  4527                           
  4528                           	psect	text15
  4529  0325                     __ptext15:	
  4530 ;; *************** function _CmpString *****************
  4531 ;; Defined at:
  4532 ;;		line 44 in file "StringDeal.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  scr_input       1    wreg     PTR struct StringCmpResu
  4535 ;;		 -> ATString(6), 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  scr_input       1    7[COMMON] PTR struct StringCmpResu
  4538 ;;		 -> ATString(6), 
  4539 ;;  cnt             1    6[COMMON] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      unsigned char 
  4542 ;; Registers used:
  4543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4551 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4553 ;;Total ram usage:        6 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    2
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_RecIsRight
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function _CmpString
  4565  0325                     _CmpString:	
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _CmpString: [wreg-fsr1h+status,2+status,0+pclath]
  4569                           ;CmpString@scr_input stored from wreg
  4570  0325  00F7               	movwf	CmpString@scr_input
  4571                           
  4572                           ;StringDeal.c: 45: uint8_t cnt;
  4573                           ;StringDeal.c: 46: for (cnt = 0; cnt < scr_input->cmplgt; cnt++) {
  4574  0326  01F6               	clrf	CmpString@cnt
  4575  0327                     l1652:	
  4576  0327  0877               	movf	CmpString@scr_input,w
  4577  0328  3E04               	addlw	4
  4578  0329  0086               	movwf	6
  4579  032A  0187               	clrf	7
  4580  032B  0801               	movf	1,w
  4581  032C  0276               	subwf	CmpString@cnt,w
  4582  032D  1803               	btfsc	3,0
  4583  032E  2B69               	goto	l1654
  4584                           
  4585                           ;StringDeal.c: 47: if (*(scr_input->cmpstring + cnt) != *(scr_input->inputstring + cnt +
      +                           scr_input->cmpPzt))
  4586  032F  0877               	movf	CmpString@scr_input,w
  4587  0330  0086               	movwf	6
  4588  0331  0187               	clrf	7
  4589  0332  0877               	movf	CmpString@scr_input,w
  4590  0333  3E05               	addlw	5
  4591  0334  0084               	movwf	4
  4592  0335  0185               	clrf	5
  4593  0336  0800               	movf	0,w
  4594  0337  0701               	addwf	1,w
  4595  0338  00F2               	movwf	??_CmpString
  4596  0339  0876               	movf	CmpString@cnt,w
  4597  033A  0772               	addwf	??_CmpString,w
  4598  033B  00F3               	movwf	??_CmpString+1
  4599  033C  0873               	movf	??_CmpString+1,w
  4600  033D  0086               	movwf	6
  4601  033E  0187               	clrf	7
  4602  033F  0877               	movf	CmpString@scr_input,w
  4603  0340  3E02               	addlw	2
  4604  0341  0084               	movwf	4
  4605  0342  0185               	clrf	5
  4606  0343  3F00               	moviw [0]fsr0
  4607  0344  00F4               	movwf	??_CmpString+2
  4608  0345  3F01               	moviw [1]fsr0
  4609  0346  00F5               	movwf	??_CmpString+3
  4610  0347  0876               	movf	CmpString@cnt,w
  4611  0348  0774               	addwf	??_CmpString+2,w
  4612  0349  0084               	movwf	4
  4613  034A  0875               	movf	??_CmpString+3,w
  4614  034B  1803               	skipnc
  4615  034C  0A75               	incf	??_CmpString+3,w
  4616  034D  0085               	movwf	5
  4617  034E  0800               	movf	0,w	;code access
  4618  034F  0601               	xorwf	1,w
  4619  0350  1D03               	btfss	3,2
  4620  0351  2B69               	goto	l1654
  4621                           
  4622                           ;StringDeal.c: 49: else if (cnt == scr_input->cmplgt - 1)
  4623                           
  4624                           ;StringDeal.c: 48: break;
  4625  0352  0877               	movf	CmpString@scr_input,w
  4626  0353  3E04               	addlw	4
  4627  0354  0086               	movwf	6
  4628  0355  0187               	clrf	7
  4629  0356  0801               	movf	1,w
  4630  0357  3EFF               	addlw	255
  4631  0358  00F2               	movwf	??_CmpString
  4632  0359  30FF               	movlw	255
  4633  035A  1803               	skipnc
  4634  035B  3000               	movlw	0
  4635  035C  00F3               	movwf	??_CmpString+1
  4636  035D  0876               	movf	CmpString@cnt,w
  4637  035E  0672               	xorwf	??_CmpString,w
  4638  035F  0473               	iorwf	??_CmpString+1,w
  4639  0360  1D03               	skipz
  4640  0361  2B64               	goto	l1650
  4641                           
  4642                           ;StringDeal.c: 50: return 1;
  4643  0362  3001               	movlw	1
  4644  0363  0008               	return
  4645  0364                     l1650:	
  4646  0364  3001               	movlw	1
  4647  0365  00F2               	movwf	??_CmpString
  4648  0366  0872               	movf	??_CmpString,w
  4649  0367  07F6               	addwf	CmpString@cnt,f
  4650  0368  2B27               	goto	l1652
  4651  0369                     l1654:	
  4652                           
  4653                           ;StringDeal.c: 51: }
  4654                           ;StringDeal.c: 52: scr_input->cmpPzt += 1;
  4655  0369  3001               	movlw	1
  4656  036A  00F2               	movwf	??_CmpString
  4657  036B  0877               	movf	CmpString@scr_input,w
  4658  036C  3E05               	addlw	5
  4659  036D  0086               	movwf	6
  4660  036E  0187               	clrf	7
  4661  036F  0872               	movf	??_CmpString,w
  4662  0370  0781               	addwf	1,f
  4663                           
  4664                           ;StringDeal.c: 53: return 0;
  4665  0371  3000               	movlw	0
  4666  0372  0008               	return
  4667  0373                     __end_of_CmpString:	
  4668                           
  4669                           	psect	text16
  4670  0495                     __ptext16:	
  4671 ;; *************** function _GetBuffer *****************
  4672 ;; Defined at:
  4673 ;;		line 15 in file "StringDeal.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  str1            1    wreg     PTR unsigned char 
  4676 ;;		 -> CloseGPRS@str1(30), GPRSDialing@str1(80), 
  4677 ;;  bytes           1    4[COMMON] unsigned char 
  4678 ;;  uart_rec        2    5[COMMON] PTR FTN()unsigned char 
  4679 ;;		 -> EUSART1_Read(1), 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  str1            1    1[BANK0 ] PTR unsigned char 
  4682 ;;		 -> CloseGPRS@str1(30), GPRSDialing@str1(80), 
  4683 ;;  cnt             1    0[BANK0 ] unsigned char 
  4684 ;; Return value:  Size  Location     Type
  4685 ;;                  1    wreg      void 
  4686 ;; Registers used:
  4687 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4688 ;; Tracked objects:
  4689 ;;		On entry : 0/0
  4690 ;;		On exit  : 0/0
  4691 ;;		Unchanged: 0/0
  4692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4693 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4694 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4696 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4697 ;;Total ram usage:        7 bytes
  4698 ;; Hardware stack levels used:    1
  4699 ;; Hardware stack levels required when called:    3
  4700 ;; This function calls:
  4701 ;;		_EUSART1_Read
  4702 ;; This function is called by:
  4703 ;;		_GPRSDialing
  4704 ;;		_CloseGPRS
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _GetBuffer
  4710  0495                     _GetBuffer:	
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _GetBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4714                           ;GetBuffer@str1 stored from wreg
  4715  0495  0020               	movlb	0	; select bank0
  4716  0496  00A1               	movwf	GetBuffer@str1
  4717                           
  4718                           ;StringDeal.c: 16: uint8_t cnt;
  4719                           ;StringDeal.c: 17: for (cnt = 0; cnt < bytes; cnt++) {
  4720  0497  01A0               	clrf	GetBuffer@cnt
  4721  0498                     l2174:	
  4722  0498  0874               	movf	GetBuffer@bytes,w
  4723  0499  0220               	subwf	GetBuffer@cnt,w
  4724  049A  1803               	btfsc	3,0
  4725  049B  0008               	return
  4726                           
  4727                           ;StringDeal.c: 18: *(str1 + cnt) = uart_rec();
  4728  049C  0876               	movf	GetBuffer@uart_rec+1,w
  4729  049D  008A               	movwf	10
  4730  049E  0875               	movf	GetBuffer@uart_rec,w
  4731  049F  000A               	callw
  4732  04A0  3184               	pagesel	$
  4733  04A1  00F7               	movwf	??_GetBuffer
  4734  04A2  0020               	movlb	0	; select bank0
  4735  04A3  0820               	movf	GetBuffer@cnt,w
  4736  04A4  0721               	addwf	GetBuffer@str1,w
  4737  04A5  00F8               	movwf	??_GetBuffer+1
  4738  04A6  0878               	movf	??_GetBuffer+1,w
  4739  04A7  0086               	movwf	6
  4740  04A8  0187               	clrf	7
  4741  04A9  0877               	movf	??_GetBuffer,w
  4742  04AA  0081               	movwf	1
  4743                           
  4744                           ;StringDeal.c: 19: if (!(*(str1 + cnt)))
  4745  04AB  0820               	movf	GetBuffer@cnt,w
  4746  04AC  0721               	addwf	GetBuffer@str1,w
  4747  04AD  00F7               	movwf	??_GetBuffer
  4748  04AE  0877               	movf	??_GetBuffer,w
  4749  04AF  0086               	movwf	6
  4750  04B0  0187               	clrf	7
  4751  04B1  0801               	movf	1,w
  4752  04B2  1903               	btfsc	3,2
  4753  04B3  0008               	return
  4754                           
  4755                           ;StringDeal.c: 20: break;
  4756  04B4  3001               	movlw	1
  4757  04B5  00F7               	movwf	??_GetBuffer
  4758  04B6  0877               	movf	??_GetBuffer,w
  4759  04B7  07A0               	addwf	GetBuffer@cnt,f
  4760  04B8  2C98               	goto	l2174
  4761  04B9                     __end_of_GetBuffer:	
  4762                           
  4763                           	psect	text17
  4764  04FD                     __ptext17:	
  4765 ;; *************** function _EUSART1_Read *****************
  4766 ;; Defined at:
  4767 ;;		line 112 in file "mcc_generated_files/eusart1.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  readValue       1    3[COMMON] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      unsigned char 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        2 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    2
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_GPRSDialing
  4792 ;;		_CloseGPRS
  4793 ;;		_GetBuffer
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           
  4798                           ;psect for function _EUSART1_Read
  4799  04FD                     _EUSART1_Read:	
  4800                           
  4801                           ;eusart1.c: 113: uint8_t readValue = 0;
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _EUSART1_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
  4805  04FD  01F3               	clrf	EUSART1_Read@readValue
  4806                           
  4807                           ;eusart1.c: 115: while (0 == eusart1RxCount) {
  4808  04FE  0020               	movlb	0	; select bank0
  4809  04FF  084D               	movf	_eusart1RxCount,w	;volatile
  4810  0500  1D03               	btfss	3,2
  4811  0501  2D04               	goto	l158
  4812                           
  4813                           ;eusart1.c: 116: return 0;
  4814  0502  3000               	movlw	0
  4815  0503  0008               	return
  4816  0504                     l158:	
  4817                           
  4818                           ;eusart1.c: 117: }
  4819                           ;eusart1.c: 119: PIE1bits.RC1IE = 0;
  4820  0504  0021               	movlb	1	; select bank1
  4821  0505  1291               	bcf	17,5	;volatile
  4822                           
  4823                           ;eusart1.c: 121: readValue = eusart1RxBuffer[eusart1RxTail++];
  4824  0506  0020               	movlb	0	; select bank0
  4825  0507  084E               	movf	_eusart1RxTail,w
  4826  0508  3EA0               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
  4827  0509  0086               	movwf	6
  4828  050A  3001               	movlw	1	; select bank3/4
  4829  050B  0087               	movwf	7
  4830  050C  0801               	movf	1,w
  4831  050D  00F2               	movwf	??_EUSART1_Read
  4832  050E  0872               	movf	??_EUSART1_Read,w
  4833  050F  00F3               	movwf	EUSART1_Read@readValue
  4834  0510  3001               	movlw	1
  4835  0511  00F2               	movwf	??_EUSART1_Read
  4836  0512  0872               	movf	??_EUSART1_Read,w
  4837  0513  07CE               	addwf	_eusart1RxTail,f
  4838                           
  4839                           ;eusart1.c: 122: if (sizeof (eusart1RxBuffer) <= eusart1RxTail) {
  4840  0514  3040               	movlw	64
  4841  0515  024E               	subwf	_eusart1RxTail,w
  4842  0516  1803               	btfsc	3,0
  4843                           
  4844                           ;eusart1.c: 123: eusart1RxTail = 0;
  4845  0517  01CE               	clrf	_eusart1RxTail
  4846                           
  4847                           ;eusart1.c: 124: }
  4848                           ;eusart1.c: 125: eusart1RxCount--;
  4849  0518  3001               	movlw	1
  4850  0519  02CD               	subwf	_eusart1RxCount,f	;volatile
  4851                           
  4852                           ;eusart1.c: 126: PIE1bits.RC1IE = 1;
  4853  051A  0021               	movlb	1	; select bank1
  4854  051B  1691               	bsf	17,5	;volatile
  4855                           
  4856                           ;eusart1.c: 128: return readValue;
  4857  051C  0873               	movf	EUSART1_Read@readValue,w
  4858  051D  0008               	return
  4859  051E                     __end_of_EUSART1_Read:	
  4860                           
  4861                           	psect	text18
  4862  04B9                     __ptext18:	
  4863 ;; *************** function _Delay1s *****************
  4864 ;; Defined at:
  4865 ;;		line 135 in file "Common.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  time            1    wreg     unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  time            1    2[COMMON] unsigned char 
  4870 ;;  i               4    3[COMMON] unsigned long 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4881 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4884 ;;Total ram usage:        5 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;;		_GPRSDialing
  4892 ;;		_CloseGPRS
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _Delay1s
  4898  04B9                     _Delay1s:	
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _Delay1s: [wreg+status,2+status,0]
  4902                           ;Delay1s@time stored from wreg
  4903  04B9  00F2               	movwf	Delay1s@time
  4904  04BA                     l1766:	
  4905                           ;Common.c: 136: uint32_t i;
  4906                           ;Common.c: 137: while (time-- > 0)
  4907                           
  4908  04BA  3001               	movlw	1
  4909  04BB  02F2               	subwf	Delay1s@time,f
  4910  04BC  0A72               	incf	Delay1s@time,w
  4911  04BD  1903               	btfsc	3,2
  4912  04BE  0008               	return
  4913                           
  4914                           ;Common.c: 138: for (i = 0; i < 170000; i++)
  4915  04BF  3000               	movlw	0
  4916  04C0  00F6               	movwf	Delay1s@i+3
  4917  04C1  3000               	movlw	0
  4918  04C2  00F5               	movwf	Delay1s@i+2
  4919  04C3  3000               	movlw	0
  4920  04C4  00F4               	movwf	Delay1s@i+1
  4921  04C5  3000               	movlw	0
  4922  04C6  00F3               	movwf	Delay1s@i
  4923  04C7                     L16:	
  4924  04C7  0876               	movf	Delay1s@i+3,w
  4925  04C8  1D03               	btfss	3,2
  4926  04C9  2CBA               	goto	l1766
  4927  04CA  3010               	movlw	16
  4928  04CB  0273               	subwf	Delay1s@i,w
  4929  04CC  3098               	movlw	152
  4930  04CD  3B74               	subwfb	Delay1s@i+1,w
  4931  04CE  3002               	movlw	2
  4932  04CF  3B75               	subwfb	Delay1s@i+2,w
  4933  04D0  1803               	btfsc	3,0
  4934  04D1  2CBA               	goto	l1766
  4935  04D2  0000               	nop	;# 
  4936  04D3  3001               	movlw	1
  4937  04D4  07F3               	addwf	Delay1s@i,f
  4938  04D5  3000               	movlw	0
  4939  04D6  3DF4               	addwfc	Delay1s@i+1,f
  4940  04D7  3000               	movlw	0
  4941  04D8  3DF5               	addwfc	Delay1s@i+2,f
  4942  04D9  3000               	movlw	0
  4943  04DA  3DF6               	addwfc	Delay1s@i+3,f
  4944  04DB  2CC7               	goto	L16
  4945  04DC                     __end_of_Delay1s:	
  4946                           
  4947                           	psect	intentry
  4948  0004                     __pintentry:	
  4949 ;; *************** function _INTERRUPT_InterruptManager *****************
  4950 ;; Defined at:
  4951 ;;		line 56 in file "mcc_generated_files/interrupt_manager.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;		None
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		_EUSART1_Receive_ISR
  4974 ;;		_EUSART1_Transmit_ISR
  4975 ;;		_EUSART2_Receive_ISR
  4976 ;;		_EUSART2_Transmit_ISR
  4977 ;; This function is called by:
  4978 ;;		Interrupt level 1
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982  0004                     _INTERRUPT_InterruptManager:	
  4983                           
  4984                           ;incstack = 0
  4985  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4986                           
  4987                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4988  0005  3180               	pagesel	$
  4989  0006  0020               	movlb	0	; select bank0
  4990  0007  087F               	movf	127,w
  4991  0008  00F1               	movwf	??_INTERRUPT_InterruptManager
  4992                           
  4993                           ;interrupt_manager.c: 58: if (PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1) {
  4994  0009  0021               	movlb	1	; select bank1
  4995  000A  1E91               	btfss	17,5	;volatile
  4996  000B  2813               	goto	i1l106
  4997  000C  0020               	movlb	0	; select bank0
  4998  000D  1E91               	btfss	17,5	;volatile
  4999  000E  2813               	goto	i1l106
  5000                           
  5001                           ;interrupt_manager.c: 59: EUSART1_Receive_ISR();
  5002  000F  3185  25CE  3180   	fcall	_EUSART1_Receive_ISR
  5003                           
  5004                           ;interrupt_manager.c: 60: } else if (PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1) {
  5005  0012  2840               	goto	i1l115
  5006  0013                     i1l106:	
  5007  0013  0021               	movlb	1	; select bank1
  5008  0014  1E11               	btfss	17,4	;volatile
  5009  0015  281D               	goto	i1l108
  5010  0016  0020               	movlb	0	; select bank0
  5011  0017  1E11               	btfss	17,4	;volatile
  5012  0018  281D               	goto	i1l108
  5013                           
  5014                           ;interrupt_manager.c: 61: EUSART1_Transmit_ISR();
  5015  0019  3185  2578  3180   	fcall	_EUSART1_Transmit_ISR
  5016                           
  5017                           ;interrupt_manager.c: 62: } else if (PIE4bits.RC2IE == 1 && PIR4bits.RC2IF == 1) {
  5018  001C  2840               	goto	i1l115
  5019  001D                     i1l108:	
  5020  001D  0021               	movlb	1	; select bank1
  5021  001E  1E94               	btfss	20,5	;volatile
  5022  001F  2827               	goto	i1l110
  5023  0020  0020               	movlb	0	; select bank0
  5024  0021  1E94               	btfss	20,5	;volatile
  5025  0022  2827               	goto	i1l110
  5026                           
  5027                           ;interrupt_manager.c: 63: EUSART2_Receive_ISR();
  5028  0023  3185  25B2  3180   	fcall	_EUSART2_Receive_ISR
  5029                           
  5030                           ;interrupt_manager.c: 64: } else if (PIE4bits.TX2IE == 1 && PIR4bits.TX2IF == 1) {
  5031  0026  2840               	goto	i1l115
  5032  0027                     i1l110:	
  5033  0027  0021               	movlb	1	; select bank1
  5034  0028  1E14               	btfss	20,4	;volatile
  5035  0029  2831               	goto	i1l112
  5036  002A  0020               	movlb	0	; select bank0
  5037  002B  1E14               	btfss	20,4	;volatile
  5038  002C  2831               	goto	i1l112
  5039                           
  5040                           ;interrupt_manager.c: 65: EUSART2_Transmit_ISR();
  5041  002D  3185  255A  3180   	fcall	_EUSART2_Transmit_ISR
  5042                           
  5043                           ;interrupt_manager.c: 72: } else if (INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1) {
  5044  0030  2840               	goto	i1l115
  5045  0031                     i1l112:	
  5046  0031  198B               	btfsc	11,3	;volatile
  5047  0032  1C0B               	btfss	11,0	;volatile
  5048  0033  2840               	goto	i1l115
  5049                           
  5050                           ;interrupt_manager.c: 73: LATBbits.LATB0 = PORTBbits.RB0 ? 1 : 0;
  5051  0034  0020               	movlb	0	; select bank0
  5052  0035  1C0D               	btfss	13,0	;volatile
  5053  0036  283A               	goto	u123_20
  5054  0037  0022               	movlb	2	; select bank2
  5055  0038  140D               	bsf	13,0	;volatile
  5056  0039  283C               	goto	u124_24
  5057  003A                     u123_20:	
  5058  003A  0022               	movlb	2	; select bank2
  5059  003B  100D               	bcf	13,0	;volatile
  5060  003C                     u124_24:	
  5061                           
  5062                           ;interrupt_manager.c: 74: IOCBFbits.IOCBF0 = 0;
  5063  003C  0027               	movlb	7	; select bank7
  5064  003D  1016               	bcf	22,0	;volatile
  5065                           
  5066                           ;interrupt_manager.c: 76: PORTBbits.RB0 = 1;
  5067  003E  0020               	movlb	0	; select bank0
  5068  003F  140D               	bsf	13,0	;volatile
  5069  0040                     i1l115:	
  5070  0040  0871               	movf	??_INTERRUPT_InterruptManager,w
  5071  0041  0020               	movlb	0	; select bank0
  5072  0042  00FF               	movwf	127
  5073  0043  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5074  0044  0009               	retfie
  5075  0045                     __end_of_INTERRUPT_InterruptManager:	
  5076                           
  5077                           	psect	text20
  5078  055A                     __ptext20:	
  5079 ;; *************** function _EUSART2_Transmit_ISR *****************
  5080 ;; Defined at:
  5081 ;;		line 148 in file "mcc_generated_files/eusart2.c"
  5082 ;; Parameters:    Size  Location     Type
  5083 ;;		None
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5099 ;;Total ram usage:        1 bytes
  5100 ;; Hardware stack levels used:    1
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_INTERRUPT_InterruptManager
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           
  5109                           ;psect for function _EUSART2_Transmit_ISR
  5110  055A                     _EUSART2_Transmit_ISR:	
  5111                           
  5112                           ;eusart2.c: 151: if (sizeof (eusart2TxBuffer) > eusart2TxBufferRemaining) {
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in _EUSART2_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5116  055A  3040               	movlw	64
  5117  055B  0020               	movlb	0	; select bank0
  5118  055C  0257               	subwf	_eusart2TxBufferRemaining,w	;volatile
  5119  055D  1803               	skipnc
  5120  055E  2D75               	goto	i1l235
  5121                           
  5122                           ;eusart2.c: 152: TX2REG = eusart2TxBuffer[eusart2TxTail++];
  5123  055F  084B               	movf	_eusart2TxTail,w
  5124  0560  3E20               	addlw	(low (_eusart2TxBuffer| (0+512)))& (0+255)
  5125  0561  0086               	movwf	6
  5126  0562  3002               	movlw	2	; select bank4/5
  5127  0563  0087               	movwf	7
  5128  0564  0801               	movf	1,w
  5129  0565  0029               	movlb	9	; select bank9
  5130  0566  0092               	movwf	18	;volatile
  5131  0567  3001               	movlw	1
  5132  0568  00F0               	movwf	??_EUSART2_Transmit_ISR
  5133  0569  0870               	movf	??_EUSART2_Transmit_ISR,w
  5134  056A  0020               	movlb	0	; select bank0
  5135  056B  07CB               	addwf	_eusart2TxTail,f
  5136                           
  5137                           ;eusart2.c: 153: if (sizeof (eusart2TxBuffer) <= eusart2TxTail) {
  5138  056C  3040               	movlw	64
  5139  056D  024B               	subwf	_eusart2TxTail,w
  5140  056E  1803               	btfsc	3,0
  5141                           
  5142                           ;eusart2.c: 154: eusart2TxTail = 0;
  5143  056F  01CB               	clrf	_eusart2TxTail
  5144                           
  5145                           ;eusart2.c: 155: }
  5146                           ;eusart2.c: 156: eusart2TxBufferRemaining++;
  5147  0570  3001               	movlw	1
  5148  0571  00F0               	movwf	??_EUSART2_Transmit_ISR
  5149  0572  0870               	movf	??_EUSART2_Transmit_ISR,w
  5150  0573  07D7               	addwf	_eusart2TxBufferRemaining,f	;volatile
  5151                           
  5152                           ;eusart2.c: 157: } else {
  5153  0574  0008               	return
  5154  0575                     i1l235:	
  5155                           
  5156                           ;eusart2.c: 158: PIE4bits.TX2IE = 0;
  5157  0575  0021               	movlb	1	; select bank1
  5158  0576  1214               	bcf	20,4	;volatile
  5159  0577  0008               	return
  5160  0578                     __end_of_EUSART2_Transmit_ISR:	
  5161                           
  5162                           	psect	text21
  5163  05B2                     __ptext21:	
  5164 ;; *************** function _EUSART2_Receive_ISR *****************
  5165 ;; Defined at:
  5166 ;;		line 162 in file "mcc_generated_files/eusart2.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5184 ;;Total ram usage:        1 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_INTERRUPT_InterruptManager
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           
  5194                           ;psect for function _EUSART2_Receive_ISR
  5195  05B2                     _EUSART2_Receive_ISR:	
  5196                           
  5197                           ;eusart2.c: 163: if (1 == RC2STAbits.OERR) {
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _EUSART2_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5201  05B2  0029               	movlb	9	; select bank9
  5202  05B3  1C95               	btfss	21,1	;volatile
  5203  05B4  2DB7               	goto	i1l1848
  5204                           
  5205                           ;eusart2.c: 166: RC2STAbits.CREN = 0;
  5206  05B5  1215               	bcf	21,4	;volatile
  5207                           
  5208                           ;eusart2.c: 167: RC2STAbits.CREN = 1;
  5209  05B6  1615               	bsf	21,4	;volatile
  5210  05B7                     i1l1848:	
  5211                           
  5212                           ;eusart2.c: 168: }
  5213                           ;eusart2.c: 171: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
  5214  05B7  0811               	movf	17,w	;volatile
  5215  05B8  00F0               	movwf	??_EUSART2_Receive_ISR
  5216  05B9  0020               	movlb	0	; select bank0
  5217  05BA  084A               	movf	_eusart2RxHead,w
  5218  05BB  3EA0               	addlw	(low (_eusart2RxBuffer| (0+512)))& (0+255)
  5219  05BC  0086               	movwf	6
  5220  05BD  3002               	movlw	2	; select bank5/6
  5221  05BE  0087               	movwf	7
  5222  05BF  0870               	movf	??_EUSART2_Receive_ISR,w
  5223  05C0  0081               	movwf	1
  5224  05C1  3001               	movlw	1
  5225  05C2  00F0               	movwf	??_EUSART2_Receive_ISR
  5226  05C3  0870               	movf	??_EUSART2_Receive_ISR,w
  5227  05C4  07CA               	addwf	_eusart2RxHead,f
  5228                           
  5229                           ;eusart2.c: 172: if (sizeof (eusart2RxBuffer) <= eusart2RxHead) {
  5230  05C5  3040               	movlw	64
  5231  05C6  024A               	subwf	_eusart2RxHead,w
  5232  05C7  1803               	btfsc	3,0
  5233                           
  5234                           ;eusart2.c: 173: eusart2RxHead = 0;
  5235  05C8  01CA               	clrf	_eusart2RxHead
  5236                           
  5237                           ;eusart2.c: 174: }
  5238                           ;eusart2.c: 175: eusart2RxCount++;
  5239  05C9  3001               	movlw	1
  5240  05CA  00F0               	movwf	??_EUSART2_Receive_ISR
  5241  05CB  0870               	movf	??_EUSART2_Receive_ISR,w
  5242  05CC  07C8               	addwf	_eusart2RxCount,f	;volatile
  5243  05CD  0008               	return
  5244  05CE                     __end_of_EUSART2_Receive_ISR:	
  5245                           
  5246                           	psect	text22
  5247  0578                     __ptext22:	
  5248 ;; *************** function _EUSART1_Transmit_ISR *****************
  5249 ;; Defined at:
  5250 ;;		line 148 in file "mcc_generated_files/eusart1.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;		None
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      void 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5267 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5268 ;;Total ram usage:        1 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; This function calls:
  5271 ;;		Nothing
  5272 ;; This function is called by:
  5273 ;;		_INTERRUPT_InterruptManager
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           
  5278                           ;psect for function _EUSART1_Transmit_ISR
  5279  0578                     _EUSART1_Transmit_ISR:	
  5280                           
  5281                           ;eusart1.c: 151: if (sizeof (eusart1TxBuffer) > eusart1TxBufferRemaining) {
  5282                           
  5283                           ;incstack = 0
  5284                           ; Regs used in _EUSART1_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5285  0578  3040               	movlw	64
  5286  0579  0020               	movlb	0	; select bank0
  5287  057A  0258               	subwf	_eusart1TxBufferRemaining,w	;volatile
  5288  057B  1803               	skipnc
  5289  057C  2D93               	goto	i1l171
  5290                           
  5291                           ;eusart1.c: 152: TX1REG = eusart1TxBuffer[eusart1TxTail++];
  5292  057D  0850               	movf	_eusart1TxTail,w
  5293  057E  3E20               	addlw	(low (_eusart1TxBuffer| (0+256)))& (0+255)
  5294  057F  0086               	movwf	6
  5295  0580  3001               	movlw	1	; select bank2/3
  5296  0581  0087               	movwf	7
  5297  0582  0801               	movf	1,w
  5298  0583  0023               	movlb	3	; select bank3
  5299  0584  009A               	movwf	26	;volatile
  5300  0585  3001               	movlw	1
  5301  0586  00F0               	movwf	??_EUSART1_Transmit_ISR
  5302  0587  0870               	movf	??_EUSART1_Transmit_ISR,w
  5303  0588  0020               	movlb	0	; select bank0
  5304  0589  07D0               	addwf	_eusart1TxTail,f
  5305                           
  5306                           ;eusart1.c: 153: if (sizeof (eusart1TxBuffer) <= eusart1TxTail) {
  5307  058A  3040               	movlw	64
  5308  058B  0250               	subwf	_eusart1TxTail,w
  5309  058C  1803               	btfsc	3,0
  5310                           
  5311                           ;eusart1.c: 154: eusart1TxTail = 0;
  5312  058D  01D0               	clrf	_eusart1TxTail
  5313                           
  5314                           ;eusart1.c: 155: }
  5315                           ;eusart1.c: 156: eusart1TxBufferRemaining++;
  5316  058E  3001               	movlw	1
  5317  058F  00F0               	movwf	??_EUSART1_Transmit_ISR
  5318  0590  0870               	movf	??_EUSART1_Transmit_ISR,w
  5319  0591  07D8               	addwf	_eusart1TxBufferRemaining,f	;volatile
  5320                           
  5321                           ;eusart1.c: 157: } else {
  5322  0592  0008               	return
  5323  0593                     i1l171:	
  5324                           
  5325                           ;eusart1.c: 158: PIE1bits.TX1IE = 0;
  5326  0593  0021               	movlb	1	; select bank1
  5327  0594  1211               	bcf	17,4	;volatile
  5328  0595  0008               	return
  5329  0596                     __end_of_EUSART1_Transmit_ISR:	
  5330                           
  5331                           	psect	text23
  5332  05CE                     __ptext23:	
  5333 ;; *************** function _EUSART1_Receive_ISR *****************
  5334 ;; Defined at:
  5335 ;;		line 162 in file "mcc_generated_files/eusart1.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;		None
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;		None
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0
  5353 ;;Total ram usage:        1 bytes
  5354 ;; Hardware stack levels used:    1
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_INTERRUPT_InterruptManager
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _EUSART1_Receive_ISR
  5364  05CE                     _EUSART1_Receive_ISR:	
  5365                           
  5366                           ;eusart1.c: 163: if (1 == RC1STAbits.OERR) {
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _EUSART1_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5370  05CE  0023               	movlb	3	; select bank3
  5371  05CF  1C9D               	btfss	29,1	;volatile
  5372  05D0  2DD3               	goto	i1l1822
  5373                           
  5374                           ;eusart1.c: 166: RC1STAbits.CREN = 0;
  5375  05D1  121D               	bcf	29,4	;volatile
  5376                           
  5377                           ;eusart1.c: 167: RC1STAbits.CREN = 1;
  5378  05D2  161D               	bsf	29,4	;volatile
  5379  05D3                     i1l1822:	
  5380                           
  5381                           ;eusart1.c: 168: }
  5382                           ;eusart1.c: 171: eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  5383  05D3  0819               	movf	25,w	;volatile
  5384  05D4  00F0               	movwf	??_EUSART1_Receive_ISR
  5385  05D5  0020               	movlb	0	; select bank0
  5386  05D6  084F               	movf	_eusart1RxHead,w
  5387  05D7  3EA0               	addlw	(low (_eusart1RxBuffer| (0+256)))& (0+255)
  5388  05D8  0086               	movwf	6
  5389  05D9  3001               	movlw	1	; select bank3/4
  5390  05DA  0087               	movwf	7
  5391  05DB  0870               	movf	??_EUSART1_Receive_ISR,w
  5392  05DC  0081               	movwf	1
  5393  05DD  3001               	movlw	1
  5394  05DE  00F0               	movwf	??_EUSART1_Receive_ISR
  5395  05DF  0870               	movf	??_EUSART1_Receive_ISR,w
  5396  05E0  07CF               	addwf	_eusart1RxHead,f
  5397                           
  5398                           ;eusart1.c: 172: if (sizeof (eusart1RxBuffer) <= eusart1RxHead) {
  5399  05E1  3040               	movlw	64
  5400  05E2  024F               	subwf	_eusart1RxHead,w
  5401  05E3  1803               	btfsc	3,0
  5402                           
  5403                           ;eusart1.c: 173: eusart1RxHead = 0;
  5404  05E4  01CF               	clrf	_eusart1RxHead
  5405                           
  5406                           ;eusart1.c: 174: }
  5407                           ;eusart1.c: 175: eusart1RxCount++;
  5408  05E5  3001               	movlw	1
  5409  05E6  00F0               	movwf	??_EUSART1_Receive_ISR
  5410  05E7  0870               	movf	??_EUSART1_Receive_ISR,w
  5411  05E8  07CD               	addwf	_eusart1RxCount,f	;volatile
  5412  05E9  0008               	return
  5413  05EA                     __end_of_EUSART1_Receive_ISR:	
  5414  007E                     btemp	set	126	;btemp
  5415  007E                     int$flags	set	126
  5416  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    165
    Data        0
    BSS         275
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     38      57
    BANK1            80     80      80
    BANK2            80     10      74
    BANK3            80      0      64
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 38
		 -> KTCPSTART(CODE[17]), KTCPCFG(CODE[38]), KCNXCFG(CODE[30]), CGREG(CODE[12]), 
		 -> CREG(CODE[11]), CIMI(CODE[10]), CPIN(CODE[11]), K3(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 38
		 -> KTCPSTART(CODE[17]), KTCPCFG(CODE[38]), KCNXCFG(CODE[30]), CGREG(CODE[12]), 
		 -> CREG(CODE[11]), CIMI(CODE[10]), CPIN(CODE[11]), K3(CODE[8]), 

    CloseGPRS@scr.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    CloseGPRS@scr.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    CloseGPRS@scr	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    GPRSDialing@scr.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    GPRSDialing@scr.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    GPRSDialing@scr	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    SendDat2GPRS@ATcmd	PTR const unsigned char  size(2) Largest target is 38
		 -> KTCPSTART(CODE[17]), KTCPCFG(CODE[38]), KCNXCFG(CODE[30]), CGREG(CODE[12]), 
		 -> CREG(CODE[11]), CIMI(CODE[10]), CPIN(CODE[11]), K3(CODE[8]), 

    CmpString@scr_input.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    CmpString@scr_input.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    CmpString@scr_input	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    FindStringHead@scr_input.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    FindStringHead@scr_input.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    FindStringHead@scr_input	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    StringCmpInit@scr_input.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    StringCmpInit@scr_input.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    StringCmpInit@scr_input	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    GetBuffer@uart_rec	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART1_Read(), 

    GetBuffer@str1	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    RecIsRight@scr.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    RecIsRight@scr.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    RecIsRight@scr	PTR struct StringCmpResult size(1) Largest target is 7
		 -> ATString(BANK0[6]), 

    S662StringCmpResult$cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    ATString.cmpstring	PTR unsigned char  size(2) Largest target is 13
		 -> REC_CGREG(CODE[13]), REC_CREG(CODE[12]), REC_OK(CODE[3]), NULL(NULL[0]), 

    S662StringCmpResult$inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 

    ATString.inputstring	PTR unsigned char  size(1) Largest target is 80
		 -> CloseGPRS@str1(BANK0[30]), GPRSDialing@str1(BANK1[80]), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART1_Initialize
    _SYSTEM_Initialize->_EUSART2_Initialize
    _GPRSDialing->_SendDat2GPRS
    _CloseGPRS->_SendDat2GPRS
    _SendDat2GPRS->_strlen
    _RecIsRight->_CmpString
    _RecIsRight->_FindStringHead
    _GetBuffer->_EUSART1_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART1_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART1_Transmit_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Receive_ISR
    _INTERRUPT_InterruptManager->_EUSART2_Transmit_ISR

Critical Paths under _main in BANK0

    _main->_CloseGPRS
    _GPRSDialing->_SendDat2GPRS
    _CloseGPRS->_SendDat2GPRS

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_GPRSDialing

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_GPRSDialing

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12013
                                             36 BANK0      2     2      0
                          _CloseGPRS
                            _Delay1s
                       _EUSART2_Read
                        _GPRSDialing
                  _SYSTEM_Initialize
                      _StringCmpInit
 ---------------------------------------------------------------------------------
 (1) _StringCmpInit                                        1     1      0     140
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPRSDialing                                         97    96      1    6362
                                              4 BANK0      7     6      1
                                              0 BANK1     80    80      0
                                              0 BANK2     10    10      0
                            _Delay1s
                          _GetBuffer
                         _RecIsRight
                       _SendDat2GPRS
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         2     2      0      24
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _CloseGPRS                                           32    32      0    5351
                                              4 BANK0     32    32      0
                            _Delay1s
                          _GetBuffer
                         _RecIsRight
                       _SendDat2GPRS
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     666
                                              2 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _SendDat2GPRS                                         6     3      3    1643
                                              8 COMMON     2     2      0
                                              0 BANK0      4     1      3
                      _EUSART1_Write
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        2     2      0      62
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _RecIsRight                                           1     1      0     766
                                              8 COMMON     1     1      0
                          _CmpString
                     _FindStringHead
 ---------------------------------------------------------------------------------
 (3) _FindStringHead                                       6     6      0     208
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (3) _CmpString                                            6     6      0     252
                                              2 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (2) _GetBuffer                                            7     4      3    1943
                                              4 COMMON     5     2      3
                                              0 BANK0      2     2      0
                       _EUSART1_Read *
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         2     2      0      37
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Delay1s                                              5     5      0      68
                                              2 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0       0
                                              1 COMMON     1     1      0
                _EUSART1_Receive_ISR
               _EUSART1_Transmit_ISR
                _EUSART2_Receive_ISR
               _EUSART2_Transmit_ISR
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CloseGPRS
     _Delay1s
     _GetBuffer
       _EUSART1_Read *
     _RecIsRight
       _CmpString
       _FindStringHead
     _SendDat2GPRS
       _EUSART1_Write
       _strlen (ARG)
     _strlen
   _Delay1s
   _EUSART2_Read
   _GPRSDialing
     _Delay1s
     _GetBuffer
       _EUSART1_Read *
     _RecIsRight
       _CmpString
       _FindStringHead
     _SendDat2GPRS
       _EUSART1_Write
       _strlen (ARG)
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
     _EUSART2_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _StringCmpInit

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_Receive_ISR
   _EUSART1_Transmit_ISR
   _EUSART2_Receive_ISR
   _EUSART2_Transmit_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      39       5       71.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      A      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
ABS                  0      0     19F      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     19F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue May 23 19:32:48 2017

           _eusart1TxBufferRemaining 0058                          __CFG_CP$OFF 0000  
                                 _K3 031A                      _timer0ReloadVal 007A  
                        main@RightID 0045                                  l222 04E3  
                                l165 047D                                  l158 0504  
                                _RE0 0080                         __CFG_BORV$LO 0000  
                                wreg 0009                      __end_of_KCNXCFG 02C4  
                       __CFG_LVP$OFF 0000                                 l2204 00C3  
                               l2230 0134                                 l2206 00CA  
                               l2302 0262                                 l2216 00F8  
                               l2162 0492                                 l2218 00FF  
                               l2148 0472                                 l2260 01B7  
                               l2244 0172                                 l2228 012D  
                               l2174 0498                                 l2262 01BE  
                               l2246 0179                                 l2190 0085  
                               l2342 0453                                 l1650 0364  
                               l1810 0540                                 l2290 023C  
                    __end_of_KTCPCFG 02A6                                 l1652 0327  
                               l1812 054C                                 l2276 01FC  
                               l2348 0465                                 l1654 0369  
                               l1670 0435                                 l2278 0203  
                               l1672 0409                                 l2288 0231  
                               l1674 043A                                 l1766 04BA  
                               l1776 0625                                 l1778 0635  
                               _CIMI 0310                                 _CREG 02FA  
                               _CPIN 0305                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATD 010F                                 _LATE 0110  
                               _LATF 038C                                 _LATG 038D  
                               _TMR0 0015                                 _WPUB 020D  
                               _WPUD 020F                                 _WPUE 0210  
                               _WPUG 048D                ??_EUSART2_Receive_ISR 0070  
                      _EUSART1_Write 0471                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _main 043C  
                      ?_EUSART1_Read 0070                        ?_EUSART2_Read 0070  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 start 0045  
                      __CFG_IESO$OFF 0000                      __end_of_Delay1s 04DC  
       __end_of_EUSART2_Transmit_ISR 0578                         ?_GPRSDialing 0024  
                      __CFG_MCLRE$ON 0000       __size_of_OSCILLATOR_Initialize 0005  
      __end_of_OSCILLATOR_Initialize 064E                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                                _CGREG 02EE  
                   __end_of_REC_CREG 02EE                                _LATB2 086A  
                              _LATB4 086C                                _LATD6 087E  
                              i1l110 0027                                i1l112 0031  
                              i1l106 0013                                i1l115 0040  
                              i1l108 001D                                i1l171 0593  
                              i1l235 0575                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                              _TRISF 030C                                _TRISG 030D  
                      _StringCmpInit 051E                 _EUSART1_Transmit_ISR 0578  
                     ?_EUSART1_Write 0070                       __CFG_BOREN$OFF 0000  
                              pclath 000A                       ??_EUSART1_Read 0072  
                     ??_EUSART2_Read 0072                                status 0003  
                              wtemp0 007E                           _RecIsRight 061F  
                       __end_of_CIMI 031A                         __end_of_CREG 0305  
                       __end_of_CPIN 0310                   GPRSDialing@Dialing 0024  
                    __initialization 0047           __end_of_EUSART1_Initialize 061F  
                       __end_of_main 0471                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070                   __size_of_GetBuffer 0024  
                             ??_main 0044                       ?_StringCmpInit 0070  
                 __size_of_CmpString 004E                   __size_of_CloseGPRS 0049  
              ?_EUSART1_Transmit_ISR 0070           __end_of_EUSART2_Initialize 0605  
           _eusart2TxBufferRemaining 0057                               _APFCON 011D  
                  __end_of_KTCPSTART 02D5                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELD 018F  
                             _ANSELE 0190                               _ANSELF 040C  
                             _ANSELG 040D                    __end_of_REC_CGREG 02E2  
                             _RC1REG 0199                               _RC2REG 0491  
                             _RC1STA 019D                               _RC2STA 0495  
                      ?_SendDat2GPRS 0020                               i1l1822 05D3  
                             i1l1848 05B7                               u123_20 003A  
                             u124_24 003C                            ??_Delay1s 0072  
                             _REC_OK 0322                               _OSCCON 0099  
                             _TX1REG 019A                               _TX2REG 0492  
                             _TX1STA 019E                               _TX2STA 0496  
                             _TRISE0 0480              __size_of_FindStringHead 0039  
                     __CFG_PWRTE$OFF 0000                       __CFG_STVREN$ON 0000  
                             _strlen 053C                 _EUSART2_Transmit_ISR 055A  
                    ??_EUSART1_Write 0072                      _eusart1RxBuffer 01A0  
                     ??_SendDat2GPRS 0078                      _eusart2RxBuffer 02A0  
                    _eusart1TxBuffer 0120                    _SYSTEM_Initialize 0637  
                    _eusart2TxBuffer 0220              __end_of__initialization 0070  
                  __end_of_GetBuffer 04B9                   ?_SYSTEM_Initialize 0070  
                      __end_of_CGREG 02FA                          ?_RecIsRight 0070  
                  __end_of_CmpString 0373                    __end_of_CloseGPRS 03BC  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0073  
               __size_of_GPRSDialing 020C                           __end_of_K3 0322  
                    ??_StringCmpInit 0072                 __end_of_EUSART1_Read 051E  
               __end_of_EUSART2_Read 04FD               ??_EUSART1_Transmit_ISR 0070  
                      RecIsRight@scr 0078                       _OPTION_REGbits 0095  
              TMR0_ISR@CountCallBack 0046                ?_EUSART2_Transmit_ISR 0070  
        __end_of_EUSART1_Receive_ISR 05EA              FindStringHead@scr_input 0077  
          __end_of_SYSTEM_Initialize 0643                        _eusart1RxHead 004F  
                      _eusart2RxHead 004A                        _eusart1TxHead 007B  
                      _eusart1RxTail 004E                        _eusart2TxHead 004C  
                         __pbssBANK0 0046                           __pbssBANK2 0120  
                         __pbssBANK3 01A0                           __pbssBANK4 0220  
                         __pbssBANK5 02A0                        _eusart1TxTail 0050  
                      _eusart2RxTail 0049                        _eusart2TxTail 004B  
                     GPRSDialing@scr 002A                EUSART2_Read@readValue 0073  
                         __pmaintext 043C                           __pintentry 0004  
                      GetBuffer@str1 0021                              ?_strlen 0072  
                            _KCNXCFG 02A6                              _KTCPCFG 0280  
                            _SP1BRGH 019C                              _SP1BRGL 019B  
                            _SP2BRGH 0494                              _SP2BRGL 0493  
                __size_of_RecIsRight 0018          __end_of_EUSART2_Receive_ISR 05CE  
                            _OSCSTAT 009A                              _Delay1s 04B9  
                     _FindStringHead 0403                 __end_of_SendDat2GPRS 05B2  
                            __ptext1 051E                              __ptext2 0637  
                            __ptext3 03BC                              __ptext4 0649  
                            __ptext5 05EA                              __ptext6 0605  
                            __ptext7 0074                              __ptext8 04DC  
                            __ptext9 0373                      __size_of_strlen 001E  
              _OSCILLATOR_Initialize 0649               ??_EUSART2_Transmit_ISR 0070  
                 _EUSART1_Initialize 0605             ??_PIN_MANAGER_Initialize 0072  
                          _IOCBFbits 0396                            _IOCBNbits 0395  
         __size_of_SYSTEM_Initialize 000C                              clrloop0 0644  
                    SendDat2GPRS@cnt 0023                 end_of_initialization 0070  
                ?_EUSART1_Initialize 0070               __end_of_FindStringHead 043C  
                          _KTCPSTART 02C4                            _REC_CGREG 02D5  
                 _EUSART2_Initialize 05EA                __size_of_EUSART1_Read 0021  
              __size_of_EUSART2_Read 0021                         __pstringtext 0280  
               ??_EUSART1_Initialize 0072                  ?_EUSART2_Initialize 0070  
                            strlen@s 0072                            _PORTBbits 000D  
                   __CFG_FOSC$INTOSC 0000               StringCmpInit@scr_input 0072  
                EUSART1_Write@txData 0073                 ??_EUSART2_Initialize 0072  
                    ?_FindStringHead 0070                         _EUSART1_Read 04FD  
                     __end_of_REC_OK 0325                         _EUSART2_Read 04DC  
                       ??_RecIsRight 0078                   SendDat2GPRS@cmdlgt 0022  
                          _GetBuffer 0495                            _CmpString 0325  
                          _CloseGPRS 0373               ?_OSCILLATOR_Initialize 0070  
                     __end_of_strlen 055A                  start_initialization 0047  
    __size_of_PIN_MANAGER_Initialize 0047                   __end_of_RecIsRight 0637  
              __end_of_EUSART1_Write 0495                    GetBuffer@uart_rec 0075  
                      CloseGPRS@str1 0025                        ??_GPRSDialing 0025  
              __size_of_SendDat2GPRS 001C                           ?_GetBuffer 0074  
                         ?_CmpString 0070                           ?_CloseGPRS 0070  
                           ??_strlen 0074                       _eusart1RxCount 004D  
                     _eusart2RxCount 0048                __end_of_StringCmpInit 053C  
                        __pbssCOMMON 007A                            ___latbits 0003  
      __size_of_EUSART1_Transmit_ISR 001E                        __pcstackBANK0 0020  
                      __pcstackBANK1 00A0                        __pcstackBANK2 0160  
                           ?_Delay1s 0070                      GPRSDialing@str1 00A0  
                       _SendDat2GPRS 0596         __size_of_EUSART1_Receive_ISR 001C  
                          __pnvBANK0 0057               _PIN_MANAGER_Initialize 03BC  
                       GetBuffer@cnt 0020                  __end_of_GPRSDialing 0280  
       ??_INTERRUPT_InterruptManager 0071                             _BAUD1CON 019F  
                           _BAUD2CON 0497                       GetBuffer@bytes 0074  
                 CmpString@scr_input 0077         __size_of_EUSART2_Receive_ISR 001C  
                           Delay1s@i 0073                             _LATBbits 010D  
                          clear_ram0 0643                             _PIE1bits 0091  
                           _PIE4bits 0094                             _REC_CREG 02E2  
__size_of_INTERRUPT_InterruptManager 0041                             _ATString 0051  
                           _PIR1bits 0011                             _PIR4bits 0014  
                        ??_GetBuffer 0077                          ??_CmpString 0072  
                        ??_CloseGPRS 0024                          Delay1s@time 0072  
                  SendDat2GPRS@ATcmd 0020        __size_of_EUSART2_Transmit_ISR 001E  
                   ??_FindStringHead 0072                      _GPRSDialing$870 0028  
                    _GPRSDialing$871 0160                      _GPRSDialing$872 0162  
                    _GPRSDialing$873 0164                      _GPRSDialing$874 0166  
                    _GPRSDialing$875 0168                      _GPRSDialing$869 0026  
                       CmpString@cnt 0076                     __size_of_Delay1s 0023  
              EUSART1_Read@readValue 0073                         CloseGPRS@scr 0043  
                        _GPRSDialing 0074              ??_OSCILLATOR_Initialize 0072  
        __size_of_EUSART1_Initialize 001A                FindStringHead@postion 0076  
                           __ptext10 053C                             __ptext11 0596  
                           __ptext20 055A                             __ptext12 0471  
                           __ptext21 05B2                             __ptext13 061F  
                           __ptext22 0578                             __ptext14 0403  
                           __ptext23 05CE                             __ptext15 0325  
                           __ptext16 0495                             __ptext17 04FD  
                           __ptext18 04B9          __size_of_EUSART2_Initialize 001B  
                      __size_of_main 0035                           _RC1STAbits 019D  
                         _RC2STAbits 0495                             int$flags 007E  
 __end_of_INTERRUPT_InterruptManager 0045           _INTERRUPT_InterruptManager 0004  
                _EUSART1_Receive_ISR 05CE                           _INTCONbits 000B  
                           intlevel1 0000                 ?_EUSART1_Receive_ISR 0070  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
       __end_of_EUSART1_Transmit_ISR 0596               __size_of_EUSART1_Write 0024  
                _EUSART2_Receive_ISR 05B2                           _OPTION_REG 0095  
                           strlen@cp 0076                ??_EUSART1_Receive_ISR 0070  
     __end_of_PIN_MANAGER_Initialize 0403                 ?_EUSART2_Receive_ISR 0070  
             __size_of_StringCmpInit 001E  
